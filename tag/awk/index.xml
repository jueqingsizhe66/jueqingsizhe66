<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>awk | 志不达者智不坚 言不信者行不果</title>
    <link>https://jueqingsizhe66.github.io/tag/awk/</link>
      <atom:link href="https://jueqingsizhe66.github.io/tag/awk/index.xml" rel="self" type="application/rss+xml" />
    <description>awk</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>©2023</copyright><lastBuildDate>Mon, 14 Mar 2022 14:34:00 +0800</lastBuildDate>
    <image>
      <url>https://jueqingsizhe66.github.io/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_3.png</url>
      <title>awk</title>
      <link>https://jueqingsizhe66.github.io/tag/awk/</link>
    </image>
    
    <item>
      <title>awk处理9G级别文件</title>
      <link>https://jueqingsizhe66.github.io/post/awk%E5%A4%84%E7%90%868g%E7%BA%A7%E5%88%AB%E6%96%87%E4%BB%B6/</link>
      <pubDate>Mon, 14 Mar 2022 14:34:00 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/post/awk%E5%A4%84%E7%90%868g%E7%BA%A7%E5%88%AB%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;p&gt;如何处理9G级别文件，直接导入性价比不高，那就按照流处理器进行
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://jueqingsizhe66.github.io/ox-hugo/2022-03-13_22-05-51_image.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;awk处理单文件级别&#34;&gt;awk处理单文件级别&lt;/h2&gt;
&lt;p&gt;awk轻松解决大文件级别的遍历问题，并提取需要的字段。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-awk&#34; data-lang=&#34;awk&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;awk&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/_028\./{print $1,&amp;#34;,&amp;#34;,$3,&amp;#34;,&amp;#34;,$4;}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;js_df_20220309&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;csv&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20220309&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_28&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;csv&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## /_028\./ 的28表示第28台风电机组，$1,$3,$4 分别为时间、物理量、值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## /_029\./ 的29表示第29台风电机组，$1,$3,$4 分别为时间、物理量、值&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;那如何提取所有机组信息，每个机组都变换一下
那如何解决一个文件夹内的所有文件问题？ 每个文件名字都包含年月日信息，另外awk的模式不能包含变量，那么只能说awk解析的时候，我们必须把字面值提供给awk了&lt;/p&gt;
&lt;p&gt;第一步：尝试解析2级循环，循环91台机组&lt;/p&gt;
&lt;h2 id=&#34;seq等宽输出&#34;&gt;seq等宽输出&lt;/h2&gt;
&lt;p&gt;seq等宽输出可以采用-w option，这样输出就是相同长度，可以提供模式匹配需要&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;seq -w &lt;span style=&#34;color:#ae81ff&#34;&gt;001&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;091&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我的测试代码:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-awk&#34; data-lang=&#34;awk&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;day&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;csv&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;day1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;day&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;};&lt;span style=&#34;color:#a6e22e&#34;&gt;realDay&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;day1&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;};&lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;realDay&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;turbine&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;seq&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;w&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;003&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;turbinePattern&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_$turbine\.&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;outputFilename&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;realDay&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;turbine&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.csv&amp;#34;&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;turbinePattern&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;turbine&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;outputFilename&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;done&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;错误的命令&#34;&gt;错误的命令&lt;/h3&gt;
&lt;p&gt;下面命令无法获得你想要单台机组信息，因为$turbinePattern根本就不会解析为`_028.`的 模式，因为//不能解析变量，所以解决办法是我们提供斜杠号之间变量值&lt;/p&gt;
&lt;p&gt;但是perl的模式匹配中确实可以，参考&lt;a href=&#34;https://jueqingsizhe66.github.io/post/perl%e6%8b%86%e5%88%86%e5%a4%a7%e6%96%87%e4%bb%b6%e5%88%b0excel%e8%a1%a8/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;perl拆分大文件&lt;/a&gt; 可见perl正则的强大。&lt;/p&gt;
&lt;p&gt;单行执行程序：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-awk&#34; data-lang=&#34;awk&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;day&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;csv&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;day1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;day&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;};&lt;span style=&#34;color:#a6e22e&#34;&gt;realDay&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;day1&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;};&lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;realDay&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;turbine&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;seq&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;w&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;003&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;turbinePattern&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_$turbine\.&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;outputFilename&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;realDay&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;turbine&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.csv&amp;#34;&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;awk&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/$turbinePattern/{print}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;turbinePattern&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;turbine&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;outputFilename&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;done&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;bash包装awk可执行语句&#34;&gt;bash包装awk可执行语句&lt;/h2&gt;
&lt;p&gt;我们可以包装awk命令，最后交给bash执行(很重要的bash命令)&lt;/p&gt;
&lt;h3 id=&#34;我的awk命令封装测试代码--重大突破&#34;&gt;我的awk命令封装测试代码(重大突破)&lt;/h3&gt;
&lt;p&gt;注意双引号要用反斜杠去引用！（去引用是一个基本的业务操作）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-awk&#34; data-lang=&#34;awk&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;86151&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@DESKTOP&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;O9MPS4C&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cygdrive&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;js_df&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ceshi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;awk -F\&amp;#34;,\&amp;#34; &amp;#39;{print $2}&amp;#39; 20200109_28.csv &amp;gt;heklo.csv&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bash&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;86151&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@DESKTOP&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;O9MPS4C&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cygdrive&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;js_df&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;d1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_001\.&amp;#34;&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;cmd&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;awk -F\&amp;#34;,\&amp;#34; &amp;#39;/$d1/{print \$1,\&amp;#34;,\&amp;#34;,\$3,\&amp;#34;,\&amp;#34;,\$4;}&amp;#39; js_df_20220109.csv &amp;gt; 20220009_001.csv&amp;#34;&lt;/span&gt; ;&lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cmd&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bash&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;最终的成品&#34;&gt;最终的成品&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;遍历文件&lt;/li&gt;
&lt;li&gt;文件名字截取重要部分&lt;/li&gt;
&lt;li&gt;生成所有机组的匹配模式&lt;/li&gt;
&lt;li&gt;生成awk命令字符串，包装机组模式变量&lt;/li&gt;
&lt;li&gt;bash执行&lt;/li&gt;
&lt;/ol&gt;
&lt;!--listend--&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-awk&#34; data-lang=&#34;awk&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;day&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;csv&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;day1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;day&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;};&lt;span style=&#34;color:#a6e22e&#34;&gt;realDay&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;day1&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;};&lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;realDay&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;turbine&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;seq&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;w&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;001&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;091&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;turbinePattern&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_$turbine\.&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;outputFilename&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;output&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;realDay&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;turbine&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.csv&amp;#34;&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;cmd&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;awk -F\&amp;#34;,\&amp;#34; &amp;#39;/$turbinePattern/{print \$1,\&amp;#34;,\&amp;#34;,\$3,\&amp;#34;,\&amp;#34;,\$4;}&amp;#39; $day &amp;gt;$outputFilename&amp;#34;&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cmd&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bash&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;done&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;sed存在的意义&#34;&gt;sed存在的意义&lt;/h3&gt;
&lt;p&gt;awk于1977年出生，现在46岁了，sed比awk大2-3岁。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;快速读取前面几行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最后一行或者中间行快速插入相关信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最流行的替换功能`sed &amp;rsquo;s/hell//&amp;rsquo; file`, 如果加入&amp;quot;-i&amp;quot;选项则表示直接在文件中修改;&lt;/p&gt;
&lt;p&gt;还可以指定行进行修改，比如&amp;quot;sed &amp;lsquo;3,6s/my/yours/g&amp;rsquo; file&amp;quot;&lt;/p&gt;
&lt;p&gt;每行匹配可能有多个，还可以指定每行第几个匹配进行修改，比如第二个匹配修改&amp;quot;sed &amp;lsquo;3,6s/my/yours/2&amp;rsquo; file&amp;quot;
比如第三个匹配修改&amp;quot;sed &amp;lsquo;3,6s/my/yours/3&amp;rsquo; file&amp;quot;&lt;/p&gt;
&lt;p&gt;还比如第三个以后的所有匹配都修改,加入g即可，&amp;ldquo;sed &amp;lsquo;3,6s/my/yours/3g&amp;rsquo; file&amp;rdquo;&lt;/p&gt;
&lt;p&gt;还比如匹配位置后面连续3行， &amp;ldquo;$ sed &amp;lsquo;&lt;em&gt;dog&lt;/em&gt;,+3s/^/# /g&amp;rsquo; pets.txt&amp;rdquo; +3代表匹配后的连续3行&lt;/p&gt;
&lt;p&gt;命令还可以打包 # 对3行到第6行，匹配_This_成功后，再匹配_fish_，成功后执行d命令
$ sed &amp;lsquo;3,6 {/This/{/fish/d}}&amp;rsquo; pets.txt&lt;/p&gt;
&lt;p&gt;参考&lt;a href=&#34;https://coolshell.cn/articles/9104.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cool sed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sed &amp;rsquo;s/my/[&amp;amp;]/g&amp;rsquo; my.txt  ,&amp;amp;代表匹配的my&lt;/p&gt;
&lt;p&gt;sed &amp;lsquo;N;s/\n/,/&amp;rsquo; pets.txt  N命令快速合并前后两行(1,2行合并为1行，3，4行合并为1行)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以学习一下&lt;a href=&#34;https://coolshell.cn/articles/author/haoel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;陈浩的酷壳博客&lt;/a&gt;
sed很关键的几个概念是地址(行或者模式指定),!是否执行，cmd命令流(增删查找)&lt;/p&gt;
&lt;p&gt;10q,代表读到第十行则quit！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10q&amp;#39;&lt;/span&gt; js_df_20220109.csv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2022-01-09 00:00:01,1641657601032,JS_DF_1_008.1.DD,0.0,,tenant_system,,1641657600,1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2022-01-09 00:00:01,1641657601032,JS_DF_1_008.1.DE,34.7,,tenant_system,,1641657600,1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;最后一行或者中间行快速插入相关信息&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@www ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed -i &amp;#39;$a # This is a test&amp;#39; regular_express.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@www ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# cat regular_express.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;runoob!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;google!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;taobao!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;facebook!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zhihu-
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;weibo-
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This is a test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;由於 $ 代表的是最后一行，而 a 的动作是新增，因此该文件最后新增 &lt;span style=&#34;color:#75715e&#34;&gt;# This is a test！&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed 的 -i 选项可以直接修改文件内容，这功能非常有帮助！举例来说，如果你有一个 &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; 万行的文件，你要在第 &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; 行加某些文字，此时使用 vim 可能会疯掉！因为文件太大了！那怎办？就利用 sed 啊！透过 sed 直接修改/取代的功能，你甚至不需要使用 vim 去修订&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;awk获取机组台数信息&#34;&gt;awk获取机组台数信息&lt;/h3&gt;
&lt;p&gt;awk字符串分割（多个分割模式） uniq去重(uniq -c 加上统计功能）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-awk&#34; data-lang=&#34;awk&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;awk&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{split($3,a,&amp;#34;[_.]&amp;#34;);print a[4];}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tmp&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;test&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;csv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;uniq&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然也可以使用 &lt;code&gt;substr&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-awk&#34; data-lang=&#34;awk&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;awk&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;F&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print substr($3,6)}&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#  ---&amp;gt;  表示是从第3个字段里的第6个字符开始，一直到设定的分隔符&amp;#34;,&amp;#34;结束.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;substr&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;#---&amp;gt;  表示是从第3个字段里的第10个字符开始，截取8个字符结束.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;substr&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;)     &lt;span style=&#34;color:#75715e&#34;&gt;#---&amp;gt;  表示是从第3个字段里的第6个字符开始，一直到结尾&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>批量修改pdf文件名以及创建wiki Links</title>
      <link>https://jueqingsizhe66.github.io/archives/pi-liang-xiu-gai-pdfwen-jian-ming-yi-ji-chuang-jian-wiki-links/</link>
      <pubDate>Wed, 05 Jul 2017 13:44:15 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/archives/pi-liang-xiu-gai-pdfwen-jian-ming-yi-ji-chuang-jian-wiki-links/</guid>
      <description>&lt;p&gt;bash、awk、sed等的好处，就是可以专一的完成你的需求，但是也存在很多不足，借着批量重命令和批量导出链接到vimwiki的wiki中，形成[[local:文件名路径]]的过程，巩固学习linux命令, it is homework(learning process)。&lt;/p&gt;
&lt;h1 id=&#34;提取路径用于vimwiki中当作快速链接&#34;&gt;提取路径，用于vimwiki中，当作快速链接&lt;/h1&gt;
&lt;p&gt;如果IFS是”“，那么相当于一个文件名特别长会分成很多行显示，所以这边设置为 IFS=$‘\n’&lt;/p&gt;
&lt;p&gt;[a-z]star替换原先的star，目的是去除点号。
使用echo和管道命令传递信息给sed或者awk等
在sed中似乎用^$等位置字符进行替换,如果是文件夹则进行名字替换，并且遍历当前文件夹
使用双重for循环进行控制&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;IFS=$&#39;\n&#39;;
count=1;
countDir=1;
specialCharacter=&#39;pages&#39;;
generateChapter() # @Description : 对不同文件进行不同处理
                  # @usage       : generatechapter
{
    # 妙用find 得到当前目录的相对路径 不需要不断的进入目录
    for var2 in `find . -name &amp;quot;[a-z]*&amp;quot;`
    do
        if [[ -d  $var2 ]] # &amp;lt; cannot . Error
        then
            #echo &amp;quot;fuck&amp;quot;
            var=`echo $var2|sed &#39;s/^./F:\/ScienceBase.Attachments\/WindEnergy/g&#39;|sed &#39;s/^/[[local:/g&#39;|sed &#39;s/$/]]/g&#39;`
            printf &amp;quot;= $countDir. [ ] $var =\n&amp;quot; # 使用#号来删除之前的点号
            countDir=$(($countDir+1));

            for tempVar in `find $var2 -name &amp;quot;*.pdf&amp;quot;`
            do
                temp1=`echo $tempVar|sed &#39;s/^./F:\/ScienceBase.Attachments\/WindEnergy/g&#39;` 
    #            # echo ${var2} ${var2:0:$((${var2}-18))}.pdf  
                 varr=`echo $temp1|sed &#39;s/^/[[local:/g&#39;|sed &#39;s/$/]]/g&#39;`;
                #var=`echo $var2|sed &#39;s/^./F:\/ScienceBase.Attachments\/WindEnergy/g&#39;|sed &#39;s/^/[[local:/g&#39;|sed &#39;s/$/]]/g&#39;` 
                printf &amp;quot;\t$count. [ ] ${varr}\n&amp;quot; # 这边需要去除到第一个点号,这是才得到的处理方法
                count=$(($count+1));

            done
            count=1;
        fi
        

    done
}

generateChapter
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;删除不必要的名字特殊字符重命名&#34;&gt;删除不必要的名字特殊字符，重命名&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;删除文件pdf名字不必要的（pages 110—30）等信息。&lt;/li&gt;
&lt;li&gt;使用awk printf产生逗号分隔字符串，使用xargs -d, mv提取以逗号分隔的字段， 并且对文件名进行重命名（在我找的多种方法中，就他有效）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xargs -n 2&lt;/code&gt; 表示按照空格划分的方式 提取两个参数，逐个进行。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/bash -
#===============================================================================
#
#          FILE: b.sh
#
#         USAGE: ./b.sh
#
#   DESCRIPTION: 
#
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: Ye Zhao Liang (Vimer), zhaoturkkey@163.com
#  ORGANIZATION: BrokenSun
#       CREATED: 2017/7/4 23:01:31
#      REVISION:  ---
#===============================================================================

IFS=$&#39;\n&#39;;
count=1;
countDir=1;
specialCharacter=&#39;pages&#39;;
generateChapter() # @Description : 对不同文件进行不同处理
                  # @usage       : generatechapter
{
    # 妙用find 得到当前目录的相对路径 不需要不断的进入目录
    #for var2 in `find . -name &amp;quot;*&amp;quot;`
    for var2 in `find . -name &amp;quot;windEnergy201*&amp;quot;`
    do
        if [[ -d  $var2 ]] # &amp;lt; cannot . Error
        then
                cd $var2;
                for var in `find . -name &amp;quot;*&amp;quot;`;do echo $var|awk &#39;/pages/{printf(&amp;quot;%s,%s&amp;quot;,$0,substr($0,0,length($0)-22)&amp;quot;.pdf&amp;quot;)|&amp;quot;xargs -d, mv &amp;quot;;}&#39;;done 
                cd ..;
        fi

    done
}

generateChapter

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意可以使用 ，学到技巧1中的检测工具，查看你的修改是否完全正确，如果出现文件名中有逗号的情况，通常pages没有删掉，原因是xargs也是按照，号进行分割，所以改进方法是使用分号输出&lt;/p&gt;
&lt;p&gt;改进代码&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;for var in `find . -name &amp;quot;*&amp;quot;`;do echo $var|awk &#39;/pages/{printf(&amp;quot;%s;%s&amp;quot;,$0,substr($0,0,length($0)-22)&amp;quot;.pdf&amp;quot;)|&amp;quot;xargs -d; mv &amp;quot;;}&#39;;done 
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;最终结果&#34;&gt;最终结果&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;= 1. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system]] =
  1. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch1.pdf]]
  2. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch10.pdf]]
  3. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch11.pdf]]
  4. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch12.pdf]]
  5. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch13.pdf]]
  6. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch14.pdf]]
  7. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch15.pdf]]
  8. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch16.pdf]]
  9. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch2.pdf]]
  10. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch3.pdf]]
  11. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch4.pdf]]
  12. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch5.pdf]]
  13. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch6.pdf]]
  14. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch7.pdf]]
  15. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch8.pdf]]
  16. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch9.pdf]]
  17. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/fmatter.pdf]]
  18. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/index.pdf]]
  19. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/scard.pdf]]
= 2. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/Offshore Wind Energy Generation Control, Protection, and Integration to Electrical Systems/offshoreWindEnergy]] =

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;#学到的技巧&lt;/p&gt;
&lt;p&gt;awk两种表示判断,if判断得用分号 &lt;a href=&#34;http://blog.csdn.net/qq_31382921/article/details/55094907&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; 如果不用分号隔开会报错 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注意分号！！&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-awk&#34;&gt;awk &#39;{if ($1==1) print &amp;quot;A&amp;quot;; else if ($1==2) print &amp;quot;B&amp;quot;; else print &amp;quot;C&amp;quot;}&#39;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;对应的bash使用的是if,then,else,fi的形式，且不用分号间隔语句&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;
 for var in `find . -name &amp;quot;*&amp;quot;`
    do
        if [[ -d  $var ]] # &amp;lt; cannot . Error
        then
            printf &amp;quot;$var\n&amp;quot; # 使用#号来删除之前的点号
        else
            printf &amp;quot;\t${var}\n&amp;quot; # 这边需要去除到第一个点号,这是才得到的处理方法
        fi

    done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;awk的’/page/{}‘等效于’if($0~/dfd/){}’
下面的命令，也是一种检查上述程序正确与否的一种工具,可以看出哪些pdf文件依然有pages的字段&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;YeZhao@DESKTOP-YeZhao /cygdrive/f/ScienceBase.Attachments/WindEnergy
$ find . -name &amp;quot;*&amp;quot;|awk &#39;{if($0~/pages/){print $0}}&#39;
./windEnergy2009-i6/Characterizing future large, rapid changes in aggregated wind power using Numerical Weather Prediction spatial fields (pages 542–555).pdf
./windEnergy2012-i1/Modeling wake effects in large wind farms in complex terrain the problem, the methods and the issues (pages 161–182).pdf
./windEnergy2012-i2/The Betz–Joukowsky limit on the contribution to rotor aerodynamics by the British, German and Russian scientific schools (pages 335–344).pdf
./windEnergy2012-i3/Computational fluid dynamics simulation of the aerodynamics of a high solidity, small-scale vertical axis wind turbine (pages 349–361).pdf
./windEnergy2012-i3/Correction factors for NRG #40 anemometers potentially affected by dry friction whip characterization, analysis, and validation (pages 489–502).pdf
./windEnergy2012-i4/Analysis of wake measurements from the ECN Wind Turbine Test Site Wieringermeer, EWTW (pages 575–591).pdf
./windEnergy2012-i5/Atmospheric stability and turbulence fluxes at Horns Rev—an intercomparison of sonic, bulk and WRF model data (pages 717–731).pdf
./windEnergy2013-11/Modeling, simulation and control of a wind turbine with a hydraulic transmission system (pages 1259–1276).pdf
./windEnergy2013-8/Indicial lift response function an empirical relation for finite-thickness airfoils, and effects on aeroelastic simulations (pages 681–693).pdf
./windEnergy2013-8/Simulating the dynamics of wind turbine blades part I, model development and verification (pages 694–710).pdf
./windEnergy2013-8/Simulating the dynamics of wind turbine blades part鈥塈I, model validation and uncertainty quantification (pages 741–758).pdf
..l
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;#2. awk的&lt;a href=&#34;http://blog.csdn.net/panpan639944806/article/details/19932543&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; BEGIN &lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-awk&#34;&gt;function name()
{}

BEGIN{
}
{
    
}
END{

}
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;3-awk--gsub-3&#34;&gt;3. awk &lt;a href=&#34;http://blog.sina.com.cn/s/blog_67e34ceb0100ybvg.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; gsub &lt;/a&gt;&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-awk&#34;&gt;echo &amp;quot;a b c 2011-11-22 a:d&amp;quot; | awk &#39;gsub(/-/,&amp;quot;&amp;quot;,$4)&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;#4. awk变量定义&lt;/p&gt;
&lt;p&gt;BEGIN中&lt;a href=&#34;http://blog.csdn.net/shangboerds/article/details/49449291&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; 定义1 &lt;/a&gt; , &lt;a href=&#34;http://jingyan.baidu.com/article/d45ad148fb46f269552b80cf.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; awk -v单行 &lt;/a&gt;定义变量&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.linuxidc.com/Linux/2015-04/115781.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; awk内置变量 &lt;/a&gt;, 包括FS,OFS,NR,NFR,NF,$0,$1,$2,ARGC,ARGV1等。&lt;/p&gt;
&lt;p&gt;#5.awk定义函数&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://bbs.chinaunix.net/thread-1424218-1-1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; awk的函数定义 &lt;/a&gt;是在BEGIN{},{},END{}之外的，和他们平级的关系&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-awk&#34;&gt;#!/usr/bin/awk -f
#===============================================================================
#
#          File:  func.awk
# 
#   Description:  awk -f func.awk file
#           file内容为400
# 
#   VIM Version:  7.0+
#        Author:  Ye Zhao Liang (Vimer), zhaoturkkey@163.com
#  Organization:  BrokenSun
#       Version:  1.0
#       Created:  2017/7/5 16:06:33
#      Revision:  ---
#       License:  Copyright (c) 2017, Ye Zhao Liang
#===============================================================================
# 
function b()
{
print &amp;quot;b.in.$1=&amp;quot;$1;
}
{
v=100; y=200
print &amp;quot;a.in.v=&amp;quot;v;
print &amp;quot;a.in.y=&amp;quot;y;

a(y);
b();
print &amp;quot;a.out.v=&amp;quot;v;
print &amp;quot;a.out.y=&amp;quot;y;
}


function a(y)
{
print &amp;quot;(a)v=&amp;quot;v;
v=v+$1+y;
y=300;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;6bash四种变量截取&#34;&gt;6.bash四种变量截取&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;${var#.*} 从左到右，满足#之后条件的最小长度
${var##.*} 从左到右，满足##之后条件的最大长度
${var%.*} 从右到左，满足%之后条件的最小长度
${var%%.*} 从右到左，满足%%之后条件的最小长度
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在awk中可以使用substr($1,0,length($1)–..)实现类似的功能。&lt;/p&gt;
&lt;p&gt;#7.bash中的包含关系&lt;/p&gt;
&lt;p&gt;包含： 即一个大的部分包含小的部分（member) 等价： 即两个东西等价(equal) 比较：一般是两个数，另外也可以是字符串。&lt;/p&gt;
&lt;p&gt;bash几种&lt;a href=&#34;http://www.cnblogs.com/ginsonwang/p/5525340.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; 包含关系用法  &lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;strA=&amp;quot;helloworld&amp;quot;
strB=&amp;quot;low&amp;quot;
if [[ $strA =~ $strB ]]
then
    echo &amp;quot;包含&amp;quot;
else
    echo &amp;quot;不包含&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;#8.awk去除左右空格&lt;/p&gt;
&lt;p&gt;第5个知识点阐述了函数的定义方式,现在来运用一下， awk&lt;a href=&#34;http://www.cnblogs.com/ginsonwang/p/5525340.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; 去除左右空格 &lt;/a&gt;，再一次使用中发现所有的文件名后缀中多了一个空格，于是尝试消掉空格，想着用awk实现。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-awk&#34;&gt;function ltrim(s) { sub(/^[ \t\r\n]+/, &amp;quot;&amp;quot;, s); return s }
function rtrim(s) { sub(/[ \t\r\n]+$/, &amp;quot;&amp;quot;, s); return s }
function trim(s) { return rtrim(ltrim(s)); }
BEGIN{
        FS=&amp;quot;,&amp;quot;
}

{
        $0 = rtrim($0);
        if($2!=&amp;quot;-&amp;quot; &amp;amp;&amp;amp; $3==&amp;quot;-&amp;quot;)
                a[$4]++;
        {
        if($4!=&amp;quot;-&amp;quot;)
                b[$4]++;
        else
                b[$5]++;
        }
}

END{
        print &amp;quot;   client    incr_num_day&amp;quot;;
        for(i in a) printf(&amp;quot;%10s   %d\n&amp;quot;,i,a[i])
        print &amp;quot;\n\n   client    all_num&amp;quot;;                                                                                                                                                     
        for(j in b) printf(&amp;quot;%10s   %d\n&amp;quot;,j,b[j]);
}

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;#9.awk调用系统命令&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/cy_cai/article/details/41908921&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; MEthod &lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ready:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;touch c.txt
touch d.txt&lt;/p&gt;
&lt;p&gt;II. a.txt:&lt;/p&gt;
&lt;p&gt;c.txt
d.txt&lt;/p&gt;
&lt;p&gt;III. code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-awk&#34;&gt;awk &#39;{cmd=&amp;quot;rm &amp;quot;$0;system(cmd)}&#39; a.txt   
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;10awk重定向和管道&#34;&gt;10.awk重定向和管道&lt;/h1&gt;
&lt;p&gt;有时候直接可以在awk使用管道，提供给shell,比如print|Sort,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-awk&#34;&gt;
awk &#39;{print $1, $2 | &amp;quot;sort&amp;quot; }&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;#11.windows下的cygwin使用脚本&lt;/p&gt;
&lt;p&gt;必须得使用&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;dos2unix.exe *脚本名字
dos2unix.exe a.sh
dos2unix.exe func.awk


&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样执行shell才有效。&lt;/p&gt;
&lt;h1 id=&#34;12awk性能比shell更高&#34;&gt;12.awk性能比shell更高&lt;/h1&gt;
&lt;p&gt;参考&lt;a href=&#34;http://www.cnblogs.com/chengmo/archive/2010/10/04/1842073.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; 链接 &lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;
性能比较

[chengmo@localhost nginx]# time (awk &#39;BEGIN{ total=0;for(i=0;i&amp;lt;=10000;i++){total+=i;}print total;}&#39;)
50005000

real    0m0.003s
user    0m0.003s
sys     0m0.000s
[chengmo@localhost nginx]# time(total=0;for i in $(seq 10000);do total=$(($total+i));done;echo $total;)
50005000

real    0m0.141s
user    0m0.125s
sys     0m0.008s 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;结论：在awk中执行算术运算，比在bash中执行更好一些。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>See From NoteExpress</title>
      <link>https://jueqingsizhe66.github.io/archives/see-from-noteexpress/</link>
      <pubDate>Thu, 18 May 2017 17:14:28 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/archives/see-from-noteexpress/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.inoteexpress.com/aegean/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; NoteExpress &lt;/a&gt; 是一个文档管理软件，用于管理参考文件，可以方便的word等进行关联插入相关参考文献。 然而他有一个样式编辑器,很普通，却是让我有点触动。&lt;/p&gt;
&lt;h1 id=&#34;三个定义&#34;&gt;三个定义&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;过滤系统：让你的程序获得合适的数据，在运算系统之前.[struts的拦截器];你需要进行过滤，才能得到满足运算需要的数据
运算系统：合适的数据进行算法运算，矩阵运算等
样式系统: 运算完的数据进行输出,很多美化的工作。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;linux的ls可以有很多选项，可以让你的结果不一样，这个选项的效果其实跟样式系统的效果是一致的，都是你对 现实的输出不满意，于是修改，使得你的输出更加perfect&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;
ls 
ls -ls 
ls -lsh  # 显示文件大小按照人类比较好识别的方式
ls -lsha # 显示隐藏文件

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;http://www.cnblogs.com/ggjucheng/archive/2013/01/13/2858470.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; awk &lt;/a&gt; 是linux重要的过滤工具，他就好象是一个鱼网过滤器一样，按照孔的形状过滤字段, 也叫做字段级别过滤器。  &lt;a href=&#34;http://www.iteye.com/topic/587673&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; sed &lt;/a&gt; 是一个行修改工具，行级别过滤器,  有&lt;a href=&#34;http://blog.csdn.net/itsenlin/article/details/21129405&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; 几种典型的模式 &lt;/a&gt; s,p,d,x,g,h etc&lt;/p&gt;
&lt;p&gt;但就是这么简单的几个系统，却是组成了很多业务系统的实现过程的定义，你可以很容易把它替换成为你当前正在处理的阶段，see here to there.&lt;/p&gt;
&lt;h1 id=&#34;one-sentence&#34;&gt;One Sentence&lt;/h1&gt;
&lt;p&gt;每个人都应该有自己的样式系统，this is your style, nobody can change you! Different Style System makes you different. 人应该有点脾气.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
