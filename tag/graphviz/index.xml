<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>graphviz | 30年磨一剑</title>
    <link>https://jueqingsizhe66.github.io/tag/graphviz/</link>
      <atom:link href="https://jueqingsizhe66.github.io/tag/graphviz/index.xml" rel="self" type="application/rss+xml" />
    <description>graphviz</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>©2021</copyright><lastBuildDate>Wed, 28 Sep 2016 17:14:53 +0800</lastBuildDate>
    <image>
      <url>https://jueqingsizhe66.github.io/images/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_3.png</url>
      <title>graphviz</title>
      <link>https://jueqingsizhe66.github.io/tag/graphviz/</link>
    </image>
    
    <item>
      <title>graphviz notebook</title>
      <link>https://jueqingsizhe66.github.io/blog/2016/09/28/graphviz-notebook/</link>
      <pubDate>Wed, 28 Sep 2016 17:14:53 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2016/09/28/graphviz-notebook/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.graphviz.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;graphviz&lt;/a&gt;可用于帮助你绘制工具之外和工具之内的想法。关于绘图的历史可以参看&lt;a href=&#34;http://www.merl.com/publications/TR2001-49&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;A short note of the graph drawing&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://graphviz.org/Download.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;graphviz下载链接&lt;/a&gt;, 安装很方便，一步一步进行即可，一般是在&lt;a href=&#34;http://graphviz.org/content/command-line-invocation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;命令行使用&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;下面是我记录学习的一些graphviz的笔记。只用pdf输出&lt;code&gt;dot -Tpdf *.dot -o *.pdf&lt;/code&gt;，
因为质量较好(矢量化输出)，但是特殊情况可以参考&lt;a href=&#34;http://graphviz.org/content/command-line-invocation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;output format&lt;/a&gt;,
因为不同的输出会在&lt;a href=&#34;http://graphviz.org/content/attrs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Node, Edge and Graph Attributes&lt;/a&gt; 节点、边、图中表现出不同的样式出来。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jueqingsizhe66.github.io/images/graphviz/main1.jpg&#34; alt=&#34;main1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jueqingsizhe66.github.io/images/graphviz/main2.jpg&#34; alt=&#34;main2&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;cfd&#34;&gt;CFD&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://jueqingsizhe66.github.io/images/graphviz/CFD.jpg&#34; alt=&#34;CFD&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-gnuplot&#34;&gt;digraph G{
    compound=true; // 这样lhead ltail指向cluster才有效
    edge [fontname=&amp;quot;SimSun&amp;quot;];
    graph[fontname=&amp;quot;SimHei&amp;quot;]
    node [shape=box, fontname=&amp;quot;KaiTi&amp;quot; size=&amp;quot;5,5&amp;quot;, style=filld, color=&amp;quot;&amp;quot;];
    node[style=filled,color=&amp;quot;lightblue&amp;quot;]

    rankdir=LR;
    {
    rank=same;
    before[label=&amp;quot;前处理&amp;quot;];   
    compute[label=&amp;quot;计算&amp;quot;];   
    after[label=&amp;quot;后处理&amp;quot;];   
    }
    
    subgraph cluster1{
        geometry[label=&amp;quot;几何建模&amp;quot;];
        mesh[label=&amp;quot;网格生成&amp;quot;];
        geometry-&amp;gt;mesh;
        }

    subgraph cluster2{
        initial[label=&amp;quot;初始化&amp;quot;];
        setting[label=&amp;quot;设置&amp;quot;];
        model[label=&amp;quot;湍流模型&amp;quot;];
        output[label=&amp;quot;输出&amp;quot;];
        initial-&amp;gt;setting-&amp;gt;model-&amp;gt;output;
        }

    subgraph cluster3{
       plane[label=&amp;quot;截面&amp;quot;];
       polyline[label=&amp;quot;多边形线&amp;quot;];
       chart[label=&amp;quot;表格&amp;quot;];
       pile[label=&amp;quot;批处理&amp;quot;];
       contour[label=&amp;quot;云图&amp;quot;];
        plane-&amp;gt;polyline-&amp;gt;chart;
        plane-&amp;gt;contour;
        }
    before-&amp;gt;compute-&amp;gt;after;
    before-&amp;gt;geometry[lhead=cluster1];
    compute-&amp;gt;initial[lhead=cluster2];
    after-&amp;gt;plane[lhead=cluster3];
    
}


&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;inner-图&#34;&gt;inner 图&lt;/h2&gt;
&lt;p&gt;注意使用circo生成，需要有一个回环圆。&lt;/p&gt;
&lt;p&gt;compound用于子图的lhead属性，不设置没效果。&lt;/p&gt;
&lt;p&gt;concentrate这里没什么作用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jueqingsizhe66.github.io/images/graphviz/inner.jpg&#34; alt=&#34;inner&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-gnuplot&#34;&gt;//circo -Tpdf inner.dot -o inner.pdf
digraph G{
    fontname=&amp;quot;SimSun&amp;quot;;
    fontsize=10;
    compound=true; // 这样lhead ltail指向cluster才有效
    edge[fontname=&amp;quot;SimSun&amp;quot;,arrowhead=vee,color=blue];
    graph[fontname=&amp;quot;SimHei&amp;quot;,color=lightgray];
    node[shape=box, fontname=&amp;quot;KaiTi&amp;quot;];
    //concentrate=true;
    //node[style=filled,color=&amp;quot;lightblue&amp;quot;];
    arrowsize=.5;

    concentrate=true;
    nodesep=0.5;
    ranksep=0.5;
    rankdir=BU;
    //rank=sink;
    //task[shape=polygon,sides=5,peripheries=2,label=&amp;quot;图像处理&amp;quot;,fillcolor=&amp;quot;#F1C40F&amp;quot;];

/*
    subgraph cluster_0{
        
    innerpoint[shape=point,width=0,height=0];
    innerpoint1[shape=point,width=0,height=0];
    innerpoint2[shape=point,width=0,height=0];
    innerpoint3[shape=point,width=0,height=0];
    innerpoint4[shape=point,width=0,height=0];
    innerpoint-&amp;gt;innerpoint1-&amp;gt;innerpoint2-&amp;gt;innerpoint3-&amp;gt;innerpoint4-&amp;gt;innerpoint[arrowsize=0.1];
    }

*/
    subgraph cluster_1{
        //rankdir=TB;
        label=&amp;quot;内&amp;quot;;
        style=filled;
        fillcolor=lightgray;
        //shape=ellpse;
        //edge[fontname=&amp;quot;SimSun&amp;quot;,arrowhead=vee,color=blue,style=dashed];
        //style=filled;
        //fillcolor=lightgray;
        //fillcolor=mintcream;
        //style=filled;

        {
            //node[style=filled,color=&amp;quot;chartreuse&amp;quot;];
            //node[style=filled,color=&amp;quot;palegreen&amp;quot;];
            //rank=same;
            node[color=red,shape=circle];
            edge[color=green,style=dashed]
            subgoal1[label=&amp;quot;内1&amp;quot;];
            step1[label=&amp;quot;内2&amp;quot;];
            step2[label=&amp;quot;内3&amp;quot;];
            step3[label=&amp;quot;内4&amp;quot;]
            step4[label=&amp;quot;内n&amp;quot;]
            subgoal1-&amp;gt; step1-&amp;gt;step2-&amp;gt;step3-&amp;gt;step4-&amp;gt;subgoal1;
        }
       
    }
 //           innerpoint-&amp;gt;{subgoal1 step1 step2 step3 step4}[color=red,style=dotted,ltail=cluster_0];

    outer1[label=&amp;quot;外1&amp;quot;];
    outer2[label=&amp;quot;外2&amp;quot;];
    outer3[label=&amp;quot;外3&amp;quot;];
    outer4[label=&amp;quot;外4&amp;quot;];
    outern[label=&amp;quot;外n&amp;quot;];

    subgoal1-&amp;gt;outern[ltail=cluster_1];
    step1-&amp;gt;outer1[ltail=cluster_1];
    step2-&amp;gt;outer2[ltail=cluster_1];
    step3-&amp;gt;outer3[ltail=cluster_1];
    step4-&amp;gt;outer4[ltail=cluster_1];
    
    outerf1[shape=point,width=0,height=0];
    outerf2[shape=point,width=0,height=0];
    outerf3[shape=point,width=0,height=0];
    outerf4[shape=point,width=0,height=0];
    outerfn[shape=point,width=0,height=0];

    outer1-&amp;gt;outerf1;
    outer2-&amp;gt;outerf2;
    outer3-&amp;gt;outerf3;
    outer4-&amp;gt;outerf4;
    outern-&amp;gt;outerfn;

    //{rank=same; innerpoint step4 outer4};

   
   

}

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;outer图&#34;&gt;outer图&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://jueqingsizhe66.github.io/images/graphviz/outer.jpg&#34; alt=&#34;outer&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-gnuplot&#34;&gt;//circo -Tpdf inner.dot -o inner.pdf
digraph G{
    fontname=&amp;quot;SimSun&amp;quot;;
    fontsize=10;
    compound=true; // 这样lhead ltail指向cluster才有效
    edge[fontname=&amp;quot;SimSun&amp;quot;,arrowhead=vee,color=blue];
    graph[fontname=&amp;quot;SimHei&amp;quot;,color=lightgray];
    node[shape=box, fontname=&amp;quot;KaiTi&amp;quot;];
    //concentrate=true;
    //node[style=filled,color=&amp;quot;lightblue&amp;quot;];
    arrowsize=.5;

    nodesep=0.5;
    ranksep=0.5;
    rankdir=BU;
    //center=true;
    //rank=sink;
    //task[shape=polygon,sides=5,peripheries=2,label=&amp;quot;图像处理&amp;quot;,fillcolor=&amp;quot;#F1C40F&amp;quot;];




    subgraph cluster_1{
        //rankdir=TB;
        label=&amp;quot;内&amp;quot;;
        style=filled;
        fillcolor=chartreuse;
        //shape=ellpse;
        //edge[fontname=&amp;quot;SimSun&amp;quot;,arrowhead=vee,color=blue,style=dashed];
        //style=filled;
        //fillcolor=lightgray;
        //fillcolor=mintcream;
        //style=filled;

        {
            //node[style=filled,color=&amp;quot;chartreuse&amp;quot;];
            //node[style=filled,color=&amp;quot;palegreen&amp;quot;];
            //rank=same;
            //innerpoint[shape=point,width=0,height=0];
            node[color=red,shape=circle];
            edge[color=&amp;quot;green&amp;quot;,style=dashed]
            subgoal1[label=&amp;quot;内1&amp;quot;];
            step1[label=&amp;quot;内2&amp;quot;];
            step2[label=&amp;quot;内3&amp;quot;];
            step3[label=&amp;quot;内4&amp;quot;]
            step4[label=&amp;quot;内n&amp;quot;]
            subgoal1-&amp;gt; step1-&amp;gt;step2-&amp;gt;step3-&amp;gt;step4-&amp;gt;subgoal1;

           // {subgoal1 step1 step2 step3 step4}-&amp;gt;innerpoint[color=&amp;quot;red&amp;quot;];
        }
       
    }
subgraph cluster_0{
    outer1[label=&amp;quot;外1&amp;quot;];
    outer2[label=&amp;quot;外2&amp;quot;];
    outer3[label=&amp;quot;外3&amp;quot;];
    outer4[label=&amp;quot;外4&amp;quot;];
    outern[label=&amp;quot;外n&amp;quot;];
    //outer1-&amp;gt;outer2-&amp;gt;outer3-&amp;gt;outer4-&amp;gt;outern-&amp;gt;outer1;
}
    outern-&amp;gt;step3;
    outer1-&amp;gt;step4;
    outer2-&amp;gt;subgoal1;
    outer3-&amp;gt;step1;
    outer4-&amp;gt;step2;
    
    outerf1[shape=point,width=0,height=0];
    outerf2[shape=point,width=0,height=0];
    outerf3[shape=point,width=0,height=0];
    outerf4[shape=point,width=0,height=0];
    outerfn[shape=point,width=0,height=0];
    //outerf1-&amp;gt;outerf2-&amp;gt;outerf3-&amp;gt;outerf4-&amp;gt;outerfn-&amp;gt;outerf1;

    outerf1-&amp;gt;outer3;
    outerf2-&amp;gt;outer2;
    outerf3-&amp;gt;outer1;
    outerf4-&amp;gt;outern;
    outerfn-&amp;gt;outer4;

   
   // outer1-&amp;gt;outer2-&amp;gt;outer3-&amp;gt;outer4-&amp;gt;outern-&amp;gt;outer1;
   

}

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;算法绘制&#34;&gt;算法绘制&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://jueqingsizhe66.github.io/images/graphviz/binary.jpg&#34; alt=&#34;algo&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-gnuplot&#34;&gt;digraph ast{
    size=&amp;quot;4,4&amp;quot;;
fontname=&amp;quot;Microsoft YaHei&amp;quot;;
fontsize=10;
node [shape=circle, fontname=&amp;quot;Microsoft YaHei&amp;quot;, fontsize=10];
edge [fontname=&amp;quot;Microsoft YaHei&amp;quot;, fontsize=10];
node [shape=&amp;quot;plaintext&amp;quot;];
mul [label=&amp;quot;mul(*)&amp;quot;];
add [label=&amp;quot;add(+)&amp;quot;];
add -&amp;gt; 3
add -&amp;gt; 4;
mul -&amp;gt; add;
mul -&amp;gt; 5;
}

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;时序表制作&#34;&gt;时序表制作&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://jueqingsizhe66.github.io/images/graphviz/sequence.jpg&#34; alt=&#34;sequence&#34;&gt;&lt;/p&gt;
&lt;p&gt;聪明的做法 是从图中隐藏了所有stepi（其实图像对象中是存在的，只不过打印不出来
并同时使用了plaintext的风格。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-gnuplot&#34;&gt;digraph G {
rankdir=&amp;quot;LR&amp;quot;;
node[shape=&amp;quot;point&amp;quot;, width=0, height=0];
edge[arrowhead=&amp;quot;none&amp;quot;, style=&amp;quot;dashed&amp;quot;]
{
rank=&amp;quot;same&amp;quot;;
edge[style=&amp;quot;solid&amp;quot;];
LC[shape=&amp;quot;plaintext&amp;quot;];
LC -&amp;gt; step00 -&amp;gt; step01 -&amp;gt; step02 -&amp;gt; step03 -&amp;gt; step04 -&amp;gt; step05;
}
{
rank=&amp;quot;same&amp;quot;;
edge[style=&amp;quot;solid&amp;quot;];
Agency[shape=&amp;quot;plaintext&amp;quot;];
Agency -&amp;gt; step10 -&amp;gt; step11 -&amp;gt; step12 -&amp;gt; step13 -&amp;gt; step14 -&amp;gt; step15;
}
{
rank=&amp;quot;same&amp;quot;;
edge[style=&amp;quot;solid&amp;quot;];
Agent[shape=&amp;quot;plaintext&amp;quot;];
Agent -&amp;gt; step20 -&amp;gt; step21 -&amp;gt; step22 -&amp;gt; step23 -&amp;gt; step24 -&amp;gt; step25;
}
step00 -&amp;gt; step10 [label=&amp;quot;sends email new custumer&amp;quot;, arrowhead=&amp;quot;normal&amp;quot;];
step11 -&amp;gt; step01 [label=&amp;quot;declines&amp;quot;, arrowhead=&amp;quot;normal&amp;quot;];
step12 -&amp;gt; step02 [label=&amp;quot;accepts&amp;quot;, arrowhead=&amp;quot;normal&amp;quot;];
step13 -&amp;gt; step23 [label=&amp;quot;forward to&amp;quot;, arrowhead=&amp;quot;normal&amp;quot;];
step24 -&amp;gt; step14;
step14 -&amp;gt; step04 [arrowhead=&amp;quot;normal&amp;quot;];


//xinran[shape=&amp;quot;none&amp;quot;,image=&amp;quot;xinran2.jpg&amp;quot;,label=&amp;quot;&amp;quot;]
betterline[shape=&amp;quot;record&amp;quot;,style=filled,fillcolor=chartreuse];
betteredge[shape=&amp;quot;record&amp;quot;,style=filled,fillcolor=forestgreen];
}

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;reference&#34;&gt;reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;graphviz的&lt;a href=&#34;http://www.graphviz.org/Documentation.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在线文档&lt;/a&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;dot语言的&lt;a href=&#34;http://www.graphviz.org/content/dot-language&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在线文档&lt;/a&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.tonyballantyne.com/graphs.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;drawing Graph using dot&lt;/a&gt;介绍了一些图表中分层的概念。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.tuicool.com/articles/qeqeuyb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;使用Graphviz绘制流程图和关系图&lt;/a&gt;教会了关于图、节点、边的属性设置(attribute property predictor)，
其实也可以参考&lt;a href=&#34;http://graphviz.org/content/attrs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Node, Edge and Graph Attributes&lt;/a&gt;关于默认属性的设置，相关的还可以参考&lt;a href=&#34;http://graphviz.org/content/node-shapes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;node shapes&lt;/a&gt;,
&lt;a href=&#34;http://graphviz.org/content/arrow-shapes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Arrow Shapes&lt;/a&gt;, &lt;a href=&#34;http://graphviz.org/content/color-names&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;colors&lt;/a&gt; 这也是比较会经常查看的参数属性设置。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意Mrecord不支持中文，为了实现&lt;a href=&#34;http://www.graphviz.org/content/global-subgraph-style-statements&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;圆角&lt;/a&gt;你可以使用&lt;code&gt;style=rounded&lt;/code&gt;来实现(可以和filled叠加起来使用) &lt;code&gt;style=&amp;quot;rounded,filled&amp;quot;&lt;/code&gt;。
还可以参考&lt;a href=&#34;http://stackoverflow.com/questions/7115870/creating-straight-edges-in-graphviz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Creating Straight Edges in Graphviz&lt;/a&gt;,以及&lt;a href=&#34;http://www.graphviz.org/content/attrs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官网属性文档style section&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;node与edge公用样式：&amp;quot;dashed&amp;quot;虚线, &amp;quot;dotted&amp;quot;点, &amp;quot;solid&amp;quot;固体框, &amp;quot;invis&amp;quot;隐藏 and &amp;quot;bold&amp;quot; 加粗
edge 特有样式：&amp;quot;tapered&amp;quot; 锥形
node 特有样式：&amp;quot;filled&amp;quot;填充, &amp;quot;diagonals&amp;quot;对角线 与 &amp;quot;rounded&amp;quot; 圆角
cluster可使用样式：&amp;quot;filled&amp;quot;与&amp;quot;rounded&amp;quot;
 &amp;quot;radial&amp;quot;径向样式可被nodes, clusters 与graphs使用，如果使用需要指出一个径向渐变填充风格
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;graphviz也是支持插图的,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-gnuplot&#34;&gt;digraph G {
rankdir=&amp;quot;LR&amp;quot;;
xinran[shape=&amp;quot;none&amp;quot;,image=&amp;quot;xinran2.jpg&amp;quot;,label=&amp;quot;&amp;quot;]
betterline[shape=&amp;quot;record&amp;quot;,style=filled,fillcolor=chartreuse];
betteredge[shape=&amp;quot;record&amp;quot;,style=filled,fillcolor=forestgreen];
}

&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ibm.com/developerworks/cn/aix/library/au-aix-graphviz/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;使用 Graphviz 生成自动化系统图 &lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lockriver.blog.163.com/blog/static/487232242010101761749383/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;中文乱码&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lockriver.blog.163.com/blog/static/487232242010101761749383/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Using graph drawing &lt;/a&gt; &lt;font color=red&gt;很详细，推荐&lt;/font&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
  </channel>
</rss>
