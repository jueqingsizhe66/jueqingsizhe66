<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>工程 | 突然的~自我~</title>
    <link>https://jueqingsizhe66.github.io/category/%E5%B7%A5%E7%A8%8B/</link>
      <atom:link href="https://jueqingsizhe66.github.io/category/%E5%B7%A5%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <description>工程</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>©2022</copyright><lastBuildDate>Mon, 10 Aug 2015 01:00:47 +0800</lastBuildDate>
    <image>
      <url>https://jueqingsizhe66.github.io/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_3.png</url>
      <title>工程</title>
      <link>https://jueqingsizhe66.github.io/category/%E5%B7%A5%E7%A8%8B/</link>
    </image>
    
    <item>
      <title>TurbSim 8个湍流模型的对比</title>
      <link>https://jueqingsizhe66.github.io/archives/turbsim-8ge-tuan-liu-mo-xing-de-dui-bi/</link>
      <pubDate>Mon, 10 Aug 2015 01:00:47 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/archives/turbsim-8ge-tuan-liu-mo-xing-de-dui-bi/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://nwtc.nrel.gov/TurbSim&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TurbSim&lt;/a&gt;,是NREL提供的一个小的开源工具， 用于产生湍流风，设置的时候可能对于不同模型会有不同的参数，基于范本进行了一番分析。当然测试文件在TurbSim的Test文件下的inp文件夹下。&lt;/p&gt;
&lt;p&gt;如果对那些湍流模型做一个对比，那样是否可以更加清晰的看出不同呢？
于是就有了下面的shell分析脚本。&lt;/p&gt;
&lt;p&gt;TurbSim产生的风力机一圈的入流截面模型（仅仅一个截面，全场是因为捕捉了很多个截面）&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://jueqingsizhe66.github.io/images/fast/turbsim.png&#34; alt=&#34;Turbsim&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;shell解析脚本&#34;&gt;Shell解析脚本&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/bash - 
#===============================================================================
#
#          FILE: a.sh
# 
#         USAGE: ./a.sh 
# 
#   DESCRIPTION: 
# 
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: Ye Zhaoliang (), zhaoturkkey@163.com
#  ORGANIZATION: YZL
#       CREATED: 2015年08月10日 00:26
#      REVISION:  ---
#===============================================================================

#---  FUNCTION  ----------------------------------------------------------------
#          NAME:  _repeat1
#   DESCRIPTION:  优化版本
#    PARAMETERS:  
#       RETURNS:  
#-------------------------------------------------------------------------------
_repeat1()
{
    #@ 使用方式： _repeat 要重复的字符串  重复次数
    #@  Usage : _repeat string number
    _REPEAT1=$1  #set and not empty, or unlimit recycle
    while [[ ${#_REPEAT1} -lt $2 ]]
    do
        _REPEAT1=$_REPEAT1$_REPEAT1$_REPEAT1 ## 3次优化
    done
    _REPEAT1=${_REPEAT1:0:$2} ##Trim到我们需要的长度
}

alert() #@ Description    产生一个方框的注释
{       #@ Usage    alert &amp;quot;话语&amp;quot;
    _repeat1 &amp;quot;${2:-#}&amp;quot; $(( ${#1} + 8 )) ## ${2:-#} 如果$2未定义则使用#
    printf &#39;%s\n&#39; &amp;quot;$_REPEAT1&amp;quot; ## \a=BEL
    printf &#39;%2.2s %s %2.2s\n&#39; &amp;quot;$_REPEAT1&amp;quot; &amp;quot;$1&amp;quot; &amp;quot;$_REPEAT1&amp;quot; ## \a=BEL
    printf &#39;%s\n&#39; &amp;quot;$_REPEAT1&amp;quot;
}


#alert &amp;quot;Do you really want to delete all the files?&amp;quot;


## RandSeed1 在不同湍流模型配置的不同
{
alert  &amp;quot;RandSeed1&amp;quot; 
grep -n &amp;quot;RandSeed1&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;RandSeed2&amp;quot; 
grep -n &amp;quot;RandSeed2&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;WrBHHTP&amp;quot; 
grep -n &amp;quot;WrBHHTP&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;WrFHHTP&amp;quot; 
grep -n &amp;quot;WrFHHTP&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;WrADHH&amp;quot; 
grep -n &amp;quot;WrADHH&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;WrADFF&amp;quot; 
grep -n &amp;quot;WrADFF&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;WrBLFF&amp;quot; 
grep -n &amp;quot;WrBLFF&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;WrADTWR&amp;quot; 
grep -n &amp;quot;WrADTWR&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;WrFMTFF&amp;quot; 
grep -n &amp;quot;WrFMTFF&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;WrACT&amp;quot; 
grep -n &amp;quot;WrACT&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;NumGrid_Z&amp;quot; 
grep -n &amp;quot;NumGrid_Z&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;NumGrid_Y&amp;quot; 
grep -n &amp;quot;NumGrid_Y&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;HubHt&amp;quot; 
grep -n &amp;quot;HubHt&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;GridHeight&amp;quot; 
grep -n &amp;quot;GridHeight&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|sed &#39;/HubHt/d&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;GridWidth&amp;quot; 
grep -n &amp;quot;GridWidth&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|sed &#39;/HubHt/d&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;VFlowAng&amp;quot; 
grep -n &amp;quot;VFlowAng&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;HFlowAng&amp;quot; 
grep -n &amp;quot;HFlowAng&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;TurbModel&amp;quot; 
grep -n &amp;quot;TurbModel&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;IECstandard&amp;quot; 
grep -n &amp;quot;IECstandard&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;IECturbc&amp;quot; 
grep -n &amp;quot;IECturbc&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;IEC_WindType&amp;quot; 
grep -n &amp;quot;IEC_WindType&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;ETMc&amp;quot; 
grep -n &amp;quot;ETMc&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;WindProfileType&amp;quot; 
grep -n &amp;quot;WindProfileType&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;RefHt&amp;quot; 
grep -n &amp;quot;RefHt&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;URef&amp;quot; 
grep -n &amp;quot;URef&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;ZJetMax&amp;quot; 
grep -n &amp;quot;ZJetMax&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;PLExp&amp;quot; 
grep -n &amp;quot;PLExp&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;Z0&amp;quot; 
grep -n &amp;quot;Z0&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;RICH_NO&amp;quot; 
grep -n &amp;quot;RICH_NO&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;ZI&amp;quot; 
grep -n &amp;quot;ZI&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;PC_UW&amp;quot; 
grep -n &amp;quot;PC_UW&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;PC_UV&amp;quot; 
grep -n &amp;quot;PC_UV&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;PC_VW&amp;quot; 
grep -n &amp;quot;PC_VW&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;CohExp&amp;quot; 
grep -n &amp;quot;CohExp&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;CTEventPath&amp;quot; 
grep -n &amp;quot;CTEventPath&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;CTEventFile&amp;quot; 
grep -n &amp;quot;CTEventFile&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;Randomize&amp;quot; 
grep -n &amp;quot;Randomize&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;DistScl&amp;quot; 
grep -n &amp;quot;DistScl&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;CTLy&amp;quot; 
grep -n &amp;quot;CTLy&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;CTLz&amp;quot; 
grep -n &amp;quot;CTLz&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
alert  &amp;quot;CTStartTime&amp;quot; 
grep -n &amp;quot;CTStartTime&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
} &amp;gt; summary.out

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;改进&#34;&gt;改进&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;去除无用的Turbulence and Boundary&lt;/li&gt;
&lt;li&gt;增加了对GridWidth and GridHeight的处理&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;grep -n &amp;quot;GridHeight&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|sed &#39;/HubHt/d&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t
grep -n &amp;quot;GridWidth&amp;quot; *.inp|awk -F: &#39;{print $1,$3}&#39;|sed &#39;/HubHt/d&#39;|awk &#39;{print substr($1,0,length($1)-4),&amp;quot;\t\t&amp;quot;,$2}&#39;|column -t

&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;shell产生的结果如下&#34;&gt;shell产生的结果如下：&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;#################
## RandSeed1 ##
#################
GPLLJ        234516
HYDRO_TIDAL  2318573
Kaimal_15    123456
Kaimal       123456
KHtest       123456
smooth       4433456
vonKarm_15   123456
vonKarm      123456
#################
## RandSeed2 ##
#################
GPLLJ        789012
HYDRO_TIDAL  RANLUX
Kaimal_15    789012
Kaimal       789012
KHtest       &amp;quot;RanLux&amp;quot;
smooth       &amp;quot;RanLux&amp;quot;
vonKarm_15   789012
vonKarm      789012
###############
## WrBHHTP ##
###############
GPLLJ        False
HYDRO_TIDAL  False
Kaimal_15    False
Kaimal       False
KHtest       False
smooth       True
vonKarm_15   False
vonKarm      False
###############
## WrFHHTP ##
###############
GPLLJ        True
HYDRO_TIDAL  True
Kaimal_15    False
Kaimal       False
KHtest       False
smooth       False
vonKarm_15   True
vonKarm      True
##############
## WrADHH ##
##############
GPLLJ        False
HYDRO_TIDAL  True
Kaimal_15    False
Kaimal       False
KHtest       False
smooth       False
vonKarm_15   True
vonKarm      True
##############
## WrADFF ##
##############
GPLLJ        True
HYDRO_TIDAL  False
Kaimal_15    False
Kaimal       False
KHtest       False
smooth       False
vonKarm_15   False
vonKarm      False
##############
## WrBLFF ##
##############
GPLLJ        False
HYDRO_TIDAL  True
Kaimal_15    False
Kaimal       False
KHtest       True
smooth       True
vonKarm_15   False
vonKarm      False
###############
## WrADTWR ##
###############
GPLLJ        False
HYDRO_TIDAL  False
Kaimal_15    False
Kaimal       False
KHtest       False
smooth       False
vonKarm_15   False
vonKarm      False
###############
## WrFMTFF ##
###############
GPLLJ        False
HYDRO_TIDAL  False
Kaimal_15    True
Kaimal       True
KHtest       False
smooth       False
vonKarm_15   False
vonKarm      False
#############
## WrACT ##
#############
GPLLJ        True
HYDRO_TIDAL  False
Kaimal_15    False
Kaimal       False
KHtest       True
smooth       True
vonKarm_15   False
vonKarm      False
#################
## NumGrid_Z ##
#################
GPLLJ        5
HYDRO_TIDAL  5
Kaimal_15    5
Kaimal       5
KHtest       5
smooth       5
vonKarm_15   5
vonKarm      5
#################
## NumGrid_Y ##
#################
GPLLJ        5
HYDRO_TIDAL  5
Kaimal_15    5
Kaimal       5
KHtest       5
smooth       5
vonKarm_15   5
vonKarm      5
#############
## HubHt ##
#############
GPLLJ        90.00
HYDRO_TIDAL  10
Kaimal_15    37.00
Kaimal       37.00
KHtest       37.00
smooth       84.00
vonKarm_15   37.00
vonKarm      37.00
##################
## GridHeight ##
##################
GPLLJ        80.00
HYDRO_TIDAL  9.00
Kaimal_15    30.00
Kaimal       30.00
KHtest       50.00
smooth       70.00
vonKarm_15   30.00
vonKarm      30.00
#################
## GridWidth ##
#################
GPLLJ        600.0
GPLLJ        90.0
GPLLJ        80.00
HYDRO_TIDAL  600
HYDRO_TIDAL  40
HYDRO_TIDAL  9.00
Kaimal_15    600.0
Kaimal_15    55.8
Kaimal_15    30.00
Kaimal       600.0
Kaimal       55.8
Kaimal       30.00
KHtest       600.0
KHtest       100.0
KHtest       50.00
smooth       600.0
smooth       100.0
smooth       70.00
vonKarm_15   600.0
vonKarm_15   55.8
vonKarm_15   30.00
vonKarm      600.0
vonKarm      55.8
vonKarm      30.00
################
## VFlowAng ##
################
GPLLJ        0
HYDRO_TIDAL  0
Kaimal_15    5
Kaimal       5
KHtest       0
smooth       0
vonKarm_15   5
vonKarm      0
################
## HFlowAng ##
################
GPLLJ        0
HYDRO_TIDAL  0
Kaimal_15    10
Kaimal       10
KHtest       0
smooth       0
vonKarm_15   10
vonKarm      0
#################
## TurbModel ##
#################
GPLLJ        &amp;quot;GP_LLJ&amp;quot;
HYDRO_TIDAL  &amp;quot;TIDAL&amp;quot;
Kaimal_15    &amp;quot;IECKAI&amp;quot;
Kaimal       &amp;quot;IECKAI&amp;quot;
KHtest       &amp;quot;NWTCUP&amp;quot;
smooth       &amp;quot;SMOOTH&amp;quot;
vonKarm_15   &amp;quot;IECVKM&amp;quot;
vonKarm      &amp;quot;IECVKM&amp;quot;
###################
## IECstandard ##
###################
GPLLJ        1
HYDRO_TIDAL  &amp;quot;1-ED3&amp;quot;
Kaimal_15    &amp;quot;1-ED2&amp;quot;
Kaimal       1
KHtest       1
smooth       1
vonKarm_15   1
vonKarm      1
################
## IECturbc ##
################
GPLLJ        &amp;quot;A&amp;quot;
HYDRO_TIDAL  &amp;quot;A&amp;quot;
Kaimal_15    &amp;quot;18.0&amp;quot;
Kaimal       &amp;quot;C&amp;quot;
KHtest       &amp;quot;KHtest&amp;quot;
smooth       &amp;quot;A&amp;quot;
vonKarm_15   16.0
vonKarm      &amp;quot;A&amp;quot;
####################
## IEC_WindType ##
####################
GPLLJ        NTM
HYDRO_TIDAL  &amp;quot;NTM&amp;quot;
Kaimal_15    NTM
Kaimal       NTM
KHtest       NTM
smooth       NTM
vonKarm_15   NTM
vonKarm      NTM
############
## ETMc ##
############
GPLLJ        default
HYDRO_TIDAL  default
Kaimal_15    default
Kaimal       default
KHtest       default
smooth       default
vonKarm_15   default
vonKarm      default
#######################
## WindProfileType ##
#######################
GPLLJ        default
HYDRO_TIDAL  &amp;quot;H2L&amp;quot;
Kaimal_15    default
Kaimal       default
KHtest       default
smooth       default
vonKarm_15   default
vonKarm      default
#############
## RefHt ##
#############
GPLLJ        85.00
HYDRO_TIDAL  18
Kaimal_15    10.00
Kaimal       10.00
KHtest       37.00
smooth       84.00
vonKarm_15   10.00
vonKarm      10.00
############
## URef ##
############
GPLLJ        12.0
HYDRO_TIDAL  18
HYDRO_TIDAL  1.2
Kaimal_15    15.0
Kaimal       6.0
KHtest       13.0
smooth       17.0
vonKarm_15   15.0
vonKarm      6.0
###############
## ZJetMax ##
###############
GPLLJ        350
HYDRO_TIDAL  default
Kaimal_15    350
Kaimal       350
KHtest       350
smooth       350
vonKarm_15   350
vonKarm      260
#############
## PLExp ##
#############
GPLLJ        default
HYDRO_TIDAL  default
Kaimal_15    default
Kaimal       default
KHtest       default
smooth       1.527
vonKarm_15   default
vonKarm      default
##########
## Z0 ##
##########
GPLLJ        default
HYDRO_TIDAL  default
Kaimal_15    default
Kaimal       default
KHtest       default
smooth       default
vonKarm_15   default
vonKarm      default
###############
## RICH_NO ##
###############
GPLLJ        0.05
HYDRO_TIDAL  0.05
Kaimal_15    0.05
Kaimal       0.05
KHtest       0.02
smooth       0.05
vonKarm_15   0.05
vonKarm      0.05
##########
## ZI ##
##########
GPLLJ        default
HYDRO_TIDAL  default
Kaimal_15    default
Kaimal       default
KHtest       default
smooth       default
vonKarm_15   default
vonKarm      default
#############
## PC_UW ##
#############
GPLLJ        default
HYDRO_TIDAL  default
Kaimal_15    default
Kaimal       default
KHtest       default
smooth       default
vonKarm_15   default
vonKarm      default
#############
## PC_UV ##
#############
GPLLJ        default
HYDRO_TIDAL  default
Kaimal_15    default
Kaimal       default
KHtest       default
smooth       default
vonKarm_15   default
vonKarm      default
#############
## PC_VW ##
#############
GPLLJ        default
HYDRO_TIDAL  default
Kaimal_15    default
Kaimal       default
KHtest       default
smooth       default
vonKarm_15   default
vonKarm      default
##############
## CohExp ##
##############
GPLLJ        default
HYDRO_TIDAL  default
Kaimal_15    default
Kaimal       default
KHtest       default
smooth       default
vonKarm_15   default
vonKarm      default
###################
## CTEventPath ##
###################
GPLLJ        &amp;quot;.\EventData&amp;quot;
HYDRO_TIDAL  &amp;quot;/home/lkilcher/work/nwtc/turbsim/trunk/Test/EventData/&amp;quot;
Kaimal_15    &amp;quot;.\EventData&amp;quot;
Kaimal       &amp;quot;.\EventData&amp;quot;
KHtest       &amp;quot;.\EventData&amp;quot;
smooth       &amp;quot;.\EventData&amp;quot;
vonKarm_15   &amp;quot;.\EventData&amp;quot;
vonKarm      &amp;quot;.\EventData&amp;quot;
###################
## CTEventFile ##
###################
GPLLJ        LES
HYDRO_TIDAL  &amp;quot;Random&amp;quot;
Kaimal_15    random
Kaimal       random
KHtest       &amp;quot;les&amp;quot;
smooth       &amp;quot;les&amp;quot;
vonKarm_15   random
vonKarm      random
#################
## Randomize ##
#################
GPLLJ        true
HYDRO_TIDAL  true
HYDRO_TIDAL  1.0
HYDRO_TIDAL  0.5
HYDRO_TIDAL  0.5
Kaimal_15    true
Kaimal       true
KHtest       true
smooth       true
vonKarm_15   true
vonKarm      true
###############
## DistScl ##
###############
GPLLJ        1.0
HYDRO_TIDAL  1.0
Kaimal_15    1.0
Kaimal       1.0
KHtest       1.0
smooth       1.0
vonKarm_15   1.0
vonKarm      1.0
############
## CTLy ##
############
GPLLJ        0.5
HYDRO_TIDAL  0.5
Kaimal_15    0.5
Kaimal       0.5
KHtest       0.5
smooth       0.5
vonKarm_15   0.5
vonKarm      0.5
############
## CTLz ##
############
GPLLJ        0.5
HYDRO_TIDAL  0.5
Kaimal_15    0.5
Kaimal       0.5
KHtest       0.5
smooth       0.5
vonKarm_15   0.5
vonKarm      0.5
###################
## CTStartTime ##
###################
GPLLJ        30.0
HYDRO_TIDAL  30.0
Kaimal_15    30.0
Kaimal       30.0
KHtest       0.0
smooth       10.0
vonKarm_15   30.0
vonKarm      30.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;进一步的细节可以参考&lt;a href=&#34;https://nwtc.nrel.gov/system/files/TurbSim.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Turbsim UserGuide&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ubuntu系统运用</title>
      <link>https://jueqingsizhe66.github.io/archives/ubuntuxi-tong-yun-yong/</link>
      <pubDate>Wed, 10 Jun 2015 13:50:55 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/archives/ubuntuxi-tong-yun-yong/</guid>
      <description>&lt;p&gt;ubuntu系统，比如你用&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;tar -cvf \*.tar.gz 某个文件夹
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;会发现可以多窗口地执行。其实这也说明了一点linux系统的多用户、多线程地开发系统、使用系统。&lt;/p&gt;
&lt;p&gt;shell-script是一个比较有用的工具，沟通着用户(user)和内核(kernel)之间,我的理解是shell就是一个解释器(从lisp的解释器的角度来说,相互学习从函数式过渡到命令式)&lt;/p&gt;
&lt;p&gt;所以我会尝试着把我所有需要安装的software(app),都囊括在一个sh文件当中，所以我重装的时候只需要一个批处理即可。&lt;/p&gt;
&lt;p&gt;下面我分成以下5个部分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1系统的Git管理&lt;/li&gt;
&lt;li&gt;2图形部分&lt;/li&gt;
&lt;li&gt;3语言部分&lt;/li&gt;
&lt;li&gt;4编辑部分&lt;/li&gt;
&lt;li&gt;5配置部分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一一写上我会执行的操作，当然这些程序组合成为我自己使用的linux系统。方便我和linux的内核进行交流。&lt;/p&gt;
&lt;h2 id=&#34;1系统的git管理&#34;&gt;1系统的Git管理&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;apt-get install git,gitk,git-doc #rememeber how to configure
apt-get install git-flow #升级版的管理

git config --global user.name &amp;quot;ye zhaoliang&amp;quot;
git config --global user.email &amp;quot;zhaoturkkey@163.com&amp;quot;
ssh-keygen -t rsa -C &amp;quot;zhaoturkkey@163.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;2图形部分&#34;&gt;2图形部分&lt;/h2&gt;
&lt;p&gt;有时候你希望把你的相关数据打印成图片，这样方便交流&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;apt-get install gnuplot
apt-get install graphviz
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;3语言部分&#34;&gt;3语言部分&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;apt-get install gfortran 
apt-get install gcc 
apt-get install python
# drracket
# haskell
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;4编辑部分&#34;&gt;4编辑部分&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;apt-get install vim   #rememeber how to configure
apt-get install vim-gtk

apt-get install emacs
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;5配置部分&#34;&gt;5配置部分&lt;/h2&gt;
&lt;p&gt;在ubuntu管理系统经常会需要配置用户目录下的dotfiles，
比如登录相关文件.bashrc,.bash_logout,.bash_profile.
我会尝试着把我相关需要的文件夹备份在一个tar包。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;tar -xvf ./bash-it.tar.gz -C ~ # remember vcprompt
tar -xvf ./vim.tar.gz -C ~ # remember vim :BundleInstall
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;#结论
通过上面五个部分，无法体现我使用linux的基本感觉&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;recur()
{
 查找(进入某个目录)
 判断(If,case)
 修改（配置 export 设置环境变量）
 recur
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;cfaj写的&lt;a href=&#34;shell-script:&#34;&gt;shell-script:&lt;/a&gt;和&lt;pro-bash-programming&gt;
主要教会我们的是我使用下划线新建一个临时函数，并使用下划线函数的大写字母来表征函数的返回值。然后使用${}变量引用来实现
版本号的截取并使用case进行分类选择，还有比如不同的系统的case选择。&lt;/p&gt;
&lt;h3 id=&#34;补充一个操作&#34;&gt;补充一个操作&lt;/h3&gt;
&lt;p&gt;如果你想要使得子程序可以掉哦你个函数，必须使用export命令导出，类似于变量&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;
function func()
{
    echo &amp;quot;导出函数&amp;quot;
    }

export -f func
# 使用export -f 导出函数，只用于bash
# 使用export  DATE  等，导出系统变量

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;只有经过这样你的func才变成公有化。当然你也可以把脚本添加到path路径中。&lt;/p&gt;
&lt;h3 id=&#34;谨记一个失误&#34;&gt;谨记一个失误&lt;/h3&gt;
&lt;p&gt;无论是使用tar -cvf 打包，还是生成某个程序等，一定要检查一遍，是否能够运行，
当时就确认你的操作无误，否则后来会后悔(曾经打包了一个系统 发现都不能用了！
而那个系统也被我删掉了，可见我有多懊恼)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;tar: 跳转到下一个头
tar: 由于前次错误，将以上次的错误状态退出

当然有人说看看是不是需要使用tar -zxvf 而不是tar -xvf
我说我压缩的时候根本就没有用gzip，当然我也试了没效果，后来都删掉了。
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
