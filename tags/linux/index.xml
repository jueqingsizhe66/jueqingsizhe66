<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux | Macro Life</title>
    <link>https://jueqingsizhe66.github.io/tags/linux/</link>
      <atom:link href="https://jueqingsizhe66.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <description>Linux</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>©2020</copyright><lastBuildDate>Wed, 05 Jul 2017 13:44:15 +0800</lastBuildDate>
    <image>
      <url>https://jueqingsizhe66.github.io/img/icon-192.png</url>
      <title>Linux</title>
      <link>https://jueqingsizhe66.github.io/tags/linux/</link>
    </image>
    
    <item>
      <title>批量修改pdf文件名以及创建wiki Links</title>
      <link>https://jueqingsizhe66.github.io/blog/2017/07/05/pi-liang-xiu-gai-pdfwen-jian-ming-yi-ji-chuang-jian-wiki-links/</link>
      <pubDate>Wed, 05 Jul 2017 13:44:15 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2017/07/05/pi-liang-xiu-gai-pdfwen-jian-ming-yi-ji-chuang-jian-wiki-links/</guid>
      <description>&lt;p&gt;bash、awk、sed等的好处，就是可以专一的完成你的需求，但是也存在很多不足，借着批量重命令和批量导出链接到vimwiki的wiki中，形成[[local:文件名路径]]的过程，巩固学习linux命令, it is homework(learning process)。&lt;/p&gt;
&lt;h1 id=&#34;vimwiki&#34;&gt;提取路径，用于vimwiki中，当作快速链接&lt;/h1&gt;
&lt;p&gt;如果IFS是”“，那么相当于一个文件名特别长会分成很多行显示，所以这边设置为 IFS=$‘\n’&lt;/p&gt;
&lt;p&gt;[a-z]star替换原先的star，目的是去除点号。
使用echo和管道命令传递信息给sed或者awk等
在sed中似乎用^$等位置字符进行替换,如果是文件夹则进行名字替换，并且遍历当前文件夹
使用双重for循环进行控制&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;IFS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$&amp;#39;\n&amp;#39;&lt;/span&gt;;
count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1;
countDir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1;
specialCharacter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;;
generateChapter&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# @Description : 对不同文件进行不同处理&lt;/span&gt;
                  &lt;span style=&#34;color:#75715e&#34;&gt;# @usage       : generatechapter&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# 妙用find 得到当前目录的相对路径 不需要不断的进入目录&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; var2 in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;find . -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[a-z]*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d  $var2 &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt; cannot . Error&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;#echo &amp;#34;fuck&amp;#34;&lt;/span&gt;
            var&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;echo $var2|sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/^./F:\/ScienceBase.Attachments\/WindEnergy/g&amp;#39;&lt;/span&gt;|sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/^/[[local:/g&amp;#39;&lt;/span&gt;|sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/$/]]/g&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
            printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;= &lt;/span&gt;$countDir&lt;span style=&#34;color:#e6db74&#34;&gt;. [ ] &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt; =\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 使用#号来删除之前的点号&lt;/span&gt;
            countDir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;$countDir&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;;

            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; tempVar in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;find $var2 -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.pdf&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
                temp1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;echo $tempVar|sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/^./F:\/ScienceBase.Attachments\/WindEnergy/g&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; 
    &lt;span style=&#34;color:#75715e&#34;&gt;#            # echo ${var2} ${var2:0:$((${var2}-18))}.pdf&lt;/span&gt;  
                 varr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;echo $temp1|sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/^/[[local:/g&amp;#39;&lt;/span&gt;|sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/$/]]/g&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;;
                &lt;span style=&#34;color:#75715e&#34;&gt;#var=`echo $var2|sed &amp;#39;s/^./F:\/ScienceBase.Attachments\/WindEnergy/g&amp;#39;|sed &amp;#39;s/^/[[local:/g&amp;#39;|sed &amp;#39;s/$/]]/g&amp;#39;`&lt;/span&gt; 
                printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\t&lt;/span&gt;$count&lt;span style=&#34;color:#e6db74&#34;&gt;. [ ] &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;varr&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 这边需要去除到第一个点号,这是才得到的处理方法&lt;/span&gt;
                count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;$count&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;;

            &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
            count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
        

    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

generateChapter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;heading&#34;&gt;删除不必要的名字特殊字符，重命名&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;删除文件pdf名字不必要的（pages 110—30）等信息。&lt;/li&gt;
&lt;li&gt;使用awk printf产生逗号分隔字符串，使用xargs -d, mv提取以逗号分隔的字段， 并且对文件名进行重命名（在我找的多种方法中，就他有效）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xargs -n 2&lt;/code&gt; 表示按照空格划分的方式 提取两个参数，逐个进行。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash -
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#===============================================================================&lt;/span&gt;
#
&lt;span style=&#34;color:#75715e&#34;&gt;#          FILE: b.sh&lt;/span&gt;
#
&lt;span style=&#34;color:#75715e&#34;&gt;#         USAGE: ./b.sh&lt;/span&gt;
#
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:&lt;/span&gt; 
#
&lt;span style=&#34;color:#75715e&#34;&gt;#       OPTIONS: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  REQUIREMENTS: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          BUGS: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#         NOTES: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#        AUTHOR: Ye Zhao Liang (Vimer), zhaoturkkey@163.com&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  ORGANIZATION: BrokenSun&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#       CREATED: 2017/7/4 23:01:31&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#      REVISION:  ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#===============================================================================&lt;/span&gt;

IFS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$&amp;#39;\n&amp;#39;&lt;/span&gt;;
count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1;
countDir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1;
specialCharacter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;;
generateChapter&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# @Description : 对不同文件进行不同处理&lt;/span&gt;
                  &lt;span style=&#34;color:#75715e&#34;&gt;# @usage       : generatechapter&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# 妙用find 得到当前目录的相对路径 不需要不断的进入目录&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#for var2 in `find . -name &amp;#34;*&amp;#34;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; var2 in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;find . -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;windEnergy201*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d  $var2 &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt; cannot . Error&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
                cd $var2;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; var in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;find . -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; echo $var|awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/pages/{printf(&amp;#34;%s,%s&amp;#34;,$0,substr($0,0,length($0)-22)&amp;#34;.pdf&amp;#34;)|&amp;#34;xargs -d, mv &amp;#34;;}&amp;#39;&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; 
                cd ..;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

generateChapter

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意可以使用 ，学到技巧1中的检测工具，查看你的修改是否完全正确，如果出现文件名中有逗号的情况，通常pages没有删掉，原因是xargs也是按照，号进行分割，所以改进方法是使用分号输出&lt;/p&gt;
&lt;p&gt;改进代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; var in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;find . -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; echo $var|awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/pages/{printf(&amp;#34;%s;%s&amp;#34;,$0,substr($0,0,length($0)-22)&amp;#34;.pdf&amp;#34;)|&amp;#34;xargs -d; mv &amp;#34;;}&amp;#39;&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;heading-1&#34;&gt;最终结果&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-org&#34; data-lang=&#34;org&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;= 1. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system]] =&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;1.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch1.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;2.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch10.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;3.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch11.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;4.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch12.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;5.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch13.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;6.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch14.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;7.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch15.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;8.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch16.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;9.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch2.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;10.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch3.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;11.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch4.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;12.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch5.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;13.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch6.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;14.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch7.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;15.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch8.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;16.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/ch9.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;17.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/fmatter.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;18.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/index.pdf&lt;/span&gt;]]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;19.&lt;/span&gt; [ ] [[&lt;span style=&#34;color:#a6e22e&#34;&gt;local:F:/ScienceBase.Attachments/WindEnergy/harmonic power system/scard.pdf&lt;/span&gt;]]
&lt;span style=&#34;color:#a6e22e&#34;&gt;= 2. [ ] [[local:F:/ScienceBase.Attachments/WindEnergy/Offshore Wind Energy Generation Control, Protection, and Integration to Electrical Systems/offshoreWindEnergy]] =&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;#学到的技巧&lt;/p&gt;
&lt;p&gt;awk两种表示判断,if判断得用分号 &lt;a href=&#34;http://blog.csdn.net/qq_31382921/article/details/55094907&#34;&gt; 如果不用分号隔开会报错 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注意分号！！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-awk&#34; data-lang=&#34;awk&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;awk&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{if ($1==1) print &amp;#34;A&amp;#34;; else if ($1==2) print &amp;#34;B&amp;#34;; else print &amp;#34;C&amp;#34;}&amp;#39;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对应的bash使用的是if,then,else,fi的形式，且不用分号间隔语句&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
 &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; var in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;find . -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d  $var &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt; cannot . Error&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
            printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 使用#号来删除之前的点号&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
            printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 这边需要去除到第一个点号,这是才得到的处理方法&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;awk的’/page/{}‘等效于’if($0~/dfd/){}’
下面的命令，也是一种检查上述程序正确与否的一种工具,可以看出哪些pdf文件依然有pages的字段&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;YeZhao@DESKTOP-YeZhao /cygdrive/f/ScienceBase.Attachments/WindEnergy
$ find . -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;|awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{if($0~/pages/){print $0}}&amp;#39;&lt;/span&gt;
./windEnergy2009-i6/Characterizing future large, rapid changes in aggregated wind power using Numerical Weather Prediction spatial fields &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pages 542–555&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.pdf
./windEnergy2012-i1/Modeling wake effects in large wind farms in complex terrain the problem, the methods and the issues &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pages 161–182&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.pdf
./windEnergy2012-i2/The Betz–Joukowsky limit on the contribution to rotor aerodynamics by the British, German and Russian scientific schools &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pages 335–344&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.pdf
./windEnergy2012-i3/Computational fluid dynamics simulation of the aerodynamics of a high solidity, small-scale vertical axis wind turbine &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pages 349–361&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.pdf
./windEnergy2012-i3/Correction factors &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; NRG &lt;span style=&#34;color:#75715e&#34;&gt;#40 anemometers potentially affected by dry friction whip characterization, analysis, and validation (pages 489–502).pdf&lt;/span&gt;
./windEnergy2012-i4/Analysis of wake measurements from the ECN Wind Turbine Test Site Wieringermeer, EWTW &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pages 575–591&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.pdf
./windEnergy2012-i5/Atmospheric stability and turbulence fluxes at Horns Rev—an intercomparison of sonic, bulk and WRF model data &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pages 717–731&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.pdf
./windEnergy2013-11/Modeling, simulation and control of a wind turbine with a hydraulic transmission system &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pages 1259–1276&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.pdf
./windEnergy2013-8/Indicial lift response &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; an empirical relation &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; finite-thickness airfoils, and effects on aeroelastic simulations &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pages 681–693&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.pdf
./windEnergy2013-8/Simulating the dynamics of wind turbine blades part I, model development and verification &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pages 694–710&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.pdf
./windEnergy2013-8/Simulating the dynamics of wind turbine blades part鈥塈I, model validation and uncertainty quantification &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pages 741–758&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.pdf
..l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;#2. awk的&lt;a href=&#34;http://blog.csdn.net/panpan639944806/article/details/19932543&#34;&gt; BEGIN &lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-awk&#34; data-lang=&#34;awk&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;()
{}

BEGIN{
}
{
    
}
END{

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;3-awk--gsub-3&#34;&gt;3. awk &lt;a href=&#34;http://blog.sina.com.cn/s/blog_67e34ceb0100ybvg.html&#34;&gt; gsub &lt;/a&gt;&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-awk&#34; data-lang=&#34;awk&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a b c 2011-11-22 a:d&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;awk&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gsub(/-/,&amp;#34;&amp;#34;,$4)&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;#4. awk变量定义&lt;/p&gt;
&lt;p&gt;BEGIN中&lt;a href=&#34;http://blog.csdn.net/shangboerds/article/details/49449291&#34;&gt; 定义1 &lt;/a&gt; , &lt;a href=&#34;http://jingyan.baidu.com/article/d45ad148fb46f269552b80cf.html&#34;&gt; awk -v单行 &lt;/a&gt;定义变量&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.linuxidc.com/Linux/2015-04/115781.htm&#34;&gt; awk内置变量 &lt;/a&gt;, 包括FS,OFS,NR,NFR,NF,$0,$1,$2,ARGC,ARGV1等。&lt;/p&gt;
&lt;p&gt;#5.awk定义函数&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://bbs.chinaunix.net/thread-1424218-1-1.html&#34;&gt; awk的函数定义 &lt;/a&gt;是在BEGIN{},{},END{}之外的，和他们平级的关系&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-awk&#34; data-lang=&#34;awk&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/awk -f&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#===============================================================================&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          File:  func.awk&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   Description:  awk -f func.awk file&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#           file内容为400&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   VIM Version:  7.0+&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#        Author:  Ye Zhao Liang (Vimer), zhaoturkkey@163.com&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  Organization:  BrokenSun&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#       Version:  1.0&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#       Created:  2017/7/5 16:06:33&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#      Revision:  ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#       License:  Copyright (c) 2017, Ye Zhao Liang&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#===============================================================================&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# &lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;()
{
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b.in.$1=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
}
{
&lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a.in.v=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a.in.y=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;y&lt;/span&gt;;

&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;y&lt;/span&gt;);
&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;();
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a.out.v=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a.out.y=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;y&lt;/span&gt;;
}


&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;y&lt;/span&gt;)
{
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(a)v=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;y&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;6bash&#34;&gt;6.bash四种变量截取&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;${var#.*} 从左到右，满足#之后条件的最小长度
${var##.*} 从左到右，满足##之后条件的最大长度
${var%.*} 从右到左，满足%之后条件的最小长度
${var%%.*} 从右到左，满足%%之后条件的最小长度
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在awk中可以使用substr($1,0,length($1)–..)实现类似的功能。&lt;/p&gt;
&lt;p&gt;#7.bash中的包含关系&lt;/p&gt;
&lt;p&gt;包含： 即一个大的部分包含小的部分（member) 等价： 即两个东西等价(equal) 比较：一般是两个数，另外也可以是字符串。&lt;/p&gt;
&lt;p&gt;bash几种&lt;a href=&#34;http://www.cnblogs.com/ginsonwang/p/5525340.html&#34;&gt; 包含关系用法  &lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;strA&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;helloworld&amp;#34;&lt;/span&gt;
strB&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;low&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $strA &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~ $strB &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;包含&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;不包含&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;#8.awk去除左右空格&lt;/p&gt;
&lt;p&gt;第5个知识点阐述了函数的定义方式,现在来运用一下， awk&lt;a href=&#34;http://www.cnblogs.com/ginsonwang/p/5525340.html&#34;&gt; 去除左右空格 &lt;/a&gt;，再一次使用中发现所有的文件名后缀中多了一个空格，于是尝试消掉空格，想着用awk实现。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-awk&#34; data-lang=&#34;awk&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ltrim&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;) { &lt;span style=&#34;color:#66d9ef&#34;&gt;sub&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;/^[ \t\r\n]+/&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;); &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; }
&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rtrim&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;) { &lt;span style=&#34;color:#66d9ef&#34;&gt;sub&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;/[ \t\r\n]+$/&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;); &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; }
&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;trim&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;) { &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rtrim&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ltrim&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;)); }
BEGIN{
        FS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt;
}

{
        &lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rtrim&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;)
                &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;[&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
        {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;)
                &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;[&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
                &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;[&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
        }
}

END{
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;   client    incr_num_day&amp;#34;&lt;/span&gt;;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%10s   %d\n&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;])
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n\n   client    all_num&amp;#34;&lt;/span&gt;;                                                                                                                                                     
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%10s   %d\n&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;]);
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;#9.awk调用系统命令&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/cy_cai/article/details/41908921&#34;&gt; MEthod &lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ready:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;touch c.txt
touch d.txt&lt;/p&gt;
&lt;p&gt;II. a.txt:&lt;/p&gt;
&lt;p&gt;c.txt
d.txt&lt;/p&gt;
&lt;p&gt;III. code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-awk&#34; data-lang=&#34;awk&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;awk&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{cmd=&amp;#34;rm &amp;#34;$0;system(cmd)}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;txt&lt;/span&gt;   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;10awk&#34;&gt;10.awk重定向和管道&lt;/h1&gt;
&lt;p&gt;有时候直接可以在awk使用管道，提供给shell,比如print|Sort,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-awk&#34; data-lang=&#34;awk&#34;&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;awk&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $1, $2 | &amp;#34;sort&amp;#34; }&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;#11.windows下的cygwin使用脚本&lt;/p&gt;
&lt;p&gt;必须得使用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;dos2unix.exe *脚本名字
dos2unix.exe a.sh
dos2unix.exe func.awk


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样执行shell才有效。&lt;/p&gt;
&lt;h1 id=&#34;12awkshell&#34;&gt;12.awk性能比shell更高&lt;/h1&gt;
&lt;p&gt;参考&lt;a href=&#34;http://www.cnblogs.com/chengmo/archive/2010/10/04/1842073.html&#34;&gt; 链接 &lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
性能比较

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;chengmo@localhost nginx&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# time (awk &amp;#39;BEGIN{ total=0;for(i=0;i&amp;lt;=10000;i++){total+=i;}print total;}&amp;#39;)&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;50005000&lt;/span&gt;

real    0m0.003s
user    0m0.003s
sys     0m0.000s
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;chengmo@localhost nginx&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# time(total=0;for i in $(seq 10000);do total=$(($total+i));done;echo $total;)&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;50005000&lt;/span&gt;

real    0m0.141s
user    0m0.125s
sys     0m0.008s 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;结论：在awk中执行算术运算，比在bash中执行更好一些。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bash special annotation</title>
      <link>https://jueqingsizhe66.github.io/blog/2016/09/25/bash-special-annotation/</link>
      <pubDate>Sun, 25 Sep 2016 23:15:01 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2016/09/25/bash-special-annotation/</guid>
      <description>&lt;p&gt;关于shell的summary参看&lt;a href=&#34;http://jueqingsizhe66.github.io/blog/2016/08/06/linux-shell-summary/#kernel&#34;&gt;Linux Shell Summary&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以下是关于bash的一些比较特殊的地方。&lt;/p&gt;
&lt;h2 id=&#34;1-bash&#34;&gt;1. bash数组再理解&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;declare -a&lt;/code&gt;表示声明一个数组，类似于 &lt;code&gt;declare -i&lt;/code&gt; 声明一个整数和&lt;code&gt;declare -x &lt;/code&gt;声明一个环境变量。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;bash数组定义时候使用小括号来赋值，而在引用数组的时候反而使用中括号（不同于其他编程语言)&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;heading&#34;&gt;定义数组&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;bash2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;34&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;heading-1&#34;&gt;引用数组&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;array[n]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
遍历数组：
filename&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; var in &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;filename[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
echo $var
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;heading-2&#34;&gt;添加数组&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;bash1&lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;45&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;#赋值两边不能有空格&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-bash&#34;&gt;2. bash变量截取和变量替换&lt;/h2&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;bash使用井号代表开头(这和正则表达式有点不同，使用caret)
而结尾则使用百分号(不同于正则表达式的dollar符号$)。并且在当使用两个重叠的井号，表示最大长度（从头开始的最大删除都删掉）
而使用两个百分号则表达反方向的最大长度删除（从尾到头删除匹配字符串）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;#表示正向最短匹配，##表示正向最大匹配&lt;/li&gt;
&lt;li&gt;%表示反向最短匹配，%%表示反向最大匹配&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;而这一点也体现在变量替换当中，&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;子串替换：
${string/substring/replacement}
使用$replacement来替换第一个匹配的$substring.

${string//substring/replacement}
使用$replacement来替换所有匹配的$substring.

${string/#substring/replacement}
如果$substring匹配$string的开头部分, 那么就用$replacement来替换$substring.

${string/%substring/replacement}
如果$substring匹配$string的结尾部分, 那么就用$replacement来替换$substring.

子串提取的方法主要有：直接到指定位置求子串，字符匹配求子串。
${string:position}
在$string中从位置$position开始提取子串.

如果$string是&amp;quot;*&amp;quot;或者&amp;quot;@&amp;quot;, 那么将会提取从位置$position开始的位置参数.[1]

${string:position:length}
在$string中从位置$position开始提取$length长度的子串.

&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;除号表示最短替换，双除号表示最长替换&lt;/li&gt;
&lt;li&gt;匹配项第一个位置出现#井号表示开头部分&lt;/li&gt;
&lt;li&gt;匹配项最后一个位置出现%百分号表示结尾部分&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;3-bash&#34;&gt;3. bash接受键盘操作&lt;/h2&gt;
&lt;p&gt;用一个read命令即可(类似于matlab的input命令)
通常的风格是 &lt;code&gt;read -p &amp;quot;prompt for reminding&amp;quot; variable-name&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;接收键盘输入：
    read &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;选项&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;变量名&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
    选项：
        -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;提示信息&amp;#34;&lt;/span&gt;：在等待read输入时，输出提示信息
        -t 秒数：read命令会一直等待用户输入，使用此选项可以指定等待时间
        -n 字符数：read命令只接受指定的字符数，就会执行
        -s：隐藏输入的数据，适用于机密信息的输入

read.sh：
&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash&lt;/span&gt;

read -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;please input your name:&amp;#34;&lt;/span&gt; -t &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; name
echo $name

read -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;please input your passwd:&amp;#34;&lt;/span&gt; -s passwd
echo -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;
echo $passwd

read -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;please input your sex [M/F]:&amp;#34;&lt;/span&gt; sex
echo -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;
echo $sex

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4-tac&#34;&gt;4. tac反向&lt;/h2&gt;
&lt;p&gt;cat在bash中是打印文本信息的作用，而&lt;a href=&#34;http://bbs.chinaunix.net/thread-250407-1-1.html&#34;&gt;tac&lt;/a&gt;则是反向输出文件流&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cat old_file|awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print NR,$0}&amp;#39;&lt;/span&gt;|sort -r -n|awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;添加每行的行号&lt;/li&gt;
&lt;li&gt;逆向排列&lt;/li&gt;
&lt;li&gt;输出每行&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;5-if&#34;&gt;5. if当中也可以使用双括号进行算术判断&lt;/h2&gt;
&lt;p&gt;if并不是支持正则表达式？还是只有变量支持？&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;root at javazhao-N53SM &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;13:26:46ä��午&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; in /MyBashWork/clean on git:develop?
$ &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;All.sh&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hei&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;no&amp;#34;&lt;/span&gt; ;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;;

hei

root at javazhao-N53SM &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;13:26:52ä��午&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; in /MyBashWork/clean on git:develop?
$ &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.sh&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hei&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;no&amp;#34;&lt;/span&gt; ;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;;

no


但是对于变量是可以的
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@bj_manager ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# a=123a;if [[ $a =~ ^[0-9]+$ ]]; then echo ok; fi&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@bj_manager ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# a=123;if [[ $a =~ ^[0-9]+$ ]]; then echo ok; fi&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;实际情况是只有在双中括号的时候才支持正则表达式&lt;!-- raw HTML omitted --&gt;。&lt;!-- raw HTML omitted --&gt;一般是使用双中括号进行文件判断，目录判断，
文件大小判断等&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;if另外一个特殊地方就是使用双括号执行算术比较&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;708@708-PC MINGW64 /e/plGraphViz (master)
  if (( 1&amp;lt;2 )) ;then echo &amp;quot;zero&amp;quot;;   echo &amp;quot;a=2&amp;quot;; echo &amp;quot;a=3&amp;quot; ;else echo &amp;quot;no&amp;quot;; fi;
zero
a=2
a=3


708@708-PC MINGW64 /e/dot(1)/testByYe
$   if [[ 1&amp;lt;2 ]] ;then echo &amp;quot;zero&amp;quot;;   echo &amp;quot;a=2&amp;quot;; echo &amp;quot;a=3&amp;quot; ;else echo &amp;quot;no&amp;quot;; fi;
bash: unexpected token 284 in conditional command
bash: syntax error near `1&amp;lt;&#39;

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;而bash也一般是使用&lt;code&gt;$((...))&lt;/code&gt; 进行算术的运算.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ydiff单文件夹的所有scm文件比较</title>
      <link>https://jueqingsizhe66.github.io/blog/2016/02/26/ydiffdan-wen-jian-jia-de-suo-you-scmwen-jian-bi-jiao/</link>
      <pubDate>Fri, 26 Feb 2016 18:29:08 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2016/02/26/ydiffdan-wen-jian-jia-de-suo-you-scmwen-jian-bi-jiao/</guid>
      <description>&lt;p&gt;关于YDIff处理已经在[使用Ydiff工具生成文件差异比较文件][1]中提及，但是只是比较了两个文件夹之间的文件，
而如果是较为简单的单个文件的所有文件的比较？类似思路如下所示，&lt;/p&gt;
&lt;p&gt;一定要注意数组使用的是小括号包括起来，否则程序有问题。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#遍历当前目录下的所有文件 并进行比较 最终结果存入final-result&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#array1=`ls *.scm`&lt;/span&gt;
array1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls *.scm&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 必须加上括号&lt;/span&gt;
mkdir final-result
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;seq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;array1[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
    &lt;span style=&#34;color:#75715e&#34;&gt;#遍历从i之后的文件&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j in &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;array1[@]:$i+1:&lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;array1[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
        &lt;span style=&#34;color:#75715e&#34;&gt;#echo ${array1[$i]},$j;&lt;/span&gt;
        dir1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;array1[$i]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;;
        dir2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$j;
        &lt;span style=&#34;color:#75715e&#34;&gt;# 选取对应文件夹下的scm文件&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;#export TestVari=$i&lt;/span&gt;
            /home/happycamp-of-lisp/wangying/ydiff/diff-lisp $dir1 &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;dir2&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;;
        mv *.html final-result
        cp ./nav.js ./diff.css final-result


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ls会找出当前文件夹下的所有scm文件，然后利用bash中的数组操作，使用双重
循环进行遍历即可。
[1]:http://jueqingsizhe66.github.io/blog/2016/02/22/shi-yong-ydiffgong-ju-sheng-cheng-wen-jian-chai-yi-bi-jiao-wen-jian/&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Ydiff工具生成文件差异比较文件</title>
      <link>https://jueqingsizhe66.github.io/blog/2016/02/22/shi-yong-ydiffgong-ju-sheng-cheng-wen-jian-chai-yi-bi-jiao-wen-jian/</link>
      <pubDate>Mon, 22 Feb 2016 19:24:53 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2016/02/22/shi-yong-ydiffgong-ju-sheng-cheng-wen-jian-chai-yi-bi-jiao-wen-jian/</guid>
      <description>&lt;p&gt;Ydiff是一个不错的lisp语法分析工具(&lt;a href=&#34;https://github.com/yinwang0/ydiff&#34;&gt;王垠编制&lt;/a&gt;).下面是该工具简单用途和使用说明。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;用途
主要是js，cpp，和lisp的分析，现在也有&lt;a href=&#34;https://github.com/yinwang0/pysonar2&#34;&gt;python&lt;/a&gt;,&lt;a href=&#34;https://github.com/yinwang0/pysonar2&#34;&gt;ruby&lt;/a&gt;的分析工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用说明&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;编译的时候仅仅在项目下载之后，make一下即可生成对应的diff-cpp,diff-js,diff-lisp分析工具.
文件分为单文件和文件夹两种。&lt;/p&gt;
&lt;h2 id=&#34;heading&#34;&gt;单文件使用说明&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt; diff-lisp *.scm *1.scm 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;heading-1&#34;&gt;文件夹使用方式&lt;/h2&gt;
&lt;p&gt;保存下面源代码为process-lisp.sh&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
dir1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;let-lang
dir2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;letrec-lang
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;dir1&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/*.scm&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
    export TestVari&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$i
    /home/happycamp-of-lisp/wangying/ydiff/diff-lisp $i &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;dir2&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;TestVari##*&lt;span style=&#34;color:#ae81ff&#34;&gt;\/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然也可以改为&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
dir1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;let-lang
dir2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;letrec-lang
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;dir1&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/*.scm&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
    /home/happycamp-of-lisp/wangying/ydiff/diff-lisp $i &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;dir2&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;i##*&lt;span style=&#34;color:#ae81ff&#34;&gt;\/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;只要修改对应的文件夹dir1,dir2,就可以分析对应文件夹的scm所有文件,然后运用下面命令行，即可生成
对应的html文件,方便阅读&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bash process-lisp.sh
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;heading-2&#34;&gt;数组引入进一步修改处理程序&lt;/h2&gt;
&lt;p&gt;数组的shell操作参考&lt;a href=&#34;http://blog.csdn.net/liufei_learning/article/details/8000570&#34;&gt;如下&lt;/a&gt;,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义的时候通过小括号包裹&lt;/li&gt;
&lt;li&gt;调用的时候通过${}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意 &lt;a href=&#34;http://blog.csdn.net/flowingflying/article/details/5146160&#34;&gt;数据运算&lt;/a&gt;和判断(&lt;strong&gt;注意只有在双括号的小于号才是小于号&lt;/strong&gt;)的两个中括号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;seq 1 $((${#array1[@]}-1))

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;测试过很多错误的情况，比如&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;array1=(`ls -l|grep ^d|awk &#39;{print $9}&#39;`); 
echo ${array1[@]:0:${#array1[@]}-1};
export length1=${!array1[@]}; 
for i in ${array1[@]:1:length1-1}; do 
    for j in ${array1[@]:$i:length1}; do 
        echo $i,$j;
    done;
done;

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;原因在于,${!}操作并不是把它当作数组形式，所以改为数组即可，使用seq。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;length1=${!array1[@]}
echo $length1 
    0 1 2 3

echo ${#length1[@]}
    1

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;正确的过程(&lt;strong&gt;注意$i+1&lt;/strong&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;array1=(`ls -l|grep ^d|awk &#39;{print $9}&#39;`);  
for i in `seq 1 $((${#array1[@]}-1))`; do 
    for j in ${array1[@]:$i+1:${#array1[@]}}; do 
        echo ${array1[$i]},$j;
    done;
done;

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果,满足组合公式&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1,letrec-lang
1,lexaddr-lang
1,proc-lang
2,lexaddr-lang
2,proc-lang
3,proc-lang

&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;scm&#34;&gt;批处理解析scm文件&lt;/h2&gt;
&lt;p&gt;当文件夹下存在如下文件下，则可以进一步利用&lt;a href=&#34;#pi&#34;&gt;程序&lt;/a&gt;进行分析，注意拷贝nav.js和diff.css进行渲染&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ls┌─[root][canbetter-N53SM][±][master ?:10 ✗][2.2.1][/home/happycamp-of-lisp/EOPL2014/DF-eopl/chapter3/proc-lang/ds-rep]
└─➞ ls
compiled  data-structures.scm  drscheme-init.scm  environments.scm  interp.scm  lang.scm  tests.scm  top.scm

&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;    mv *.html ${dir1}-${dir2}
    cp ./nav.js ./diff.css ${dir1}-${dir2}
done;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;done;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
然后可以在terminal运行
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;python -m SimpleHTTPServer
Serving HTTP on 0.0.0.0 port 8000 &amp;hellip;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;在浏览器输入
    http://localhost:8000/ 


### 有问题的数组下标

数组下表是从0开始的！
``` sh

array1=(`ls -l|grep ^d|awk &#39;{print $9}&#39;`); 
# 遍历所有文件夹 除了最后一个
for i in `seq 0 $((${#array1[@]}-1))`; do 
    #遍历从i之后的文件
    for j in ${array1[@]:$i+1:${#array1[@]}}; do 
        #echo ${array1[$i]},$j;
        dir1=${array1[$i]};
        dir2=$j;
        mkdir ${dir1}-${dir2}
        # 选取对应文件夹下的scm文件
        for k in `ls ${dir1}/*.scm`
        do
            #export TestVari=$i
            /home/happycamp-of-lisp/wangying/ydiff/diff-lisp $k ${dir2}/${k##*\/} 
        done

        mv *.html ${dir1}-${dir2}
        cp ./nav.js ./diff.css ${dir1}-${dir2}
    done;
done;

mkdir final-result
for i in `seq 0 $((${#array1[@]}-1))`; do 
    #遍历从i之后的文件
    for j in ${array1[@]:$i+1:${#array1[@]}}; do 
        #echo ${array1[$i]},$j;
        dir1=${array1[$i]};
        dir2=$j;
        mv ${dir1}-${dir2} final-result
    done;
done;

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样就完成了文件夹下所有的文件对比操作，当然得确保该文件夹下存在scm文件。&lt;/p&gt;
&lt;h2 id=&#34;ydiff&#34;&gt;进一步修改YDiff？&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>bash Array 和拓展的pattern match</title>
      <link>https://jueqingsizhe66.github.io/blog/2015/10/24/bash-array-he-tuo-zhan-de-pattern-match/</link>
      <pubDate>Sat, 24 Oct 2015 15:36:57 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2015/10/24/bash-array-he-tuo-zhan-de-pattern-match/</guid>
      <description>&lt;p&gt;通过&lt;a href=&#34;http://jueqingsizhe66.github.io/blog/2015/10/23/bash-support-idede-xin-fa-xian/&#34;&gt;Bash_It&lt;/a&gt;的学习，第一次意识到Shell数组的不一样的写法。
并且也看到Pattern Match的一些用途。&lt;/p&gt;
&lt;h2 id=&#34;1-array&#34;&gt;1 Array&lt;/h2&gt;
&lt;h3 id=&#34;11-bash&#34;&gt;1.1 Bash数组定义&lt;/h3&gt;
&lt;p&gt;通过(1,2,3)区分于fortran语言的(/1,2,3/).&lt;/p&gt;
&lt;p&gt;bash1=(34,5,6,4)&lt;/p&gt;
&lt;p&gt;bash2=(&amp;ldquo;34&amp;rdquo;,&amp;ldquo;5&amp;rdquo;,&amp;ldquo;5&amp;rdquo;,&amp;ldquo;4&amp;rdquo;)&lt;/p&gt;
&lt;h3 id=&#34;12-bash&#34;&gt;1.2 Bash关联数组定义&lt;/h3&gt;
&lt;p&gt;通过 -A开关选项定义一个关联数组。&lt;/p&gt;
&lt;p&gt;declare -A bash1&lt;/p&gt;
&lt;p&gt;bash1[&amp;ldquo;34&amp;rdquo;]=&amp;quot;53&amp;rdquo;&lt;/p&gt;
&lt;p&gt;bash1[&amp;ldquo;56&amp;rdquo;]=&amp;quot;45&amp;rdquo;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;declare -A array
for subscript in a b c d e
     do
         array[$subscript]=&amp;quot;$subscript $RANDOM&amp;quot;
     done

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;也可以在&lt;em&gt;命令行使用&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  a=($(ls))  #而不是a=$(ls)

  #这样就可以使用
  ${a[1]}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;13-bash&#34;&gt;1.3 Bash数组添加数据&lt;/h3&gt;
&lt;p&gt;bash1+=&amp;quot;54&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;14-bash&#34;&gt;1.4 Bash数组显示数据和便利&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;##单个显示
printf &amp;quot;%s\n&amp;quot; &amp;quot;${array[&amp;quot;c&amp;quot;]}&amp;quot;

##遍历
printf &amp;quot;%s\n&amp;quot; &amp;quot;${array[@]}&amp;quot;
printf &amp;quot;%s\n&amp;quot; &amp;quot;${array[*]}&amp;quot;

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;15-&#34;&gt;1.5 拓展的操作&lt;/h3&gt;
&lt;p&gt;#表示长度的作用&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;${#array&lt;a href=&#34;http://www.gnu.org/&#34;&gt;2&lt;/a&gt;}  现实第二个数组元素的长度&lt;/li&gt;
&lt;li&gt;${#array[@]}   显示全部数组元素的长度&lt;/li&gt;
&lt;li&gt;${#array[*]}  显示全部数组元素的长度&lt;/li&gt;
&lt;li&gt;${#array[@]:2:3}  获取第2个到3个的长度&lt;/li&gt;
&lt;li&gt;${!array[@]} !的作用是现实所有的key在数组当中。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;进一步参考&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.apress.com/9781484201220&#34;&gt;pro_Bash_programming&lt;/a&gt;第五章 array部分&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-pattern-match&#34;&gt;2. PATTERN MATCH&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;?(pattern-list)   Matches zero or one occurrence of the given patterns
*(pattern-list)   Matches zero or more occurrences of the given patterns
+(pattern-list)   Matches one or more occurrences of the given patterns
@(pattern-list)   Matches one of the given patterns
!(pattern-list)   Matches anything except one of the given patterns
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;比如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  $ ls +(ab|def)*+(.jpg|.gif)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;进一步参考  ls使用&lt;a href=&#34;http://www.linuxjournal.com/content/bash-extended-globbing&#34;&gt;PATTERN-MATCH&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Linux基础资料参考&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.gnu.org/&#34;&gt;GNU官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://linux.vbird.org/linux_basic/&#34;&gt;鸟哥论坛&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://linux.about.com/&#34;&gt;Linux_About&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.cnblogs.com/bluebbc/tag/linux&#34;&gt;CN_Blogs的一个收集&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-&#34;&gt;3 事情流程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;认定你的事情&lt;/li&gt;
&lt;li&gt;做&lt;/li&gt;
&lt;li&gt;检验&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;拓展为:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;认清楚这件事情；&lt;/li&gt;
&lt;li&gt;分析与这件事情有关的一切的一切；&lt;/li&gt;
&lt;li&gt;制定做好这件事情的计划；&lt;/li&gt;
&lt;li&gt;实施计划；&lt;/li&gt;
&lt;li&gt;验证这件事情的结果；&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Bash Support IDE的新发现</title>
      <link>https://jueqingsizhe66.github.io/blog/2015/10/23/bash-support-idede-xin-fa-xian/</link>
      <pubDate>Fri, 23 Oct 2015 00:28:00 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2015/10/23/bash-support-idede-xin-fa-xian/</guid>
      <description>&lt;p&gt;[Bash Support][1]实现一个vim的bash IDE工具。好处式可以较快捷的
输入命令和编程以及调试(bashdb)。&lt;/p&gt;
&lt;h2 id=&#34;heading&#34;&gt;支持的几种后缀文件&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;c 的.c  c++ 的.cc  .cpp  cc&lt;/li&gt;
&lt;li&gt;perl 的.pl&lt;/li&gt;
&lt;li&gt;awk的.awk&lt;/li&gt;
&lt;li&gt;shell的.sh&lt;/li&gt;
&lt;li&gt;vim的.vim文件&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;template&#34;&gt;查看系统的各种template&lt;/h2&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;当你新建一个*.sh文件&lt;!-- raw HTML omitted --&gt;
一定要记住的一个命令 \ntl,通过它可以知道各个template系统文件
都在干什么，以及如何使用那些快捷命令，比如\ckc \css \cfu \cc \cs  \se \sf 等。&lt;/p&gt;
&lt;h2 id=&#34;macro&#34;&gt;几个常见的Macro&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;|FILENAME|&lt;/li&gt;
&lt;li&gt;|AUTHOR|&lt;/li&gt;
&lt;li&gt;|DATE|&lt;/li&gt;
&lt;li&gt;|TIME|&lt;/li&gt;
&lt;li&gt;|EMAIL|&lt;/li&gt;
&lt;li&gt;|ORGANIZATION|&lt;/li&gt;
&lt;li&gt;|AUTHORREF|&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;你可以在.vim/bundle/bash-support.vim/bash-support/templates/Template文件(
这边使用的是相对路径，我是通过bundle进行管理vim插件).&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;css-&#34;&gt;css 的程序几个大的部分的注释&lt;/h2&gt;
&lt;p&gt;当你敲入\css会在vim的下端出现一个输入栏，有下面几个选项&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;lsquo;GLOBAL DECLARATIONS&amp;rsquo;     : &amp;lsquo;GLOBAL DECLARATIONS&amp;rsquo;,&lt;/li&gt;
&lt;li&gt;&amp;lsquo;COMMAND LINE PROCESSING&amp;rsquo; : &amp;lsquo;COMMAND LINE PROCESSING&amp;rsquo;,&lt;/li&gt;
&lt;li&gt;&amp;lsquo;SANITY CHECKS&amp;rsquo;           : &amp;lsquo;SANITY CHECKS&amp;rsquo;,&lt;/li&gt;
&lt;li&gt;&amp;lsquo;FUNCTION DEFINITIONS&amp;rsquo;    : &amp;lsquo;FUNCTION DEFINITIONS&amp;rsquo;,&lt;/li&gt;
&lt;li&gt;&amp;lsquo;TRAPS&amp;rsquo;                   : &amp;lsquo;TRAPS&amp;rsquo;,&lt;/li&gt;
&lt;li&gt;&amp;lsquo;MAIN SCRIPT&amp;rsquo;             : &amp;lsquo;MAIN SCRIPT&amp;rsquo;,&lt;/li&gt;
&lt;li&gt;&amp;lsquo;STATISTICS AND CLEAN-UP&amp;rsquo; : &amp;lsquo;STATISTICS AND CLEAN-UP&amp;rsquo;,&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;具体可以查看你的bash-support.vim/bash-support/templates/comment.templates&lt;!-- raw HTML omitted --&gt;
在该文件的一开头就define了shell文件的注释头。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;技巧可以通过 G然后TAB就可以直接补全了。&lt;/em&gt;
之所以说他特别好是因为，根据[《Pro Bash Programming》][4], 提出的关于
写更好的shell script的建议，如下所示：&lt;/p&gt;
&lt;ol start=&#34;0&#34;&gt;
&lt;li&gt;Comments  文件开头的注释，以及单行注释、函数注释、块注释&lt;/li&gt;
&lt;li&gt;Initialization of variables  变量声明&lt;/li&gt;
&lt;li&gt;Function definitions  函数定义&lt;/li&gt;
&lt;li&gt;Runtime configuration (parse options, read configuration file, and so on) 通过getopt解析脚本选项和运行所需的配置文件的导入&lt;/li&gt;
&lt;li&gt;Sanity check (are all values reasonable?)   一些判断、检查&lt;/li&gt;
&lt;li&gt;Command Run  程序运行&lt;/li&gt;
&lt;li&gt;Process information (calculate, slice and dice lines, I/O, and so on)&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#:    Title: wfe - List words ending with PATTERN&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#: Synopsis: wfe [-c|-h|-v] REGEX&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#:     Date: 2009-04-13&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#:  Version: 1.0&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#:   Author: Chris F.A. Johnson&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#:  Options: -c - Include compound words&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#:           -h - Print usage information&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#:           -v - Print version number&lt;/span&gt;

set -x
export PS4&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;+ $LINENO : &amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## Script metadata&lt;/span&gt;
scriptname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;0##*/&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;List words ending with REGEX&amp;#34;&lt;/span&gt;
usage&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$scriptname&lt;span style=&#34;color:#e6db74&#34;&gt; [-c|-h|-v] REGEX&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
date_of_creation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;2009-04-13
version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1.0
author&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Chris F.A. Johnson&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## File locations&lt;/span&gt;
dict&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$HOME/words
wordfile&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$dict/singlewords
compoundfile&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$dict/Compounds

&lt;span style=&#34;color:#75715e&#34;&gt;## Default is not to show compound words&lt;/span&gt;
compounds&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## Reular expression supplied on the command line&lt;/span&gt;
pattern&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$1

&lt;span style=&#34;color:#75715e&#34;&gt;## Function definitions&lt;/span&gt;

die&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#@ DESCRIPTION: print error message and exit with supplied return code&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;#@ USAGE: die STATUS [MESSAGE]&lt;/span&gt;
  error&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$1
  shift
  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$*&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$*&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
  exit &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$error&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

usage&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#@ DESCRIPTION: print usage information&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;       &lt;span style=&#34;color:#75715e&#34;&gt;#@ USAGE: usage&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;#@ REQUIRES: variable defined: $scriptname&lt;/span&gt;
  printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s - %s\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$scriptname&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$description&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;USAGE: %s\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$usage&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

version&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#@ DESCRIPTION: print version information&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;#@ USAGE: version&lt;/span&gt;
           &lt;span style=&#34;color:#75715e&#34;&gt;#@ REQUIRES: variables defined: $scriptname, $author and $version&lt;/span&gt;
  printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s version %s\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$scriptname&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$version&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;by %s, %d\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$author&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;date_of_creation%%-*&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#printf &amp;#34;by %s, %d\n&amp;#34; &amp;#34;$author&amp;#34; &amp;#34;${date_of_creation%%-*&amp;#34;   指的那边错误不是真正的错误！一般需要往上找&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## parse command-line options, -c, -h, and -v&lt;/span&gt;
echo &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; $OPTIND &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; getopts chv var
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; $var in
     c&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; compounds&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$compoundfile ;;
     h&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; usage; exit ;;
     v&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; version; exit ;;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
shift &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; $OPTIND &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;## move out one parameter and then position to the right by one step&lt;/span&gt;
                          &lt;span style=&#34;color:#75715e&#34;&gt;## 右移操作&lt;/span&gt;
regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$1
echo &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; $regex &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## sanity check&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$pattern&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; 
    &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Search term missing&amp;#34;&lt;/span&gt;
        usage
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## Search $wordfile and $compounds if it is defined&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
   cat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$wordfile&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$compounds&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# not null  -n ~ -z   n :nonzero  z:zero&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      cut -f1 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$compounds&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#}| grep -i &amp;#34;.$regex$&amp;#34; |sort -fu   #errror&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;| grep -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&lt;/span&gt;$regex$&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; |sort -fu 
&lt;span style=&#34;color:#75715e&#34;&gt;## Case-insensitive sort; remove duplicates&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;ckc&#34;&gt;ckc的几种注释关键字&lt;/h2&gt;
&lt;p&gt;当你敲入\ckc会在vim的下端出现一个输入栏，有下面几个选项&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;lsquo;bug&amp;rsquo;         : &amp;lsquo;:BUG:|DATE| |TIME|:|AUTHORREF|: &lt;!-- raw HTML omitted --&gt;&amp;rsquo;,&lt;/li&gt;
&lt;li&gt;&amp;lsquo;todo&amp;rsquo;        : &amp;lsquo;:TODO:|DATE| |TIME|:|AUTHORREF|: &lt;!-- raw HTML omitted --&gt;&amp;rsquo;,&lt;/li&gt;
&lt;li&gt;&amp;lsquo;tricky&amp;rsquo;      : &amp;lsquo;:TRICKY:|DATE| |TIME|:|AUTHORREF|: &lt;!-- raw HTML omitted --&gt;&amp;rsquo;,&lt;/li&gt;
&lt;li&gt;&amp;lsquo;warning&amp;rsquo;     : &amp;lsquo;:WARNING:|DATE| |TIME|:|AUTHORREF|: &lt;!-- raw HTML omitted --&gt;&amp;rsquo;,&lt;/li&gt;
&lt;li&gt;&amp;lsquo;workaround&amp;rsquo;  : &amp;lsquo;:WORKAROUND:|DATE| |TIME|:|AUTHORREF|: &lt;!-- raw HTML omitted --&gt;&amp;rsquo;,&lt;/li&gt;
&lt;li&gt;&amp;lsquo;new keyword&amp;rsquo; : &amp;lsquo;:&lt;!-- raw HTML omitted --&gt;:|DATE| |TIME|:|AUTHORREF|: {+COMMENT+}&#39;,&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;进一步的帮助参考[Bash Style Guide][2]
[1]:http://www.vim.org/scripts/script.php?script_id=365
[2]:https://lug.fh-swf.de/vim/vim-bash/StyleGuideShell.en.pdf
[3]: /images/linux/bash-keymap.png
[4]:http://www.apress.com/9781430219972/&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Shell_Programming_with_fewer_bugs</title>
      <link>https://jueqingsizhe66.github.io/blog/2015/08/09/shell-programming-with-fewer-bugs/</link>
      <pubDate>Sun, 09 Aug 2015 14:37:30 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2015/08/09/shell-programming-with-fewer-bugs/</guid>
      <description>&lt;p&gt;shell的强大之处在于短小精悍，对于IO处理相当方便，当然也可以兼杂小型的数值计算（很少）。
shell脚本在编写过程中也会产生很多bug。本文借鉴《Pro-Bash-Programming》一书所提倡的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;comment  写上开头注释&lt;/li&gt;
&lt;li&gt;Initialization of variables 变量初始化&lt;/li&gt;
&lt;li&gt;Function definitions  函数定义&lt;/li&gt;
&lt;li&gt;Runtime configuration 解析选项，读取配置文件等&lt;/li&gt;
&lt;li&gt;Sanity Check  经过Runtime配置之后，可能修改某些值，比如shift操作，所以需要判断变量的合理性&lt;/li&gt;
&lt;li&gt;Process information   最后才是计算、IO等&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过这中编写框架，可以减少错误。&lt;/p&gt;
&lt;p&gt;a. 首先保存最后的shell代码到一个文件wfe.sh
b. 其次下载所需要的字典文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  mkdir ~/words
  cd ~/words
 wget http://cfaj.freeshell.org/wordfinder/Compounds
 wget http://cfaj.freeshell.org/wordfinder/singlewords

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;c. 运行脚本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
1. 获取帮助
  bash wfe.sh -h
2. 获取版本信息
  bash wfe.sh -v
3.单个单词查找  
  bash wfe.sh bro
4. 复合单词内查找（包含单个单词）
  bash wfe.sh -c bro 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;d. 源码文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#:    Title: wfe - List words ending with PATTERN&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#: Synopsis: wfe [-c|-h|-v] REGEX&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#:     Date: 2009-04-13&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#:  Version: 1.0&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#:   Author: Chris F.A. Johnson&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#:  Options: -c - Include compound words&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#:           -h - Print usage information&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#:           -v - Print version number&lt;/span&gt;

set -x
export PS4&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;+ $LINENO : &amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## 变量初始化&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## Script metadata&lt;/span&gt;
scriptname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;0##*/&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;List words ending with REGEX&amp;#34;&lt;/span&gt;
usage&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$scriptname&lt;span style=&#34;color:#e6db74&#34;&gt; [-c|-h|-v] REGEX&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
date_of_creation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;2009-04-13
version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1.0
author&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Chris F.A. Johnson&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## File locations&lt;/span&gt;
dict&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$HOME/words
wordfile&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$dict/singlewords
compoundfile&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$dict/Compounds  &lt;span style=&#34;color:#75715e&#34;&gt;# 源代码作者在这边设下陷阱1  con--&amp;gt;com&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## Default is not to show compound words&lt;/span&gt;
compounds&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## Reular expression supplied on the command line&lt;/span&gt;
pattern&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$1

&lt;span style=&#34;color:#75715e&#34;&gt;## Function definitions 函数定义&lt;/span&gt; 

&lt;span style=&#34;color:#75715e&#34;&gt;#提倡使用这样编写函数@ Description @Usage：&lt;/span&gt;
die&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#@ DESCRIPTION: print error message and exit with supplied return code&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;#@ USAGE: die STATUS [MESSAGE]&lt;/span&gt;
  error&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$1
  shift
  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$*&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$*&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
  exit &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$error&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

usage&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#@ DESCRIPTION: print usage information&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;       &lt;span style=&#34;color:#75715e&#34;&gt;#@ USAGE: usage&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;#@ REQUIRES: variable defined: $scriptname&lt;/span&gt;
  printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s - %s\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$scriptname&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$description&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;USAGE: %s\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$usage&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

version&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#@ DESCRIPTION: print version information&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;#@ USAGE: version&lt;/span&gt;
           &lt;span style=&#34;color:#75715e&#34;&gt;#@ REQUIRES: variables defined: $scriptname, $author and $version&lt;/span&gt;
  printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s version %s\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$scriptname&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$version&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;by %s, %d\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$author&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;date_of_creation%%-*&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#printf &amp;#34;by %s, %d\n&amp;#34; &amp;#34;$author&amp;#34; &amp;#34;${date_of_creation%%-*&amp;#34;   指的那边错误不是真正的错误！一般需要往上找&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## parse command-line options, -c, -h, and -v 解析&lt;/span&gt;

echo &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; $OPTIND &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; getopts chv var
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; $var in
     c&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; compounds&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$compoundfile ;;
     h&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; usage; exit ;;
     v&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; version; exit ;;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
shift &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; $OPTIND &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;## move out one parameter and then position to the right by one step&lt;/span&gt;
                          &lt;span style=&#34;color:#75715e&#34;&gt;## 右移操作&lt;/span&gt;
regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$1           &lt;span style=&#34;color:#75715e&#34;&gt;## 设下陷阱2 没有注册regex变量，却直接调用$regex&lt;/span&gt;
echo &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; $regex &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## sanity check   设下陷阱3 没有进行错误检查&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$pattern&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; 
    &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Search term missing&amp;#34;&lt;/span&gt;
        usage
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;


&lt;span style=&#34;color:#75715e&#34;&gt;## Search $wordfile and $compounds if it is defined&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
   cat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$wordfile&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$compounds&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# not null  -n ~ -z   n :nonzero  z:zero&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      cut -f1 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$compounds&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#}| grep -i &amp;#34;.$regex$&amp;#34; |sort -fu   #errror&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;| grep -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&lt;/span&gt;$regex$&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; |sort -fu 

&lt;span style=&#34;color:#75715e&#34;&gt;## Case-insensitive sort; remove duplicates&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>AllFilesInFoldsToOneFile</title>
      <link>https://jueqingsizhe66.github.io/blog/2015/08/09/allfilesinfoldstoonefile/</link>
      <pubDate>Sun, 09 Aug 2015 14:03:43 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2015/08/09/allfilesinfoldstoonefile/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;find的使用&lt;/li&gt;
&lt;li&gt;更新了注释&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash - 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#===============================================================================&lt;/span&gt;
#
&lt;span style=&#34;color:#75715e&#34;&gt;#          FILE: browserNew.sh&lt;/span&gt;
# 
&lt;span style=&#34;color:#75715e&#34;&gt;#         USAGE: ./browserNew.sh&lt;/span&gt; 
# 
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:&lt;/span&gt; 
# 
&lt;span style=&#34;color:#75715e&#34;&gt;#       OPTIONS: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  REQUIREMENTS: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          BUGS: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#         NOTES: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#        AUTHOR: Ye Zhaoliang (), zhaoturkkey@163.com&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  ORGANIZATION: YZL&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#       CREATED: 2015年06月27日 15:19&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#      REVISION:  ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#===============================================================================&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  generateChapter&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  针对不同额文件采用不同的处理方法，判断目录 和判断脚本是一个重要的操作&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#                 但是更为重要的是 find获得文集拿的绝对路径(相对于当前文件)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## Function definition&lt;/span&gt; 

generateChapter&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# @Description : 对不同文件进行不同处理&lt;/span&gt;
                  &lt;span style=&#34;color:#75715e&#34;&gt;# @usage       : generatechapter&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# 妙用find 得到当前目录的相对路径 不需要不断的进入目录&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; var in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;find . -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d  $var &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt; cannot . Error&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
            echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;currentDir&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var#.&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;是一个目录&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 使用#号来删除之前的点号&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# 为什么会想到使用 ${var##*/}因为var是一个相对当前文件的绝对路径，所以经过测试发现他和${0}等效如果截取到最大长度的/的话&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var##*/&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;0&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 一定要注意等式两边有空格&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
            echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;currentDir&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var#.&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;0&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 脚本文件不处理&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
            getFile &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;currentDir&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var#.&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 这边需要去除到第一个点号,这是才得到的处理方法&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;



&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  getFile&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  在每个文件的头部添加一些信息&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
getFile&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#@ Description: 细节处理  包括产生开头 产生边框等&lt;/span&gt;
          &lt;span style=&#34;color:#75715e&#34;&gt;#@ Usage      : getFile&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    startString&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;# -------------------&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; started&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-------------------#&amp;#34;&lt;/span&gt;
    endString&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;# --------------------&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; ended &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-------------------#&amp;#34;&lt;/span&gt;
       &lt;span style=&#34;color:#75715e&#34;&gt;#echo &amp;#34;&amp;#34; &amp;gt;&amp;gt;summary.sh&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#echo -e &amp;#34;\033[44;37m -------------------&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;#34;$1&amp;#34; started&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-------------------\033[0m&amp;#34; &amp;gt;&amp;gt;summary.sh&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#echo  &amp;#34;# -------------------&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;#34;$1&amp;#34; started&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-------------------&amp;#34; &amp;gt;&amp;gt;summary.sh&lt;/span&gt;
    echo $startString &amp;gt;&amp;gt; summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#`printf &amp;#34;&lt;/span&gt;%&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;startString&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;s&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`#&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#`printf &amp;#34;&lt;/span&gt;%&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;startString&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;s&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`#&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#`printf &amp;#34;&lt;/span&gt;%&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;startString&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;s&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`#&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh &lt;span style=&#34;color:#75715e&#34;&gt;### 不加上$反而不行&lt;/span&gt;
   &lt;span style=&#34;color:#75715e&#34;&gt;# echo &amp;#34;#&amp;#34; &amp;gt;&amp;gt;summary.sh&lt;/span&gt;
   &lt;span style=&#34;color:#75715e&#34;&gt;# echo &amp;#34;#&amp;#34; &amp;gt;&amp;gt;summary.sh&lt;/span&gt;
    sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1,7d&amp;#39;&lt;/span&gt; $1 &amp;gt;&amp;gt; summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#`printf &amp;#34;&lt;/span&gt;%&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;endString&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;s&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`#&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#`printf &amp;#34;&lt;/span&gt;%&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;endString&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;s&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`#&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#`printf &amp;#34;&lt;/span&gt;%&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;endString&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;s&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`#&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    &lt;span style=&#34;color:#75715e&#34;&gt;#echo &amp;#34;#&amp;#34; &amp;gt;&amp;gt;summary.sh&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#echo &amp;#34;#&amp;#34; &amp;gt;&amp;gt;summary.sh&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#echo -e &amp;#34;\033[43;37m --------------------&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;#34;$1&amp;#34; ended &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-------------------\033[0m&amp;#34; &amp;gt;&amp;gt; summary.sh&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#echo &amp;#34;# --------------------&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;#34;$1&amp;#34; ended &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-------------------&amp;#34; &amp;gt;&amp;gt; summary.sh&lt;/span&gt;
    echo $endString &amp;gt;&amp;gt; summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## variable initial&lt;/span&gt; 
currentDir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;pwd&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;


&lt;span style=&#34;color:#75715e&#34;&gt;## processing information&lt;/span&gt; 
&lt;span style=&#34;color:#75715e&#34;&gt;# 如果存在 summary.sh 证明已经存在了，就先把删掉， 因为这里是&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 采用追加的方式，而不是写入。&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -e ./summary.sh &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; 
    rm -rf ./summary.sh
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 调用产生所有的文件夹内的数据到一个文件中&lt;/span&gt;
generateChapter


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>字符串关键字的出现频率统计</title>
      <link>https://jueqingsizhe66.github.io/blog/2015/06/14/zi-fu-chuan-guan-jian-zi-de-chu-xian-pin-lu-tong-ji/</link>
      <pubDate>Sun, 14 Jun 2015 01:50:24 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2015/06/14/zi-fu-chuan-guan-jian-zi-de-chu-xian-pin-lu-tong-ji/</guid>
      <description>&lt;p&gt;有时候我们需要统计一篇论文当中某个字符串的出现频率。
试验了，grep，awk，sed，wc -l等，最终发现awk的RS
完美的解决了问题。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.cnblogs.com/fhefh/archive/2011/11/16/2251656.html&#34;&gt;RS的用法&lt;/a&gt;
&lt;a href=&#34;http://blog.163.com/facteur@126/blog/static/23208030201282085943698/&#34;&gt;统计次数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关键字文件（可以不断的添加你要分析的字段):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;风力机
气动力
失谐
偏航
阵风
扭矩
功率
风切变
转速
风速
升力系数
阻力系数
升阻比


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;短短的几行shell语句解决了问题，优雅。
shell文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash -&lt;/span&gt; 
&lt;span style=&#34;color:#75715e&#34;&gt;#===============================================================================&lt;/span&gt;
#
&lt;span style=&#34;color:#75715e&#34;&gt;#          FILE: analysis.sh&lt;/span&gt;
# 
&lt;span style=&#34;color:#75715e&#34;&gt;#         USAGE: ./analysis.sh&lt;/span&gt; 
# 
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:&lt;/span&gt; 
# 
&lt;span style=&#34;color:#75715e&#34;&gt;#       OPTIONS: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  REQUIREMENTS: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          BUGS: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#         NOTES: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#        AUTHOR: Ye Zhaoliang (), zhaoturkkey@163.com&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  ORGANIZATION: YZL&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#       CREATED: 2015年06月14日 01:18&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#      REVISION:  ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#===============================================================================&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; read lines
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
    awk -v RS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$lines&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;END{print RS,--NR}&amp;#39;&lt;/span&gt; qiu.org &lt;span style=&#34;color:#75715e&#34;&gt;#减减表示减1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; &amp;lt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;analysis.data&amp;#34;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;heading&#34;&gt;搜索内容&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;grep -n &amp;ldquo;内容关键字&amp;rdquo; 文件名路径&lt;/li&gt;
&lt;li&gt;awk &amp;lsquo;{if($0~关键字){}}&amp;rsquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;等。
3. sed &amp;lsquo;/关键字/p&amp;rsquo;&lt;/p&gt;
&lt;h2 id=&#34;heading-1&#34;&gt;结果&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;┌─&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;javazhao-N53SM&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;/paper&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
└─➞ sh analysis.sh 
风力机 &lt;span style=&#34;color:#ae81ff&#34;&gt;379&lt;/span&gt;
气动力 &lt;span style=&#34;color:#ae81ff&#34;&gt;397&lt;/span&gt;
失谐 &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;
偏航 &lt;span style=&#34;color:#ae81ff&#34;&gt;353&lt;/span&gt;
阵风 &lt;span style=&#34;color:#ae81ff&#34;&gt;63&lt;/span&gt;
扭矩 &lt;span style=&#34;color:#ae81ff&#34;&gt;171&lt;/span&gt;
功率 &lt;span style=&#34;color:#ae81ff&#34;&gt;139&lt;/span&gt;
风切变 &lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;
转速 &lt;span style=&#34;color:#ae81ff&#34;&gt;172&lt;/span&gt;
风速 &lt;span style=&#34;color:#ae81ff&#34;&gt;353&lt;/span&gt;
升力系数 &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;
阻力系数 &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;
升阻比 &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>把时间和键盘写进script</title>
      <link>https://jueqingsizhe66.github.io/blog/2015/06/13/ba-shi-jian-he-jian-pan-xie-jin-script/</link>
      <pubDate>Sat, 13 Jun 2015 20:00:58 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2015/06/13/ba-shi-jian-he-jian-pan-xie-jin-script/</guid>
      <description>&lt;p&gt;在Linux地下，脚本(script)编程是一个快捷的方式和内核(kernel)进行交流。
通常包含以下几种脚本编程:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bash shell(其他shell也类似)&lt;/li&gt;
&lt;li&gt;perl&lt;/li&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;li&gt;ruby&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我现在发现我们既可以处理文件中的信息，也同时可以处理硬件的东西，这些其实我就清楚，比如linux把很多的设备都虚拟为文件，只不过之前不知道怎么用。
接触到shell之后，我才发现比如键盘的东西都可以被写进脚本的，也就是电脑上的外接设备也是可以被写进程序当中的，当作计算机里面的一种概念。&lt;/p&gt;
&lt;h2 id=&#34;vim&#34;&gt;vim的脚本化操作&lt;/h2&gt;
&lt;p&gt;把下段的代码保存为c.sh,主要功能是把双个除号改为井号，当作注释。
这样就可以把vim的action行为录为脚本。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
vim ./cData &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;VIM &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:%s#//#\##
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:wq 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;VIM&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;/dev/null 2&amp;gt;&amp;amp;1  拆为四部分来分析下:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;首先 0&amp;gt; 表示stdin标准输入; 1&amp;gt; 表示stdout标准输出; 2&amp;gt; 表示stderr错误输出;&lt;/li&gt;
&lt;li&gt;符号 &amp;gt;  等价于 1&amp;gt; (系统默认为1,省略了先); 所以&amp;quot;&amp;gt;/dev/null&amp;quot;等同于 &amp;ldquo;1&amp;gt;/dev/null&amp;rdquo;&lt;/li&gt;
&lt;li&gt;/dev/null 代表空设备文件&lt;/li&gt;
&lt;li&gt;&amp;amp; 可以理解为是&amp;quot;等同于&amp;quot;的意思，2&amp;gt;&amp;amp;1，即表示2的输出重定向等同于1
因此，&amp;gt;/dev/null 2&amp;gt;&amp;amp;1 也可以写成“1&amp;gt; /dev/null 2&amp;gt; &amp;amp;1”&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那么本文标题的语句执行过程为：
1&amp;gt;/dev/null ：首先表示标准输出重定向到空设备文件，也就是不输出任何信息到终端，说白了就是不显示任何信息。
2&amp;gt;&amp;amp;1 ：接着，将标准错误输出重定向 到 标准输出，因为之前标准输出已经重定向到了空设备文件，所以标准错误输出也重定向到空设备文件。&lt;/p&gt;
&lt;p&gt;类似还有cat&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cat &amp;gt;&amp;gt; /etc/man.config &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;MANPATH  /srv/httpd/man/
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;

cat &amp;gt;&amp;gt; /etc/profile.d/http.sh &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;export PATH=/srv/httpd/bin:$PATH
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mysql&#34;&gt;mysql的脚本化操作&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;mysql -u$user -p$password &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt; EOF  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;FLUSH TABLES WITH READ LOCK;  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;system lvcreate --snapshot -n $snap -L$snapsize /dev/$vg/$lv;  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;UNLOCK TABLES;  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;quit  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;gnuplot&#34;&gt;gnuplot的脚本化操作&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;gnuplot&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF   
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set ter &amp;#39;png&amp;#39;   
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set out &amp;#39;$i/cpUp.png&amp;#39;  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;plot &amp;#34;$i/cpUp.txt&amp;#34; t &amp;#39;cp&amp;#39; w lp  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;heading&#34;&gt;获得键盘输入的两种方式&lt;/h2&gt;
&lt;h3 id=&#34;read&#34;&gt;使用read&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
read -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input a val:&amp;#34;&lt;/span&gt;  val
echo $val

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;stty&#34;&gt;使用stty&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
get_char&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
   SAVEDSTTY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;stty -g&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
   stty -echo
   stty raw
   dd &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/dev/tty bs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 2&amp;gt; /dev/null
   stty -raw
   stty echo
   stty $SAVEDSTTY
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Press any key to continue...&amp;#34;&lt;/span&gt;
char&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;get_char&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
read k
echo $k
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;heading-1&#34;&gt;不错的一个菜单输入&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#字颜色：30—–37&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#字背景颜色范围：40—–47&lt;/span&gt; 

&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; :
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[5m 1) china \033[0m&amp;#34;&lt;/span&gt; 
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[32m 2) America \033[0m&amp;#34;&lt;/span&gt; 
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[33m 3) Japan \033[0m&amp;#34;&lt;/span&gt; 
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[34m 4) England \033[0m&amp;#34;&lt;/span&gt; 
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[35m 5) France \033[0m&amp;#34;&lt;/span&gt; 
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[36m 6) Spain \033[0m&amp;#34;&lt;/span&gt; 
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[37m 7) Brazil \033[0m&amp;#34;&lt;/span&gt; 
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[40;37m 8) Turkey \033[0m&amp;#34;&lt;/span&gt; 
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[41;37m 9) Italy \033[0m&amp;#34;&lt;/span&gt; 
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[42;37m 10) Germany \033[0m&amp;#34;&lt;/span&gt; 
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[43;37m 11) Arabi \033[0m&amp;#34;&lt;/span&gt; 

    read -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Please Enter the number [1-11]&amp;#34;&lt;/span&gt; val
    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; $val in
        1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[5m 1) You input the --&amp;gt; china\n \033[0m&amp;#34;&lt;/span&gt; 
            ;;
        2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[32m 2) You input the --&amp;gt; America \n\033[0m&amp;#34;&lt;/span&gt; 
            ;;
        3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[33m 3) You input the --&amp;gt; Japan\n \033[0m&amp;#34;&lt;/span&gt; 
            ;;
        4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[34m 4) You input the --&amp;gt; England \n\033[0m&amp;#34;&lt;/span&gt; 
            ;;
        5&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[35m 5) You input the --&amp;gt; France \n \033[0m&amp;#34;&lt;/span&gt; 
            ;;
        6&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[36m 6) You input the --&amp;gt; Spain\n \033[0m&amp;#34;&lt;/span&gt; 
            ;;
        7&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[37m 7) You input the --&amp;gt; Brazil\n \033[0m&amp;#34;&lt;/span&gt; 
            ;;
        8&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[40;37m 8) You input the --&amp;gt; Turkey\n \033[0m&amp;#34;&lt;/span&gt; 
            ;;
        9&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[41;37m 9) You input the --&amp;gt; Italy\n \033[0m&amp;#34;&lt;/span&gt; 
            ;;
        10&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[42;37m 10) You input the --&amp;gt; Germany\n \033[0m&amp;#34;&lt;/span&gt; 
            ;;
        11&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\033[43;37m 11) You input the --&amp;gt; Arabi\n \033[0m&amp;#34;&lt;/span&gt; 
            ;;
        *&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; exit &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
            ;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://jueqingsizhe66.github.io/images/menu.png&#34; alt=&#34;结果&#34;&gt;&lt;/p&gt;
&lt;p&gt;持续更新本文的script的内容&amp;hellip;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>阅读openfoam源代码的小工具</title>
      <link>https://jueqingsizhe66.github.io/blog/2015/06/10/yue-du-openfoamyuan-dai-ma-de-xiao-gong-ju/</link>
      <pubDate>Wed, 10 Jun 2015 23:19:42 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2015/06/10/yue-du-openfoamyuan-dai-ma-de-xiao-gong-ju/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;当你阅读源代码你是否厌倦了cd来cd去，于是想把他们堆在一个文件内&lt;/li&gt;
&lt;li&gt;而堆起来又不好看，于是想要打扮一下&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是写了下面的小程序，估计对于阅读有帮助，主要用到&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;shell变量处理&lt;/li&gt;
&lt;li&gt;shell变量长度&lt;/li&gt;
&lt;li&gt;find显示相对全路经&lt;/li&gt;
&lt;li&gt;==两边__不能有__空格，然而在赋值的时候必须没有空格&lt;/li&gt;
&lt;li&gt;利用函数思想，封装小寒数&lt;/li&gt;
&lt;li&gt;美观，把一个文件当作一个夹子进行显示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意针对每一个版本都需要进行适当的修改&lt;/strong&gt;.在getFile中有一个sed命令一定要注意，那是删除行首的7行，针对不同文件，需要适当修改.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash - 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#===============================================================================&lt;/span&gt;
#
&lt;span style=&#34;color:#75715e&#34;&gt;#          FILE: browser.sh&lt;/span&gt;
# 
&lt;span style=&#34;color:#75715e&#34;&gt;#         USAGE: ./browser.sh&lt;/span&gt; 
# 
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  注意针对每一个版本都需要进行适当的修改&lt;/span&gt;
# 
&lt;span style=&#34;color:#75715e&#34;&gt;#       OPTIONS: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  REQUIREMENTS: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          BUGS: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#         NOTES: ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#        AUTHOR: Ye Zhaoliang (), zhaoturkkey@163.com&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  ORGANIZATION: YZL&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#       CREATED: 2015年06月10日 21:50&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#      REVISION:  ---&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#===============================================================================&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  generateChapter&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  针对不同额文件采用不同的处理方法，判断目录 和判断脚本是一个重要的操作&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#                 但是更为重要的是 find获得文集拿的绝对路径(相对于当前文件)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;

generateChapter&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# 妙用find 得到当前目录的相对路径 不需要不断的进入目录&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; var in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;find . -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d  $var &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt; cannot . Error&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
            echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;currentDir&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var#.&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;是一个目录&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 使用#号来删除之前的点号&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var##*/&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;0&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 一定要注意等式两边有空格&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
            echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;currentDir&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var#.&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;0&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 脚本文件不处理&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
            getFile &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;currentDir&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var#.&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;


&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  getFile&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  在每个文件的头部添加一些信息&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
getFile&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    startString&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;# -------------------&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; started&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-------------------#&amp;#34;&lt;/span&gt;
    endString&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;# --------------------&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; ended &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-------------------#&amp;#34;&lt;/span&gt;
       &lt;span style=&#34;color:#75715e&#34;&gt;#echo &amp;#34;&amp;#34; &amp;gt;&amp;gt;summary.sh&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#echo -e &amp;#34;\033[44;37m -------------------&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;#34;$1&amp;#34; started&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-------------------\033[0m&amp;#34; &amp;gt;&amp;gt;summary.sh&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#echo  &amp;#34;# -------------------&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;#34;$1&amp;#34; started&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-------------------&amp;#34; &amp;gt;&amp;gt;summary.sh&lt;/span&gt;
    echo $startString &amp;gt;&amp;gt; summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#`printf &amp;#34;&lt;/span&gt;%&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;startString&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;s&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`#&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#`printf &amp;#34;&lt;/span&gt;%&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;startString&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;s&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`#&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#`printf &amp;#34;&lt;/span&gt;%&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;startString&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;s&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`#&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh &lt;span style=&#34;color:#75715e&#34;&gt;### 不加上$反而不行&lt;/span&gt;
   &lt;span style=&#34;color:#75715e&#34;&gt;# echo &amp;#34;#&amp;#34; &amp;gt;&amp;gt;summary.sh&lt;/span&gt;
   &lt;span style=&#34;color:#75715e&#34;&gt;# echo &amp;#34;#&amp;#34; &amp;gt;&amp;gt;summary.sh&lt;/span&gt;
    sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1,7d&amp;#39;&lt;/span&gt; $1 &amp;gt;&amp;gt; summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#`printf &amp;#34;&lt;/span&gt;%&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;endString&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;s&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`#&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#`printf &amp;#34;&lt;/span&gt;%&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;endString&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;s&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`#&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#`printf &amp;#34;&lt;/span&gt;%&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;endString&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;s&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`#&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    &lt;span style=&#34;color:#75715e&#34;&gt;#echo &amp;#34;#&amp;#34; &amp;gt;&amp;gt;summary.sh&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#echo &amp;#34;#&amp;#34; &amp;gt;&amp;gt;summary.sh&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#echo -e &amp;#34;\033[43;37m --------------------&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;#34;$1&amp;#34; ended &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-------------------\033[0m&amp;#34; &amp;gt;&amp;gt; summary.sh&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#echo &amp;#34;# --------------------&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;#34;$1&amp;#34; ended &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-------------------&amp;#34; &amp;gt;&amp;gt; summary.sh&lt;/span&gt;
    echo $endString &amp;gt;&amp;gt; summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt;summary.sh
    
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

currentDir&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;pwd&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 如果存在 summary.sh 证明已经存在了，就先把删掉， 因为这里是&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 采用追加的方式，而不是写入。&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -e ./summary.sh &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; 
    rm -rf ./summary.sh
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 调用产生所有的文件夹内的数据到一个文件中&lt;/span&gt;

generateChapter

&lt;span style=&#34;color:#75715e&#34;&gt;#sed -i &amp;#39;/C++/d&amp;#39; summary |sed &amp;#39;/=========/d&amp;#39;|sed &amp;#39;/OpenFOAM/d&amp;#39; | sed &amp;#39;/Version/d&amp;#39; | sed &amp;#39;/Web/d&amp;#39;|sed &amp;#39;/anipulation/d&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;heading&#34;&gt;结果显示&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -------------------&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;/openfoamF708/tutorials/incompressible/icoFoam/cavity/system/fvSolution started&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-------------------#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#                                                                                                                                        #&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#                                                                                                                                        #&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#                                                                                                                                        #&lt;/span&gt;
FoamFile
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    version     2.0;
    format      ascii;
    class       dictionary;
    location    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;system&amp;#34;&lt;/span&gt;;
    object      fvSolution;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    p
    &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        solver          PCG;
        preconditioner  DIC;
        tolerance       1e-06;
        relTol          0;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    U
    &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-05;
        relTol          0;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

PISO
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    nCorrectors     2;
    nNonOrthogonalCorrectors 0;
    pRefCell        0;
    pRefValue       0;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;


&lt;span style=&#34;color:#75715e&#34;&gt;#                                                                                                                                        #&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#                                                                                                                                        #&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#                                                                                                                                        #&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# --------------------&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;/openfoamF708/tutorials/incompressible/icoFoam/cavity/system/fvSolution ended &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-------------------#&lt;/span&gt;



&lt;span style=&#34;color:#75715e&#34;&gt;# -------------------&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;/openfoamF708/tutorials/incompressible/icoFoam/cavity/system/fvSchemes started&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;-------------------#&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>ubuntu系统运用</title>
      <link>https://jueqingsizhe66.github.io/blog/2015/06/10/ubuntuxi-tong-yun-yong/</link>
      <pubDate>Wed, 10 Jun 2015 13:50:55 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2015/06/10/ubuntuxi-tong-yun-yong/</guid>
      <description>&lt;p&gt;ubuntu系统，比如你用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;tar -cvf &lt;span style=&#34;color:#ae81ff&#34;&gt;\*&lt;/span&gt;.tar.gz 某个文件夹
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;会发现可以多窗口地执行。其实这也说明了一点linux系统的多用户、多线程地开发系统、使用系统。&lt;/p&gt;
&lt;p&gt;shell-script是一个比较有用的工具，沟通着用户(user)和内核(kernel)之间,我的理解是shell就是一个解释器(从lisp的解释器的角度来说,相互学习从函数式过渡到命令式)&lt;/p&gt;
&lt;p&gt;所以我会尝试着把我所有需要安装的software(app),都囊括在一个sh文件当中，所以我重装的时候只需要一个批处理即可。&lt;/p&gt;
&lt;p&gt;下面我分成以下5个部分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1系统的Git管理&lt;/li&gt;
&lt;li&gt;2图形部分&lt;/li&gt;
&lt;li&gt;3语言部分&lt;/li&gt;
&lt;li&gt;4编辑部分&lt;/li&gt;
&lt;li&gt;5配置部分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一一写上我会执行的操作，当然这些程序组合成为我自己使用的linux系统。方便我和linux的内核进行交流。&lt;/p&gt;
&lt;h2 id=&#34;1git&#34;&gt;1系统的Git管理&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;apt-get install git,gitk,git-doc &lt;span style=&#34;color:#75715e&#34;&gt;#rememeber how to configure&lt;/span&gt;
apt-get install git-flow &lt;span style=&#34;color:#75715e&#34;&gt;#升级版的管理&lt;/span&gt;

git config --global user.name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ye zhaoliang&amp;#34;&lt;/span&gt;
git config --global user.email &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zhaoturkkey@163.com&amp;#34;&lt;/span&gt;
ssh-keygen -t rsa -C &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zhaoturkkey@163.com&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2&#34;&gt;2图形部分&lt;/h2&gt;
&lt;p&gt;有时候你希望把你的相关数据打印成图片，这样方便交流&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;apt-get install gnuplot
apt-get install graphviz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3&#34;&gt;3语言部分&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;apt-get install gfortran 
apt-get install gcc 
apt-get install python
&lt;span style=&#34;color:#75715e&#34;&gt;# drracket&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# haskell&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4&#34;&gt;4编辑部分&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;apt-get install vim   &lt;span style=&#34;color:#75715e&#34;&gt;#rememeber how to configure&lt;/span&gt;
apt-get install vim-gtk

apt-get install emacs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;5&#34;&gt;5配置部分&lt;/h2&gt;
&lt;p&gt;在ubuntu管理系统经常会需要配置用户目录下的dotfiles，
比如登录相关文件.bashrc,.bash_logout,.bash_profile.
我会尝试着把我相关需要的文件夹备份在一个tar包。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;tar -xvf ./bash-it.tar.gz -C ~ &lt;span style=&#34;color:#75715e&#34;&gt;# remember vcprompt&lt;/span&gt;
tar -xvf ./vim.tar.gz -C ~ &lt;span style=&#34;color:#75715e&#34;&gt;# remember vim :BundleInstall&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;#结论
通过上面五个部分，无法体现我使用linux的基本感觉&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;recur&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
 查找&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;进入某个目录&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
 判断&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;If,case&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
 修改（配置 export 设置环境变量）
 recur
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;cfaj写的&lt;a href=&#34;shell-script:&#34;&gt;shell-script:&lt;/a&gt;和&lt;!-- raw HTML omitted --&gt;
主要教会我们的是我使用下划线新建一个临时函数，并使用下划线函数的大写字母来表征函数的返回值。然后使用${}变量引用来实现
版本号的截取并使用case进行分类选择，还有比如不同的系统的case选择。&lt;/p&gt;
&lt;h3 id=&#34;heading&#34;&gt;补充一个操作&lt;/h3&gt;
&lt;p&gt;如果你想要使得子程序可以掉哦你个函数，必须使用export命令导出，类似于变量&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; func&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;导出函数&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

export -f func
&lt;span style=&#34;color:#75715e&#34;&gt;# 使用export -f 导出函数，只用于bash&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 使用export  DATE  等，导出系统变量&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;只有经过这样你的func才变成公有化。当然你也可以把脚本添加到path路径中。&lt;/p&gt;
&lt;h3 id=&#34;heading-1&#34;&gt;谨记一个失误&lt;/h3&gt;
&lt;p&gt;无论是使用tar -cvf 打包，还是生成某个程序等，一定要检查一遍，是否能够运行，
当时就确认你的操作无误，否则后来会后悔(曾经打包了一个系统 发现都不能用了！
而那个系统也被我删掉了，可见我有多懊恼)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;tar: 跳转到下一个头
tar: 由于前次错误，将以上次的错误状态退出

当然有人说看看是不是需要使用tar -zxvf 而不是tar -xvf
我说我压缩的时候根本就没有用gzip，当然我也试了没效果，后来都删掉了。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>bash提醒框的制作</title>
      <link>https://jueqingsizhe66.github.io/blog/2015/06/04/bashti-xing-kuang-de-zhi-zuo/</link>
      <pubDate>Thu, 04 Jun 2015 21:13:33 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2015/06/04/bashti-xing-kuang-de-zhi-zuo/</guid>
      <description>&lt;p&gt;一个elegant的提示窗口的制作。从_repeat到升级的优化版本（采用三步优化），然后到后来组装成alert函数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;_repeat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#@ 使用方式： _repeat 要重复的字符串  重复次数&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#@  Usage : _repeat string number&lt;/span&gt;
    _REPEAT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#set but empty&lt;/span&gt;
    echo $2
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;_REPEAT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; -lt $2 &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
        _REPEAT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$_REPEAT$1
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;_repeat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;
echo $_REPEAT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  _repeat1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  优化版本&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
_repeat1&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#@ 使用方式： _repeat 要重复的字符串  重复次数&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#@  Usage : _repeat string number&lt;/span&gt;
    _REPEAT1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$1  &lt;span style=&#34;color:#75715e&#34;&gt;#set and not empty, or unlimit recycle&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;_REPEAT1&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; -lt $2 &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
        _REPEAT1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$_REPEAT1$_REPEAT1$_REPEAT1 &lt;span style=&#34;color:#75715e&#34;&gt;## 3次优化&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
    _REPEAT1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;_REPEAT1:0:$2&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;##Trim到我们需要的长度&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

repeat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    _repeat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$@&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$_REPEAT1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;_repeat1 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;
echo $_REPEAT1
repeat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello 30&amp;#34;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;alert&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    _repeat1 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;2&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;#&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;1&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;## ${2:-#} 如果$2未定义则使用#&lt;/span&gt;
    printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\a%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$_REPEAT1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;## \a=BEL&lt;/span&gt;
    printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%2.2s %s %2.2s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$_REPEAT1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$_REPEAT1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;## \a=BEL&lt;/span&gt;
    printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$_REPEAT1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;


alert &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Do you really want to delete all the files?&amp;#34;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>bash命令分类--架构在文件系统级别</title>
      <link>https://jueqingsizhe66.github.io/blog/2015/06/03/bashming-ling-fen-lei-jia-gou-zai-wen-jian-xi-tong-ji-bie/</link>
      <pubDate>Wed, 03 Jun 2015 20:18:18 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2015/06/03/bashming-ling-fen-lei-jia-gou-zai-wen-jian-xi-tong-ji-bie/</guid>
      <description>&lt;p&gt;I have many years experience in the shell command, so I categoried some commands into
many categories,which let me understand the commands more clearly.
You can first practice &lt;a href=&#34;http://blog.chinaunix.net/uid-25932176-id-2973818.html&#34;&gt;how to play with bash shell&lt;/a&gt;,then you can catch the topic afterward
&lt;a href=&#34;http://cfajohnson.com/&#34;&gt;cfaj network&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;bit&#34;&gt;bit&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;programming language :
&lt;ul&gt;
&lt;li&gt;c ,c++ c#,java&lt;/li&gt;
&lt;li&gt;lisp,scheme,haskell etc&lt;/li&gt;
&lt;li&gt;bash,python,perl,ruby,etc&lt;/li&gt;
&lt;li&gt;javascript&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;word&#34;&gt;word&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;programming language :
&lt;ul&gt;
&lt;li&gt;c ,c++ c#,java&lt;/li&gt;
&lt;li&gt;lisp,scheme,haskell etc&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.vaikan.com/bash-scripting&#34;&gt;bash&lt;/a&gt;,python,perl,ruby,etc
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$() == () == `` means in the &lt;strong&gt;subshell&lt;/strong&gt; closure the commands; $((  )) == ((  )): mainly some algorithm operations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;${} == {} means in the &lt;strong&gt;current shell&lt;/strong&gt; closure the commands;  ${{  }} == {{  }}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;${#f}  calculate the variable f&#39;s length&lt;/li&gt;
&lt;li&gt;${f:6}  get the string from 6 to end of the string&lt;/li&gt;
&lt;li&gt;${f:6:4} get the string from 6 to (6+4) of the string. ${f:${pos}:${len}}&lt;/li&gt;
&lt;li&gt;${f: -8} get the reverse from end to end+8&#39;s string.&lt;/li&gt;
&lt;li&gt;${f/path?/x}  &amp;ndash;single replace&lt;/li&gt;
&lt;li&gt;${f//path?/x} &amp;ndash;globle replace&lt;/li&gt;
&lt;li&gt;${f#*/}  delete the characters until get across a  / from left to right(&lt;strong&gt;From means start point. To means end point&lt;/strong&gt;)
&lt;ul&gt;
&lt;li&gt;${var#*o}  remove the shortest string that matches PATTERN (the character &amp;lsquo;o&amp;rsquo;) from the begining of the expanded value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;${f##*/} delete the caaracters until all the / symbols have been got across from left to right.
&lt;ul&gt;
&lt;li&gt;${0##*/} extract the name of a script from the $0 parameter,which contains the full path to the script&lt;/li&gt;
&lt;li&gt;similarly, you can use &amp;ldquo;${1%/&lt;em&gt;}&amp;quot;,&amp;ldquo;${2%/&lt;/em&gt;}&amp;rdquo;  &amp;hellip;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;${f%*/}  delete the characters until get across a  /  from right to left&lt;/li&gt;
&lt;li&gt;${f%%*/} delete the caaracters until all the / symbols have been got across from right to left.&lt;/li&gt;
&lt;li&gt;variable (&lt;strong&gt;- is used to set the unset value; + is used to set the set value&lt;/strong&gt;)
&lt;ul&gt;
&lt;li&gt;${var:-default} checks to see whether a variable is &lt;strong&gt;unset or empty&lt;/strong&gt;,if yes,then expands to a default string to var(if omit the colon? see below)&lt;code&gt;unset var or var=&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;${var:=default} 和${var:-default}很像，只不过他还多做了一个额外的功能，&lt;strong&gt;assign the default value to the variable&lt;/strong&gt;.而在${var:-|+default}的情况下，并没有指派给变量值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;${var-default} checks to see whether a variable is &lt;strong&gt;unset&lt;/strong&gt;,if yes,then expands to a default string to var, &lt;code&gt;unset var&lt;/code&gt;,almost the same with colon&lt;/li&gt;
&lt;li&gt;${var:+alternative} use alternative value if $var &lt;strong&gt;is set and  not empty&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;${var+alternative} use alternative value if $var &lt;strong&gt;is set&lt;/strong&gt;,it does matter whether $var is  empty or not&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;${var^[a-m]}&lt;/li&gt;
&lt;li&gt;${var^^[a-m]} ## matches all characters from a to m inclusive! if match change to uppercase.NOTE:&lt;strong&gt;Only in Bash &amp;gt;=4.0&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;${var^^}  uppercase the string,such as toronto change to TORONTO&lt;/li&gt;
&lt;li&gt;${var^} Captitalize the string, such as toronto change to Toronto&lt;/li&gt;
&lt;li&gt;${var,,}  such as var=TORONTO change to toronto&lt;/li&gt;
&lt;li&gt;${var,,[N-Q]} such as var=TORONTO changes to ToRonTo&lt;/li&gt;
&lt;li&gt;ARRAY(use ${} to get the value of the array) Note: &lt;strong&gt;not POSIX standard ,but fit for bash shell&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;printf &amp;ldquo;%s\n&amp;rdquo; &amp;ldquo;${BASH_VERSINFO[0]}&amp;rdquo;    print the first element of the array BASH_VERSINFO bulit in the shell bash&lt;/li&gt;
&lt;li&gt;printf &amp;ldquo;%s\n&amp;rdquo; &amp;ldquo;${BASH_VERSINFO[1]}&amp;rdquo;    print the second element of the array BASH_VERSINFO bulit in the shell bash&lt;/li&gt;
&lt;li&gt;printf &amp;ldquo;%s\n&amp;rdquo; &amp;ldquo;${BASH_VERSINFO[*]}&amp;rdquo;    print the all element of the array BASH_VERSINFO bulit in the shell bash in one line as string&lt;/li&gt;
&lt;li&gt;printf &amp;ldquo;%s\n&amp;rdquo; &amp;ldquo;${BASH_VERSINFO[@]}&amp;rdquo;    print the all element of the array BASH_VERSINFO bulit in the shell bash in different line&lt;/li&gt;
&lt;li&gt;printf &amp;ldquo;%s\n&amp;rdquo; &amp;ldquo;${BASH_VERSINFO[@]:1:2}&amp;rdquo;    print the secondth and thirdth line element of the array BASH_VERSINFO bulit in the shell bash&lt;/li&gt;
&lt;li&gt;printf &amp;ldquo;%s\n&amp;rdquo; &amp;ldquo;${#BASH_VERSINFO[*]}&amp;rdquo;    print the length of the array BASH_VERSINFO bulit in the shell bash&lt;/li&gt;
&lt;li&gt;construct an array 1
&lt;ul&gt;
&lt;li&gt;unset a&lt;/li&gt;
&lt;li&gt;a[${#a[@]}]=&amp;quot;1 $RANDOM&amp;rdquo; ## #{#a[@]} is 0&lt;/li&gt;
&lt;li&gt;a[${#a[@]}]=&amp;quot;2 $RANDOM&amp;rdquo; ## #{#a[@]} is 1&lt;/li&gt;
&lt;li&gt;a[${#a[@]}]=&amp;quot;3 $RANDOM&amp;rdquo; ## #{#a[@]} is 2&lt;/li&gt;
&lt;li&gt;a[${#a[@]}]=&amp;quot;4 $RANDOM&amp;rdquo; ## #{#a[@]} is 3  &amp;mdash;&amp;gt; finally we have a fourth element array a&lt;/li&gt;
&lt;li&gt;printf &amp;ldquo;%s\n&amp;rdquo; &amp;ldquo;${a[@]}&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;construct an array 2
&lt;ul&gt;
&lt;li&gt;province=(Beijing Fujian Liaoning)&lt;/li&gt;
&lt;li&gt;printf &amp;ldquo;%s\n&amp;rdquo; &amp;ldquo;${province[@]}&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;construct an array (Associative Arrays must be declared before)
&lt;ul&gt;
&lt;li&gt;declare -A array1  ## &lt;strong&gt;if not declare -A array1 only keep the last one assignment operation&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;for subsricpt in a b c d e&lt;/li&gt;
&lt;li&gt;do&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;array[$subscript]=&amp;quot;$subscript $RANDOM&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;done&lt;/li&gt;
&lt;li&gt;printf &amp;ldquo;:%s:\n&amp;rdquo; &amp;ldquo;${array[&amp;ldquo;c&amp;rdquo;]}&amp;rdquo; ## print one value&lt;/li&gt;
&lt;li&gt;printf &amp;ldquo;:%s:\n&amp;rdquo; &amp;ldquo;${array[@]}&amp;rdquo; ## print one value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$[[  ]] == [[  ]] &amp;ndash;&amp;gt; [[ =~ ]] (you can use variable match the regex expressions inside the  [[]])&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;some special remarks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;*(pattern [|pattern] &amp;hellip;)  the match occurence &amp;gt;=0&lt;/li&gt;
&lt;li&gt;+(pattern [|pattern] &amp;hellip;)  the match occurence &amp;gt;=1&lt;/li&gt;
&lt;li&gt;@(pattern [|pattern] &amp;hellip;)  the match occurence ==1&lt;/li&gt;
&lt;li&gt;?(pattern [|pattern] &amp;hellip;)  the match occurence ? I am a little confuse!&lt;/li&gt;
&lt;li&gt;&amp;amp;   let the command execute backward&lt;/li&gt;
&lt;li&gt;``  redirect an command output to the argument of another command&lt;/li&gt;
&lt;li&gt;; command separator&lt;/li&gt;
&lt;li&gt;| pipe symbol, put a command output redirect to another command&#39;s input&lt;/li&gt;
&lt;li&gt;$# the numbers of the parameters while execute the shell scripts&lt;/li&gt;
&lt;li&gt;$@ the parameters  while execute the shell scripts(know every parameters) .Note use &amp;ldquo;$@&amp;rdquo;&lt;/li&gt;
&lt;li&gt;$* the parameters as a string while execute the shell scripts&lt;/li&gt;
&lt;li&gt;$! the PID number
&lt;ul&gt;
&lt;li&gt;${!var} 表示的是间接调用变量var,比如x=yes,var=x,如果直接使用echo $x得到yes,如果直接echo $var 得到的是x，如果使用echo ${!var}则是yes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;${!}给你的感觉会好象是函数式变量，不断的变化中,类似的比如set &amp;ndash;具有更换positional parameters的作用&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;case中*[!0-9]*) 表示 非数字 ，在正则表达式中一般是使用[^0-9]&lt;/li&gt;
&lt;li&gt;&amp;quot;&amp;rdquo; 字符串中加上双引号的作用是&amp;quot;$a&amp;rdquo; ，[ &amp;ldquo;$a&amp;rdquo; == &amp;ldquo;abc str&amp;rdquo;] 避免太多参数的报错！&amp;ldquo;&amp;ldquo;起着连接的作用,变量的值包起来，防止中间有空格，一般字符串反而不需要.这边又扯到&lt;a href=&#34;http://blog.jobbole.com/46191&#34;&gt;另一个问题&lt;/a&gt;，比如[[ $foo == bar ]]不会展开foo的值,也就是把空格也当作字符串字面值的整体，而[ $foo == bar ] 则会展开foo的值,也就空格会分隔原来的foo字符串，这样可能会出现多参数错误。所以加上双引号有好处，暂时无坏(针对变量)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;javascript&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;tr
&lt;ul&gt;
&lt;li&gt;tr -d &amp;lsquo;abc&amp;rsquo;&lt;/li&gt;
&lt;li&gt;tr &amp;lsquo;[a-z]&amp;rsquo; &amp;lsquo;[A-Z]&amp;rsquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;seq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类似的可以参考&lt;a href=&#34;http://blog.useasp.net/archive/2014/06/02/summary-of-the-special-characters-in-shell-on-linux.aspx&#34;&gt;shell符号&lt;/a&gt;,并且注意shell当中一个
比较大的书写问题是：等号两边不能有空格，括号和中括号两边最好有空格(比如最多的if判断）。&lt;/p&gt;
&lt;h2 id=&#34;line&#34;&gt;line&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;head&lt;/li&gt;
&lt;li&gt;tail&lt;/li&gt;
&lt;li&gt;sed&lt;/li&gt;
&lt;li&gt;grep(egrep)
&lt;ul&gt;
&lt;li&gt;grep -nR &amp;ldquo;neededWord&amp;rdquo; *&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;awk(actually it can be categoried into word manipulation)&lt;/li&gt;
&lt;li&gt;sort
&lt;ul&gt;
&lt;li&gt;sort -r -t :  -k 2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;cut -d&amp;rdquo;:&amp;rdquo;  -f5&lt;/li&gt;
&lt;li&gt;read&lt;/li&gt;
&lt;li&gt;echo&lt;/li&gt;
&lt;li&gt;uniq&lt;/li&gt;
&lt;li&gt;join&lt;/li&gt;
&lt;li&gt;paste  (much simpler than join , just separte two parts with Tab)&lt;/li&gt;
&lt;li&gt;shift
&lt;ul&gt;
&lt;li&gt;shift 3    To remove the first three parameters(&lt;strong&gt;To means going to do,it is a target&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;shift &amp;ldquo;$#&amp;rdquo;  To remove all the parameters,$# contains the number of all the positional parameters&lt;/li&gt;
&lt;li&gt;shift $(( $# - 2 ))   Remove all but the last two positional parameters.Remember there are blank between (( and $  also between 2 and  )).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;set &amp;ndash;  Newparameters ## which is just replace the parameters with Newparameters
&lt;ul&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $# -ne &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $1 -gt $2 &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; set -- $2 $1 $3; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;## line a   if $1&amp;gt;$2    replace $2 with $1  ,$1 with $2, the bigger in the righter&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $2 -gt $3 &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; set -- $1 $3 $2; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;## line b:  $1 is the last time&amp;#39;s $1 ,but $3 is the last time&amp;#39;s $3(in line a)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $1 -gt $2 &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; set -- $2 $1 $3; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;## line c&lt;/span&gt;
_MAX3&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$3
_MID3&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$2
_MIN3&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$1
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;content&#34;&gt;content&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;cat&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;file&#34;&gt;file&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ls&lt;/li&gt;
&lt;li&gt;find -name &amp;quot;&amp;rdquo; src/&lt;/li&gt;
&lt;li&gt;locate&lt;/li&gt;
&lt;li&gt;touch&lt;/li&gt;
&lt;li&gt;wc -l&lt;/li&gt;
&lt;li&gt;rm -f&lt;/li&gt;
&lt;li&gt;cp&lt;/li&gt;
&lt;li&gt;mv&lt;/li&gt;
&lt;li&gt;source == .  ==&amp;gt; sourch *.sh  == . *.sh     source .bashrc == . bashrc&lt;/li&gt;
&lt;li&gt;&amp;gt;  == 1&amp;gt;&lt;/li&gt;
&lt;li&gt;&amp;gt;&amp;gt; == 1&amp;raquo;&lt;/li&gt;
&lt;li&gt;&amp;lt;  == &amp;lt;1&lt;/li&gt;
&lt;li&gt;split
&lt;ul&gt;
&lt;li&gt;split -b 300k &amp;hellip;&lt;/li&gt;
&lt;li&gt;split -l 300   (line=300 as an file)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;vim&lt;/li&gt;
&lt;li&gt;gnuplot&lt;/li&gt;
&lt;li&gt;graghviz&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fildfolder&#34;&gt;fildfolder&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;cd&lt;/li&gt;
&lt;li&gt;mkdir&lt;/li&gt;
&lt;li&gt;rmdir&lt;/li&gt;
&lt;li&gt;cp -r&lt;/li&gt;
&lt;li&gt;mv&lt;/li&gt;
&lt;li&gt;tar
&lt;ul&gt;
&lt;li&gt;tar -cvf  src.tar.gz src/&lt;/li&gt;
&lt;li&gt;tar -xvf  src.tar.gz&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;system&#34;&gt;system&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;alias (make the command become convinient)&lt;/li&gt;
&lt;li&gt;unalias&lt;/li&gt;
&lt;li&gt;ulimit -a (try to think if there are ten person enter the Linux at the same time, and open th 1G file at the same time, the main machine means 10G. So the machine wil become busy.)&lt;/li&gt;
&lt;li&gt;set&lt;/li&gt;
&lt;li&gt;unset&lt;/li&gt;
&lt;li&gt;env&lt;/li&gt;
&lt;li&gt;history
&lt;ul&gt;
&lt;li&gt;!!  the last command(you can use the up and down arrow)&lt;/li&gt;
&lt;li&gt;!66 the 66th command  !line-number&lt;/li&gt;
&lt;li&gt;!al run the command begin with &amp;lsquo;al&amp;rsquo; nearest.!command&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;type&lt;/li&gt;
&lt;li&gt;kill -9&lt;/li&gt;
&lt;li&gt;crontab -e&lt;/li&gt;
&lt;li&gt;which&lt;/li&gt;
&lt;li&gt;who&lt;/li&gt;
&lt;li&gt;dmesg&lt;/li&gt;
&lt;li&gt;du -sh .&lt;/li&gt;
&lt;li&gt;make  (for compiling the system)&lt;/li&gt;
&lt;li&gt;fsck -c&lt;/li&gt;
&lt;li&gt;System Transplant
&lt;ul&gt;
&lt;li&gt;wget -R [website]&lt;/li&gt;
&lt;li&gt;curl -l&lt;/li&gt;
&lt;li&gt;git clone&lt;/li&gt;
&lt;li&gt;hg clone&lt;/li&gt;
&lt;li&gt;svn clone&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;system enter
&lt;ul&gt;
&lt;li&gt;ssh&lt;/li&gt;
&lt;li&gt;telnet&lt;/li&gt;
&lt;li&gt;ftp&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ifconfig&lt;/li&gt;
&lt;li&gt;all files with map relationship can form an ecosystem.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;network-topology&#34;&gt;Network topology&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;node (one computer one system)&lt;/li&gt;
&lt;li&gt;server (only supply with services)&lt;/li&gt;
&lt;li&gt;NIC (network interface card)  RJ-45
&lt;ul&gt;
&lt;li&gt;network interface port   which abstracted by the NIC .&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;route -n&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;bit &amp;ndash;&amp;gt; word &amp;ndash;&amp;gt; line &amp;ndash;&amp;gt; content &amp;ndash;&amp;gt; file &amp;ndash;&amp;gt; system.  ++Actually, you can use the function to abstraction several command.
What&#39;s more ,you can use module or filefolder to do another bigger abstraction++.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;you can find that from bit manipulation to file manipulation,there are many commands used in the Linux system&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>emacs中有趣的词法编程</title>
      <link>https://jueqingsizhe66.github.io/blog/2015/06/03/emacszhong-you-qu-de-ci-fa-bian-cheng/</link>
      <pubDate>Wed, 03 Jun 2015 14:35:50 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2015/06/03/emacszhong-you-qu-de-ci-fa-bian-cheng/</guid>
      <description>&lt;p&gt;词法编程最开始是有1984，Donald Knuth提出的&lt;a href=&#34;http://comjnl.oxfordjournals.org/content/27/2/97.full.pdf&#34;&gt;词法编程&lt;/a&gt;.
另外可以参考&lt;a href=&#34;http://www.howardism.org/Technical/LP/introduction.html&#34;&gt;emacs org-mode 词法编程&lt;/a&gt;和 &lt;a href=&#34;http://www.howardism.org/Technical/Emacs/literate-devops.html&#34;&gt;emacs orgmode的高级词法编程&lt;/a&gt;
我的理解是词法编程，就是在文本和代码中交叉实现，不让代码只是代码，文本只是文本，其实这根函数式编成的思想是相似的，&lt;strong&gt;代码即数据，数据即代码&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#+begin_src sh&lt;/span&gt;
ls
hostname -I
&lt;span style=&#34;color:#75715e&#34;&gt;#+end_src&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#+results:&lt;/span&gt;
| activate.org                   |
| activate.png                   |
| activity.png                   |
| broken.png                     |
| communication.png              |
| data                           |
| digraph2.png                   |
| ditaa.org                      |
| ditta.png                      |
| emacs-chats                    |
| emacsconf2015                  |
| emacs-notes                    |
| gnuplot.org                    |
| gnuplot.png                    |
| &lt;span style=&#34;color:#75715e&#34;&gt;#GTD.org#                      |&lt;/span&gt;
| gv01.png                       |
| javaTalentTest.org             |
| javaweb5.org                   |
| javaWriteRules.org             |
| latex.org                      |
| Learn.html                     |
| lispfile.org                   |
| literate-programming.org       |
| meeting_states.png             |
| multi.png                      |
| named.png                      |
| newLearningTakecar.el          |
| newLearningTakecar.org         |
| newLearningTakecar.org_archive |
| normal_task_states.png         |
| object.org                     |
| object.png                     |
| orgmode-babel-ditaa3.png       |
| org-mode-doc                   |
| org-mode.org                   |
| orgTest.org                    |
| outcome.sh                     |
| phone_states.png               |
| plantuml_example_states.png    |
| plantuml.org                   |
| scales.png                     |
| schemeToTime.org               |
| sequence.png                   |
| some_filename.png              |
| somefile.png                   |
| state.org                      |
| style                          |
| style.tar.gz                   |
| table.png                      |
| task.org                       |
| teaching.org                   |
| test-act2.png                  |
| test-act2.txt                  |
| test-act3.png                  |
| test-act3.txt                  |
| test-act4.png                  |
| test-act4.txt                  |
| test-act.png                   |
| test-act.txt                   |
| testChines.org                 |
| testgraph.org                  |
| thinking.org                   |
| time.png                       |
| usecase.org                    |
| usecase.png                    |
| vimium                         |
| 172.17.36.2                    |

** You must add the section :properties: and 🔚 ,or
nothing show.
:PROPERTIES:
:var: name1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;
:END:
&lt;span style=&#34;color:#75715e&#34;&gt;#+begin_src sh :var hosts=&amp;#34;10.0.2.1&amp;#34;&lt;/span&gt;
echo $hosts
echo $name1
&lt;span style=&#34;color:#75715e&#34;&gt;#+end_src&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#+results:&lt;/span&gt;
| 10.0.2.1 |
|    hello |


&lt;span style=&#34;color:#75715e&#34;&gt;#+header: :var Dir=&amp;#34;/home/&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#+begin_src sh&lt;/span&gt;
cd $Dir
ls -lsh
&lt;span style=&#34;color:#75715e&#34;&gt;#+end_src&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#+results:&lt;/span&gt;
| 总用量 | 28K        |    |          |          |      |     |    |       |                      |
| 4.0K   | drwx------ | &lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt; | root     | root     | 4.0K | 5月 | &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; | 15:19 | happycamp-of-fortran |
| 4.0K   | drwx------ |  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; | root     | root     | 4.0K | 5月 | &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; | 15:36 | happycamp-of-gnuplot |
| 4.0K   | drwx------ | &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt; | root     | root     | 4.0K | 6月 |  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; | 13:32 | happycamp-of-lisp    |
| 4.0K   | drwxr-xr-x | &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt; | javazhao | javazhao | 4.0K | 6月 |  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; | 14:22 | javazhao             |
| 4.0K   | drwxr-xr-x |  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; | javazhao | javazhao | 4.0K | 4月 | &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; | 16:28 | lispbox-0.7          |
| 4.0K   | -rw-r--r-- |  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; | root     | root     | &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    | 5月 | &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; | 23:37 | MyOrgHome            |
| 4.0K   | drwxr-xr-x |  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; | root     | root     | 4.0K | 4月 | &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; | 22:18 | StudyCenter          |


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然emacs中也是可以结合gnuplot ,latex, plantuml,graphviz等。
具体可以参看
&lt;a href=&#34;http://www.3zso.com/archives/orgmode-babel.html&#34;&gt;http://www.3zso.com/archives/orgmode-babel.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>我的Bash-It</title>
      <link>https://jueqingsizhe66.github.io/blog/2015/06/03/wo-de-bash-it/</link>
      <pubDate>Wed, 03 Jun 2015 13:59:44 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2015/06/03/wo-de-bash-it/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/jueqingsizhe66/bash-it&#34;&gt;Bash-it&lt;/a&gt;是一个开源的bash框架，
我的第一感觉是他的themes主题不错，所以就用了，这是我采用的rjorgenson的主题
&lt;img src=&#34;https://jueqingsizhe66.github.io/images/jiemian.png&#34; alt=&#34;rjorgenson&#34;&gt;&lt;/p&gt;
&lt;p&gt;Bash-it是源自于&lt;a href=&#34;https://github.com/robbyrussell/oh-my-zsh&#34;&gt;oh-my-zsh&lt;/a&gt;,
&lt;a href=&#34;http://ohmyz.sh/&#34;&gt;zsh的一些相关展示&lt;/a&gt;
主要是调用了一些python和ruby的相关插件。&lt;/p&gt;
&lt;p&gt;##安装步骤&lt;/p&gt;
&lt;p&gt;很简单&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;git clone &amp;ndash;depth=1 &lt;a href=&#34;https://github.com/jueqingsizhe66/bash-it&#34;&gt;https://github.com/jueqingsizhe66/bash-it&lt;/a&gt; ~/.bash-it (&lt;strong&gt;如果不加入&amp;ndash;depth=1会少一些文件,没有Enable文件夹&lt;/strong&gt;)
(或者把install.sh里面的enable改成available即可(因为作者可能删掉了enable)
)&lt;/li&gt;
&lt;li&gt;cd ~/.bash-it&lt;/li&gt;
&lt;li&gt;./install&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然还需要安装一些&lt;a href=&#34;http://www.phodal.com/blog/use-bash-it-bash-framework/&#34;&gt;额外的插件&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;apt-get install docker()(有时候可能不需要)
&lt;ul&gt;
&lt;li&gt;sudo apt-get install docker.io&lt;/li&gt;
&lt;li&gt;sudo ln -sf /usr/bin/docker.io /usr/local/bin/docker&lt;/li&gt;
&lt;li&gt;sudo sed -i &amp;lsquo;$acomplete -F _docker docker&amp;rsquo; /etc/bash_completion.d/docker.io&lt;/li&gt;
&lt;li&gt;chmod 777 /var/run/docker.sock&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;pip install arg (首先得安装python-pip)&lt;/li&gt;
&lt;li&gt;安装chruby &lt;a href=&#34;https://github.com/postmodern/chruby&#34;&gt;https://github.com/postmodern/chruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;apt-get install libpq-dev&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在安装完之后的感觉就是界面变得更好看些，其他没什么改变。&lt;/p&gt;
&lt;h3 id=&#34;heading&#34;&gt;注意&lt;/h3&gt;
&lt;p&gt;Bash_it的配置脚本和openfoam的配置脚本冲突，暂时未找到原因。&lt;/p&gt;
&lt;h3 id=&#34;theme&#34;&gt;补充theme配置&lt;/h3&gt;
&lt;p&gt;当你执行玩Bash-it的install脚本后，在~目录下会有~/.bashrc文件，修改其中的bash theme主题变量即可。
我现在使用的是doubletime_multiline_pyonly感觉还不错&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bash智能分类升级版</title>
      <link>https://jueqingsizhe66.github.io/blog/2015/06/02/bashzhi-neng-fen-lei-sheng-ji-ban/</link>
      <pubDate>Tue, 02 Jun 2015 14:35:57 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2015/06/02/bashzhi-neng-fen-lei-sheng-ji-ban/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;加入了 seq 1 8  智能产生序列的方法
使得30度攻角的实验值也可以处理。&lt;/li&gt;
&lt;li&gt;判断文件夹内是否存在文件
[ -e &amp;ldquo;实验*.txt&amp;rdquo; ] 无法执行正则表达式
因为有可能没有对应攻角的&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;deleteDensity&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
echo  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;删除密度和来流&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified文件夹已存在&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; 
mkdir modified
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls *.txt&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
        &lt;span style=&#34;color:#75715e&#34;&gt;#echo $i&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# 之所以加入 iconv是因为 字符编码问题  怕找不到 密度 和来流动压行&lt;/span&gt;
        iconv -f gb18030 -t utf-8 $i|awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print}&amp;#39;&lt;/span&gt;|awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{if ($0 ~ /攻角/) {print $3;}else if($0 ~ /升力/){print $1,$4,$5}else if($0 ~ /^$/){print &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;}else {print $3,$5;}}&amp;#39;&lt;/span&gt;   |sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/密度/d&amp;#39;&lt;/span&gt;|sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/来流动压/d&amp;#39;&lt;/span&gt;|sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/^$/d&amp;#39;&lt;/span&gt; &amp;gt;modified/$i 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 创建文件夹 从-10攻角到25度攻角&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  fenLei&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  对攻角实行分类，按照不同的攻角创建不同的文件夹&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
fenLei&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
cd modified  &lt;span style=&#34;color:#75715e&#34;&gt;# 注意下面的所有函数 都运行在modified文件夹下&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#for j in -10.00 -9.00 -8.00 -7.00 -6.00 -5.00 -4.00 -3.00 -2.00 -1.00 0.00 1.00 2.00 3.00 4.00 5.00 6.00 7.00 8.00 9.00 10.00 11.00 12.00 13.00 14.00 15.00 16.00 17.00 18.00 19.00 20.00 21.00 22.00 23.00 24.00 25.00 26.00 27.00 28.00 29.00 30.00&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;seq -10.00 30.00&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ! &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;$j &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;    
            mkdir &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;$j
        &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 导入对应攻角文件到文件夹内&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  getFileIntoDir&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  使用Awk按照不同的攻角值 利用 print的功能调用shell，把对应文件拷贝到对应攻角文件夹下&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#                注意-v在awk表示定义变量的间隔符&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#                 已废弃&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;

getFileIntoDir&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#cd modified&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#for j in -10.00 -9.00 -8.00 -7.00 -6.00 -5.00 -4.00 -3.00 -2.00 -1.00 0.00 1.00 2.00 3.00 4.00 5.00 6.00 7.00 8.00 9.00 10.00 11.00 12.00 13.00 14.00 15.00 16.00 17.00 18.00 19.00 20.00 21.00 22.00 23.00 24.00 25.00 26.00 27.00 28.00 29.00 30.00&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;seq -10.00 30.00&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls *.txt&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
            awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print}&amp;#39;&lt;/span&gt; $i |awk -v B&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -v A&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;攻角：&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$j&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -v C&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$j&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$0~A{print &amp;#34;cp &amp;#34;,B,&amp;#34; &amp;#34;C&amp;#34;/&amp;#34;B|&amp;#34;/bin/bash&amp;#34;}&amp;#39;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  getFileIntoDirNew&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  新版本的getFileIntoDir 方式&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#grep &amp;#34;攻角：25.00&amp;#34; *.txt|awk -F[:] &amp;#39;{print $1}&amp;#39;&lt;/span&gt;

getFileIntoDirNew&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#for j in -10.00 -9.00 -8.00 -7.00 -6.00 -5.00 -4.00 -3.00 -2.00 -1.00 0.00 1.00 2.00 3.00 4.00 5.00 6.00 7.00 8.00 9.00 10.00 11.00 12.00 13.00 14.00 15.00 16.00 17.00 18.00 19.00 20.00 21.00 22.00 23.00 24.00 25.00 26.00 27.00 28.00 29.00 30.00&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;seq -10.00 30.00&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
        grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;攻角：&lt;/span&gt;$j&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; *.txt|awk -F&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;:&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;|xargs -i mv &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$j&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 清除空行&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  blankEmptyLine&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  利用sed -i命令直接处理文件中多余的空行&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
blankEmptyLine&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 在每个文件夹运行这些命令 清除空行&lt;/span&gt; 
&lt;span style=&#34;color:#75715e&#34;&gt;#cd modified&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls -d */&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
        &lt;span style=&#34;color:#75715e&#34;&gt;#if [ -e $i/&amp;#34;实验*.txt&amp;#34; ] #由于不存在任何*.txt相关的东西 所以报错！ 但是不影响程序的进行 所以忽略&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;#numBlank=`ls $i/*.txt|wc -l`  # 如果加上.txt反而不断报错&lt;/span&gt;
        numBlank&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls $i/|wc -l&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 这样就可以忽略掉 a26.00 --a30.00为空的情况&lt;/span&gt;
        echo $i&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--Blank--&amp;#34;&lt;/span&gt;$numBlank
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $numBlank -gt &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; 
            sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/^\s*$/d&amp;#39;&lt;/span&gt; $i/*.txt
        &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  cal&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  把每个攻角下的文件，利用awk执行攻角平均  升力系数平均  和压力系数平均&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
cal&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 在每个文件夹下都运行此计算平均值 程序&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#cd modified&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls -d */&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
        &lt;span style=&#34;color:#75715e&#34;&gt;#if [ -e $i/&amp;#34;实验*.txt&amp;#34; ]&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;#numCal=`ls $i/*.txt|wc -l`&lt;/span&gt;
        numCal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls $i/|wc -l&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
        echo $i&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--Cal--&amp;#34;&lt;/span&gt;$numCal
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $numCal -gt &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; 
            &lt;span style=&#34;color:#75715e&#34;&gt;#echo &amp;#34;$i ok&amp;#34;&lt;/span&gt;
            awk -F&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[ ：]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BEGIN{num=0;}{if($0 ~/攻角/){f[FNR]=$1;g[FNR]=$4;num+=1;}else if($0 ~/升力系数/){f[fNR]=$1;g[FNR]+=$4;a[FNR]=$5;b[FNR]+=$9;}else if($0 ~/压力系数/){f[FNR]=$1;g[FNR]=$2}else{f[FNR]+=$1;g[FNR]+=$2;if(nbr&amp;lt;FNR) {nbr=FNR;}}}END{for(i=0;i&amp;lt;=nbr;i++){print f[i]/num,g[i]/num,a[i]/num,b[i]/num;} print num;};&amp;#39;&lt;/span&gt; $i/*.txt&amp;gt;$i/modified.txt

        &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;


&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  plot&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  函数用于画图 调用gnuplot&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#                 使用下面函数之前得安装gnuplot&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
plot&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

 &lt;span style=&#34;color:#75715e&#34;&gt;#for i in `ls`;do num=`ls $i|wc -l`;let num=$[$num-1];sed -n &amp;#39;2p&amp;#39; $i/&amp;#34;modified.txt&amp;#34;|awk -v A=$i -v B=$num-2 &amp;#39;{print A,$2*B}&amp;#39; &amp;gt;&amp;gt; a.txt;sed -n &amp;#39;3p&amp;#39; $i/&amp;#34;modified.txt&amp;#34;|awk &amp;#39;{print $2}&amp;#39; &amp;gt;&amp;gt; a.txt;done;&lt;/span&gt; 

 &lt;span style=&#34;color:#75715e&#34;&gt;#   sed &amp;#39;N;s/\n/ :/&amp;#39; a.txt&lt;/span&gt;


&lt;span style=&#34;color:#75715e&#34;&gt;# for i in `ls`;do num=`ls $i|wc -l`;let num=$[$num-1];sed -n &amp;#39;2p&amp;#39; $i/&amp;#34;modified.txt&amp;#34;|awk -v A=$i -v B=$num-2 &amp;#39;{print $2*B}&amp;#39; &amp;gt;&amp;gt; a.txt;sed -n &amp;#39;3p&amp;#39; $i/&amp;#34;modified.txt&amp;#34;|awk &amp;#39;{print $2}&amp;#39; &amp;gt;&amp;gt; a.txt;done;&lt;/span&gt; 
 &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls -d */&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;## 用法思想和cp的处理一样&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
        &lt;span style=&#34;color:#75715e&#34;&gt;#if [ -e $i/&amp;#34;实验数据*.txt&amp;#34; ] #  不支持正则写法&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;#if [ -e $i/&amp;#34;实验数据*.txt&amp;#34; ]&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;#numPlot=`ls $i/&amp;#34;*.txt&amp;#34;|wc -l`  # 错误写法 不要用双引号&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;#numPlot=`ls $i/*.txt|wc -l`&lt;/span&gt; 
        numPlot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls $i/|wc -l&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; 
        &lt;span style=&#34;color:#75715e&#34;&gt;#echo $i&amp;#34;--cl-cd--&amp;#34;$numPlot&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $numPlot -gt &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
            num&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls $i|wc -l&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
            num&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;$num&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;#print $i,$num&lt;/span&gt;
            sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2p&amp;#39;&lt;/span&gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified.txt&amp;#34;&lt;/span&gt;|awk -v A&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$i -v B&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$num &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $2*B}&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; shengli.txt
            sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3p&amp;#39;&lt;/span&gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified.txt&amp;#34;&lt;/span&gt;|awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; shengli.txt
            sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2p&amp;#39;&lt;/span&gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified.txt&amp;#34;&lt;/span&gt;|awk -v A&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$i -v B&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$num &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $2*B}&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; zuli.txt
            sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3p&amp;#39;&lt;/span&gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified.txt&amp;#34;&lt;/span&gt;|awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $4}&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; zuli.txt
        &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 这是一个相当棒的技巧 把两行合并为一行&lt;/span&gt;
sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;N;s/\n/ /&amp;#39;&lt;/span&gt; shengli.txt
sort -n shengli.txt &amp;gt; shenglimodified.txt
sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;N;s/\n/ /&amp;#39;&lt;/span&gt; zuli.txt
sort -n zuli.txt &amp;gt; zulimodified.txt

&lt;span style=&#34;color:#75715e&#34;&gt;# 两张图 第一张是cl  第二章图是cd&lt;/span&gt;
gnuplot&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set ter &amp;#39;png&amp;#39; 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set out &amp;#39;shengli.png&amp;#39; 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;plot &amp;#34;shenglimodified.txt&amp;#34; t &amp;#39;cl&amp;#39; w lp
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
gnuplot&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set ter &amp;#39;png&amp;#39; 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set out &amp;#39;zuli.png&amp;#39; 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;plot &amp;#34;zulimodified.txt&amp;#34; t &amp;#39;cd&amp;#39; w lp
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
rm -rf zuli.txt
rm -rf shengli.txt
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;


&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  plotCp&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  用于打印cp曲线&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
plotCp&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# 之所以添加上 -d */ 的作用是 不要处理上一步产生的shengli.png 等文件，而只处理文件夹即可!&lt;/span&gt;
 &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls -d */&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 注意一定是 */ 单独使用 ls -d没有效果&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
        &lt;span style=&#34;color:#75715e&#34;&gt;#if [ -d $i ] &amp;amp;&amp;amp; [ -e $i/&amp;#34;实验数据*txt&amp;#34; ]  ;; 不支持正则写法&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# 新改进的地方 想则会采用 引进ls工具 并调用wc&lt;/span&gt;
        #
&lt;span style=&#34;color:#75715e&#34;&gt;#IF [···] -a [···] 这样不行。 得改成 if [ ... -a ...] 或者 If [...] &amp;amp;&amp;amp; [..]&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#这样吧，IF [···] &amp;amp;&amp;amp; [···]&lt;/span&gt; 
        numPlotCp&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls $i/|wc -l&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; 
        &lt;span style=&#34;color:#75715e&#34;&gt;#numPlotCp=`ls $i/*.txt|wc -l`&lt;/span&gt; 
        &lt;span style=&#34;color:#75715e&#34;&gt;#echo $i&amp;#34;--Cp--&amp;#34;$numPlotCp&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $numPlotCp -gt &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; 
            sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;6,47p&amp;#39;&lt;/span&gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified.txt&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cpUp.txt&amp;#34;&lt;/span&gt;;sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;49,93p&amp;#39;&lt;/span&gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified.txt&amp;#34;&lt;/span&gt; |sort -k &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; -nr &amp;gt;&amp;gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cpUp.txt&amp;#34;&lt;/span&gt;;cpGrid
        &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  cpGrid&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  注意  gnuplot必须放在句首&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
cpGrid&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
gnuplot&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set ter &amp;#39;png&amp;#39; 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set out &amp;#39;$i/cpUp.png&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set xtics rotate by -45
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set ytics rotate by -45
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;plot &amp;#34;$i/cpUp.txt&amp;#34; t &amp;#39;cp&amp;#39; w lp
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 执行函数&lt;/span&gt;
cd $1
pwd
deleteDensity
fenLei
getFileIntoDirNew
blankEmptyLine
cal
plot
plotCp



&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Bash智能分类文件并求值</title>
      <link>https://jueqingsizhe66.github.io/blog/2015/05/27/bashzhi-neng-fen-lei-wen-jian-bing-qiu-zhi/</link>
      <pubDate>Wed, 27 May 2015 10:36:24 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2015/05/27/bashzhi-neng-fen-lei-wen-jian-bing-qiu-zhi/</guid>
      <description>&lt;p&gt;Bash是linux底下的一种shell实现，可以方便linux用户进行系统管理。他的核心就是
调用最有效的命令组合形成更加强大完美的管理和应用程序,这也是unix的哲学,通过调用between programs的&lt;strong&gt;关系&lt;/strong&gt;来&lt;strong&gt;get its power&lt;/strong&gt;而不是通过自己的程序。
shell编成的目的减少unix相关系统的管理员的人物&lt;/p&gt;
&lt;p&gt;下面介绍主要是bash语法，以及有bash语法调用awk，sed，grep等linux底下强大的工具实现一个文件智能分类，并对相应文件夹取平均。&lt;/p&gt;
&lt;p&gt;一些基本语法,虽然扎成一团，却静心选择。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt; 在单行模式下可以
echo &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;userA,userB,userC&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;home,bin,data&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
echo &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userA&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userB&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;home&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bin&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;userA,userB,userC&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;home,bin,data&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#error&lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{userA,userB,userC}-{home,bin,data}&amp;#39;&lt;/span&gt;
 分号的作用 挡任连续指令的功能！（其实也可以用换行代替）


 一定要注意的bash的if语法，有空格：
 &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$?&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; !&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 等价于  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; test &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$?&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; !&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    一定要注意&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;之间有空格

 等价关系有条件：
 &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;command&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; 等价于 &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;command&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; 约等于 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;  但是单引号不转义特殊字符  双引号不转义特殊字符

 另外需要注意这种情况，&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; 和$var的区别：
  基本上一样，$1...$9这个没区别，但是$10呢，&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;var&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;的这种就是&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;10&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
而$var却是$10是$1后边带个0


 几个dollar开头的内置参数
 $$ shell脚本号
 $* 以一个单字符显示所有脚本传递的参数 $1 
 $#  传给shell程序的位置参数个数
 $0  脚本名称
 $n  脚本的第几个参数
 &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;...&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;$x&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt; 对括号内的表达式求值

 逻辑操作符相关:
 and   statement &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; statement &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; .. 
 or statement &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; statement &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; .. 

 最常用的分支判断：
 &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f file_one &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f file_two &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
 &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
 echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;in if&amp;#34;&lt;/span&gt;
 &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
 echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;in else
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; fi
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; bash也在改进,比如：
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; [[]] 是提高版的test  比如\&amp;gt;必须在[]和test中使用  在[[]]直接使用！
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   #  所以以后改用[[]]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 下面几个&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;开头的都是针对字符串的操作，可以剪切替换
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;name&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;default&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 使用一个默认值（一般是空值）来代替那些空的或者没有赋值的变量name；
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;name:=default&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;使用指定值来代替空的或者没有赋值的变量name；
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;name:?message&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;如果变量为空或者未赋值，那么就会显示出错误信息并中止脚本的执行同时返回退出码1。
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;name&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 给出name的长度
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;name%word&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 从name的尾部开始删除与word匹配的最小部分，然后返回剩余部分
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;name%%word&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 从name的尾部开始删除与word匹配的最长部分，然后返回剩余部分
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;name#word&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 从name的头部开始删除与word匹配的最小部分，然后返回剩余部分
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;name##word&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 从name的头部开始删除与word匹配的最长部分，然后返回剩余部分
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;（注，name为变量名，word为要匹配的字符串）
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;tao&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; in
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;a)      echo “a” ;;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;b)      echo “b” ;;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;esac
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;## 一些当行运行的指令，只在prompt运行窗口才有效
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1 let
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;sus&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;2**3&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;echo &amp;#34;&lt;/span&gt;sus &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $sus&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;sus=[[2**3]]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;echo &amp;#34;&lt;/span&gt;2**3&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;echo &amp;#34;&lt;/span&gt;sus &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $sus&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;$sus&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;if [ 2**3 == 8] 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;then  echo &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;hello&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;else
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    echo &amp;#34;&lt;/span&gt;fuck&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;fi
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 注意在shell #的命令行运行可以写上分号 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;##  虽然有人说函数创建可以使用  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; [function] function_name[()]{
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; commands
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; [return ...]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 但是我发现加入function反而不行，于是使用 function_name(){}的风格
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;heading&#34;&gt;无用的分号命令&lt;/h1&gt;
&lt;p&gt;： 该命令什么都不做，但执行后会返回一个正确的退出代码，即exit 0。比如在if语句中，then后面不想做任何操作，但是又不能空着，这时就可以使用“:”来解决，如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -ne &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    :
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt; is not equal 1&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;heading-1&#34;&gt;特殊的点号&lt;/h1&gt;
&lt;p&gt;点号+ 文件名的作用 和 source+文件名的作用一样，都是在当前的shell执行命令
而 ./filename.sh 则是在子shell执行命令。
所以如果想要设置环境变量得用source+文件名或者. 文件名的方式。&lt;/p&gt;
&lt;h1 id=&#34;heading-2&#34;&gt;关于大括号和小括号的区别&lt;/h1&gt;
&lt;p&gt;大括号和小括号的作用都一样，都是把几个命令组合在一起，然而他们也有所区别。
()是在产生的子shell下执行，而{}是在当前的shell下执行
与前面讲到是使用&amp;rdquo;.  filename.sh&amp;quot;和&amp;rdquo;./filename.sh&amp;quot;的区别一样&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# A=123&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# (A=abc;echo $A);echo $A&lt;/span&gt;
abc
&lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# { A=abc;echo $A; };echo $A&lt;/span&gt;
abc
abc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由此可见，() 子shell设置完，不会影响到父shell，因为父不会继承子，影响的只是
自身的shell。
&lt;em&gt;注意：()里面两边可以不使用空格，{}里面两边必须使用空格，且最后一个命令也需要以“；”结尾，表示命令结束。&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;heading-3&#34;&gt;中括号用于判断&lt;/h1&gt;
&lt;p&gt;[] 与test命令一样，用于比较值以及检查文件类型。如下&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[ &amp;ldquo;$A&amp;rdquo; = 123 ]：是字符串的测试，以测试 $A 是否为 1、2、3 这三个连续的&amp;quot;文字&amp;rdquo;。&lt;/li&gt;
&lt;li&gt;[ &amp;ldquo;$A&amp;rdquo; -eq 123 ]：是整数的测试，以测试 $A 是否等于&amp;quot;一百二十三&amp;rdquo;。&lt;/li&gt;
&lt;li&gt;[ -e &amp;ldquo;$A&amp;rdquo; ]：是关于文件的测试，以测试 123 这份&amp;quot;文件&amp;quot;是否存在&lt;/li&gt;
&lt;li&gt;[ -f &amp;ldquo;$A&amp;rdquo; ] : 判断是否存在文件&lt;/li&gt;
&lt;li&gt;[ -d &amp;ldquo;$A&amp;rdquo; ] : 判断是否存在文件夹&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;-&#34;&gt;关于 单括号和双中括号的区别&lt;/h1&gt;
&lt;p&gt;[[]]可以说是[]的“增强版”，它能够将多个test命令支持的测试组合起来.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# [[ (-d &amp;#34;$HOME&amp;#34;) &amp;amp;&amp;amp; (-w &amp;#34;$HOME&amp;#34;) ]] &amp;amp;&amp;amp; echo echo &amp;#34;home is a writable directory&amp;#34;&lt;/span&gt;  
home is a writable directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;heading-4&#34;&gt;两者的主要区别如下：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;数字测试： -eq -ne -lt -le -gt -ge，[&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;]同 &lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;一致
&lt;ul&gt;
&lt;li&gt;test int1 -eq int2  测试整数是否相等&lt;/li&gt;
&lt;li&gt;test int1 -ge int2  测试int1是否&amp;gt;=int2&lt;/li&gt;
&lt;li&gt;test int1 -gt int2  测试int1是否&amp;gt;int2&lt;/li&gt;
&lt;li&gt;test int1 -le  int2 测试int1是否&amp;lt;=int2&lt;/li&gt;
&lt;li&gt;test int1 -lt int2  测试int1是否&amp;lt;int2&lt;/li&gt;
&lt;li&gt;test int1 -ne int2  测试整数是否不相等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;文件测试： -r、-l、-w、-x、-f、-d、-s、-nt、-ot，[&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;]同 &lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;一致
&lt;ul&gt;
&lt;li&gt;test -d file 指定文件是否目录&lt;/li&gt;
&lt;li&gt;test -f file 指定文件是否常规文件&lt;/li&gt;
&lt;li&gt;test -x file 指定文件是否可执行&lt;/li&gt;
&lt;li&gt;test -r file 指定文件是否可读&lt;/li&gt;
&lt;li&gt;test -w file 指定文件是否可写&lt;/li&gt;
&lt;li&gt;test -a file 指定文件是否存在&lt;/li&gt;
&lt;li&gt;test -s file 文件的大小是否非0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;字符串测试： &amp;gt; &amp;lt; =(同==) != -n -z，不可使用“&amp;lt;=”和“&amp;gt;=”，[&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;]同 &lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;一致，但在[]中，&amp;gt;和&amp;lt;必须使用\进行转义，即&amp;gt;和&amp;lt;
&lt;ul&gt;
&lt;li&gt;test str1=str2  测试字符串是否相等&lt;/li&gt;
&lt;li&gt;test str1!=str2  测试字符串是否不相等&lt;/li&gt;
&lt;li&gt;test str1 测试字符串是否不为空&lt;/li&gt;
&lt;li&gt;test -n str1 测试字符串是否不为空&lt;/li&gt;
&lt;li&gt;test -z str1 测试字符串是否为空&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;逻辑测试： []为 -a -o ! [&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;] 为&amp;amp;&amp;amp; || !&lt;/li&gt;
&lt;li&gt;数学运算： [] 不可以使用 [&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;]可以使用+ - * / %&lt;/li&gt;
&lt;li&gt;组合： 均可用各自逻辑符号连接的数字（运算）测试、文件测试、字符测试&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# [ a \&amp;gt; 1 ] &amp;amp;&amp;amp; echo ture || echo false&lt;/span&gt;
ture
&lt;span style=&#34;color:#75715e&#34;&gt;# [[ a &amp;gt; 1 ]] &amp;amp;&amp;amp; echo ture || echo false&lt;/span&gt;
ture
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;heading-5&#34;&gt;双中括号和双小括号&lt;/h1&gt;
&lt;p&gt;(())专门来做数值运算，如果表达式求值为 0，则设置退出状态为 1；如果求值为非 0 值，则设置为 0。不需要对 (( 和 )) 之间的操作符转义。算术只对整数进行。除 0 会产生错误，但不会产生溢出。可以执行 C 语言中常见的算术、逻辑和位操作。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1+99&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;echo $i
&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;

i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;99;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;i++&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;echo $i
&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;

echo &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;注意：使用 (( )) 时，不需要空格分隔各值和运算符，使用[]和[[ ]] 时需要用空格分隔各值和运算符&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;find&#34;&gt;find跳过指定目录&lt;/h1&gt;
&lt;p&gt;如果在查找文件时希望忽略某个目录，因为你知道那个目录中没有你所要查找的文件，那么可以使用-prune选项来指出需要忽略的目录。
在使用 -prune选项时要当心，因为如果你同时使用了-depth选项，那么-prune选项就会被find命令忽略。&lt;/p&gt;
&lt;h1 id=&#34;unix-tutorial-for-beginnerwwweesurreyacukteachingunix&#34;&gt;&lt;a href=&#34;www.ee.surrey.ac.uk/Teaching/Unix&#34;&gt;Unix Tutorial for Beginner&lt;/a&gt;&lt;/h1&gt;
&lt;h1 id=&#34;bashhttpvbirddicksuedutwlinux-basic0320bashphp-&#34;&gt;&lt;a href=&#34;http://vbird.dic.ksu.edu.tw/linux_basic/0320bash.php&#34;&gt;常用的bash命令学习&lt;/a&gt;&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;wc -l&lt;/li&gt;
&lt;li&gt;sort -rn -t 2 -k :&lt;/li&gt;
&lt;li&gt;grep -n &amp;ldquo;bash&amp;rdquo; src&lt;/li&gt;
&lt;li&gt;join a.txt b.txt 两个文件有一列是相同的&lt;/li&gt;
&lt;li&gt;find /usr -name &amp;ldquo;hello&amp;rdquo; -type d -exec ls -l {} ;  使用-ok更为安全。&lt;/li&gt;
&lt;li&gt;find . -type f -atime -7 -print   7天前被访问的&lt;/li&gt;
&lt;li&gt;find . -type f -size -100M   +100M 大于100M  -100M小于10M
&lt;ul&gt;
&lt;li&gt;b&amp;mdash;&amp;ndash;块（512字节）&lt;/li&gt;
&lt;li&gt;c&amp;mdash;&amp;ndash;字节&lt;/li&gt;
&lt;li&gt;w&amp;mdash;&amp;ndash;字（2字节）&lt;/li&gt;
&lt;li&gt;k&amp;mdash;&amp;mdash;千字节（1024个字节）&lt;/li&gt;
&lt;li&gt;M&amp;mdash;&amp;ndash;兆字节&lt;/li&gt;
&lt;li&gt;G&amp;mdash;&amp;mdash;吉字节（1024M）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;tr &amp;lsquo;A-Z&amp;rsquo; &amp;lsquo;a-z&amp;rsquo;&lt;/li&gt;
&lt;li&gt;echo &amp;lsquo;this is my passwd&amp;rsquo; |tr &amp;lsquo;abcdefghijklmnopqrstuvwxyz&#39;&amp;lsquo;zyxwvutsrqponmlkjihgfedcba&amp;rsquo;   tr也可以用于加密
解密：
echo &amp;lsquo;gsrh rh nb kzhhdw&amp;rsquo; |tr &amp;lsquo;zyxwvutsrqponmlkjihgfedcba&#39;&amp;lsquo;abcdefghijklmnopqrstuvwxyz&amp;rsquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;tr -d SET1 #用tr删除字符&lt;br&gt;
echo &amp;lsquo;Hello1234 World11111 44&amp;rsquo; |tr -d &amp;lsquo;0-9&amp;rsquo;&lt;br&gt;
HelloWorld&lt;br&gt;
10. grep -oP &amp;lsquo;(?&amp;lt;=+)fx&amp;rsquo; *&lt;br&gt;
grep -oP &amp;lsquo;(?&amp;lt;=+)fx(?=()&amp;rsquo; *
grep -onP &amp;lsquo;(?&amp;lt;=+)fx(?=()&amp;rsquo; *
11. cut -d &amp;ldquo;:&amp;rdquo; -f 1,3 /etc/passwd   类似于awk的字域
cut -d &amp;ldquo;:&amp;rdquo; -f 1,3,7 /etc/passwd&lt;/p&gt;
&lt;h1 id=&#34;heading-6&#34;&gt;一个综合性的案例&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  deleteDensity&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  去除密度和来流经验等行  采用  awk和sed组合删除！ 并把有用信息导入modified文件夹下&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#                 iconv主要是考虑到windows下的中文字符无法被识别的问题&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#                  这个步骤是复制，而第三个fileintoDirNew是通过mv来操作的&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
deleteDensity&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
echo  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;删除密度和来流&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified文件夹已存在&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; 
mkdir modified
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls *.txt&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
        iconv -f gb18030 -t utf-8 $i|awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print}&amp;#39;&lt;/span&gt;|awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{if ($0 ~ /攻角/) {print $3;}else if($0 ~ /升力/){print $1,$4,$5}else if($0 ~ /^$/){print &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;}else {print $3,$5;}}&amp;#39;&lt;/span&gt;   |sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/密度/d&amp;#39;&lt;/span&gt;|sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/来流动压/d&amp;#39;&lt;/span&gt;|sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/^$/d&amp;#39;&lt;/span&gt; &amp;gt;modified/$i 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 创建文件夹 从-10攻角到25度攻角&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  fenLei&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  对攻角实行分类，按照不同的攻角创建不同的文件夹&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
fenLei&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
cd modified  &lt;span style=&#34;color:#75715e&#34;&gt;# 注意下面的所有函数 都运行在modified文件夹下&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j in -10.00 -9.00 -8.00 -7.00 -6.00 -5.00 -4.00 -3.00 -2.00 -1.00 0.00 1.00 2.00 3.00 4.00 5.00 6.00 7.00 8.00 9.00 10.00 11.00 12.00 13.00 14.00 15.00 16.00 17.00 18.00 19.00 20.00 21.00 22.00 23.00 24.00 25.00
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ! &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;$j &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;    mkdir &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;$j
        &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 导入对应攻角文件到文件夹内&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  getFileIntoDir&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  使用Awk按照不同的攻角值 利用 print的功能调用shell，把对应文件拷贝到对应攻角文件夹下&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#                注意-v在awk表示定义变量的间隔符&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;

getFileIntoDir&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#cd modified&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j in -10.00 -9.00 -8.00 -7.00 -6.00 -5.00 -4.00 -3.00 -2.00 -1.00 0.00 1.00 2.00 3.00 4.00 5.00 6.00 7.00 8.00 9.00 10.00 11.00 12.00 13.00 14.00 15.00 16.00 17.00 18.00 19.00 20.00 21.00 22.00 23.00 24.00 25.00
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls *.txt&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
            awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print}&amp;#39;&lt;/span&gt; $i |awk -v B&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -v A&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;攻角：&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$j&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -v C&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$j&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$0~A{print &amp;#34;cp &amp;#34;,B,&amp;#34; &amp;#34;C&amp;#34;/&amp;#34;B|&amp;#34;/bin/bash&amp;#34;}&amp;#39;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  getFileIntoDirNew&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  新版本的getFileIntoDir 方式&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#grep &amp;#34;攻角：25.00&amp;#34; *.txt|awk -F[:] &amp;#39;{print $1}&amp;#39;&lt;/span&gt;

getFileIntoDirNew&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j in -10.00 -9.00 -8.00 -7.00 -6.00 -5.00 -4.00 -3.00 -2.00 -1.00 0.00 1.00 2.00 3.00 4.00 5.00 6.00 7.00 8.00 9.00 10.00 11.00 12.00 13.00 14.00 15.00 16.00 17.00 18.00 19.00 20.00 21.00 22.00 23.00 24.00 25.00
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
        grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;攻角：&lt;/span&gt;$j&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; *.txt|awk -F&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;:&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;|xargs -i mv &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$j&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 清除空行&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  blankEmptyLine&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  利用sed -i命令直接处理文件中多余的空行&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
blankEmptyLine&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 在每个文件夹运行这些命令 清除空行&lt;/span&gt; 
&lt;span style=&#34;color:#75715e&#34;&gt;#cd modified&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls -d */&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
        sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/^\s*$/d&amp;#39;&lt;/span&gt; $i/*.txt
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  cal&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  把每个攻角下的文件，利用awk执行攻角平均  升力系数平均  和压力系数平均&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
cal&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 在每个文件夹下都运行此计算平均值 程序&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#cd modified&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls -d */&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
        awk -F&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[ ：]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BEGIN{num=0;}{if($0 ~/攻角/){f[FNR]=$1;g[FNR]=$4;num+=1;}else if($0 ~/升力系数/){f[fNR]=$1;g[FNR]+=$4;a[FNR]=$5;b[FNR]+=$9;}else if($0 ~/压力系数/){f[FNR]=$1;g[FNR]=$2}else{f[FNR]+=$1;g[FNR]+=$2;if(nbr&amp;lt;FNR) {nbr=FNR;}}}END{for(i=0;i&amp;lt;=nbr;i++){print f[i]/num,g[i]/num,a[i]/num,b[i]/num;} print num;};&amp;#39;&lt;/span&gt; $i/*.txt&amp;gt;$i/modified.txt
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;


&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  plot&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  函数用于画图 调用gnuplot&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#                 使用下面函数之前得安装gnuplot&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
plot&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

 &lt;span style=&#34;color:#75715e&#34;&gt;#for i in `ls`;do num=`ls $i|wc -l`;let num=$[$num-1];sed -n &amp;#39;2p&amp;#39; $i/&amp;#34;modified.txt&amp;#34;|awk -v A=$i -v B=$num-2 &amp;#39;{print A,$2*B}&amp;#39; &amp;gt;&amp;gt; a.txt;sed -n &amp;#39;3p&amp;#39; $i/&amp;#34;modified.txt&amp;#34;|awk &amp;#39;{print $2}&amp;#39; &amp;gt;&amp;gt; a.txt;done;&lt;/span&gt; 

 &lt;span style=&#34;color:#75715e&#34;&gt;#   sed &amp;#39;N;s/\n/ :/&amp;#39; a.txt&lt;/span&gt;


&lt;span style=&#34;color:#75715e&#34;&gt;# for i in `ls`;do num=`ls $i|wc -l`;let num=$[$num-1];sed -n &amp;#39;2p&amp;#39; $i/&amp;#34;modified.txt&amp;#34;|awk -v A=$i -v B=$num-2 &amp;#39;{print $2*B}&amp;#39; &amp;gt;&amp;gt; a.txt;sed -n &amp;#39;3p&amp;#39; $i/&amp;#34;modified.txt&amp;#34;|awk &amp;#39;{print $2}&amp;#39; &amp;gt;&amp;gt; a.txt;done;&lt;/span&gt; 
 &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
        num&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls $i|wc -l&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
        num&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;$num&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;#print $i,$num&lt;/span&gt;
        sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2p&amp;#39;&lt;/span&gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified.txt&amp;#34;&lt;/span&gt;|awk -v A&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$i -v B&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$num &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $2*B}&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; shengli.txt
        sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3p&amp;#39;&lt;/span&gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified.txt&amp;#34;&lt;/span&gt;|awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; shengli.txt
        sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2p&amp;#39;&lt;/span&gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified.txt&amp;#34;&lt;/span&gt;|awk -v A&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$i -v B&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$num &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $2*B}&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; zuli.txt
        sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3p&amp;#39;&lt;/span&gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified.txt&amp;#34;&lt;/span&gt;|awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $4}&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; zuli.txt
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;

sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;N;s/\n/ /&amp;#39;&lt;/span&gt; shengli.txt
sort -n shengli.txt &amp;gt; shenglimodified.txt
sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;N;s/\n/ /&amp;#39;&lt;/span&gt; zuli.txt
sort -n zuli.txt &amp;gt; zulimodified.txt

gnuplot&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set ter &amp;#39;png&amp;#39; 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set out &amp;#39;shengli.png&amp;#39; 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;plot &amp;#34;shenglimodified.txt&amp;#34; t &amp;#39;cl&amp;#39; w lp
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
gnuplot&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set ter &amp;#39;png&amp;#39; 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set out &amp;#39;zuli.png&amp;#39; 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;plot &amp;#34;zulimodified.txt&amp;#34; t &amp;#39;cd&amp;#39; w lp
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
rm -rf zuli.txt
rm -rf shengli.txt
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;


&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  plotCp&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  用于打印cp曲线&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
plotCp&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
 &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d $i &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;6,47p&amp;#39;&lt;/span&gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified.txt&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cpUp.txt&amp;#34;&lt;/span&gt;;sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;49,93p&amp;#39;&lt;/span&gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modified.txt&amp;#34;&lt;/span&gt; |sort -k &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; -nr &amp;gt;&amp;gt; $i/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cpUp.txt&amp;#34;&lt;/span&gt;;cpGrid
            &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#---  FUNCTION  ----------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#          NAME:  cpGrid&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   DESCRIPTION:  注意  gnuplot必须放在句首&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PARAMETERS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#       RETURNS:&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
cpGrid&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
gnuplot&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set ter &amp;#39;png&amp;#39; 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set out &amp;#39;$i/cpUp.png&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set xtics rotate by -45
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set ytics rotate by -45
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;plot &amp;#34;$i/cpUp.txt&amp;#34; t &amp;#39;cp&amp;#39; w lp
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 执行函数&lt;/span&gt;
deleteDensity
fenLei
getFileIntoDirNew
blankEmptyLine
cal
plot
plotCp


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;http://dngood.blog.51cto.com/446195/703347&#34;&gt;shell脚本集合1&lt;/a&gt;
&lt;a href=&#34;http://dngood.blog.51cto.com/446195/764563&#34;&gt;shell脚本集合2&lt;/a&gt;
&lt;a href=&#34;http://dngood.blog.51cto.com/446195/1107458&#34;&gt;shell脚本集合3&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
