<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>写作 | Macro Life</title>
    <link>https://jueqingsizhe66.github.io/categories/%E5%86%99%E4%BD%9C/</link>
      <atom:link href="https://jueqingsizhe66.github.io/categories/%E5%86%99%E4%BD%9C/index.xml" rel="self" type="application/rss+xml" />
    <description>写作</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>©2019</copyright><lastBuildDate>Thu, 18 May 2017 17:14:28 +0800</lastBuildDate>
    <image>
      <url>https://jueqingsizhe66.github.io/img/icon-192.png</url>
      <title>写作</title>
      <link>https://jueqingsizhe66.github.io/categories/%E5%86%99%E4%BD%9C/</link>
    </image>
    
    <item>
      <title>See From NoteExpress</title>
      <link>https://jueqingsizhe66.github.io/blog/2017/05/18/see-from-noteexpress/</link>
      <pubDate>Thu, 18 May 2017 17:14:28 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2017/05/18/see-from-noteexpress/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://www.inoteexpress.com/aegean/&#34; target=&#34;_blank&#34;&gt; NoteExpress &lt;/a&gt; 是一个文档管理软件，用于管理参考文件，可以方便的word等进行关联插入相关参考文献。 然而他有一个样式编辑器,很普通，却是让我有点触动。&lt;/p&gt;

&lt;h1 id=&#34;三个定义&#34;&gt;三个定义&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;过滤系统：让你的程序获得合适的数据，在运算系统之前.[struts的拦截器];你需要进行过滤，才能得到满足运算需要的数据
运算系统：合适的数据进行算法运算，矩阵运算等
样式系统: 运算完的数据进行输出,很多美化的工作。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;linux的ls可以有很多选项，可以让你的结果不一样，这个选项的效果其实跟样式系统的效果是一致的，都是你对 现实的输出不满意，于是修改，使得你的输出更加perfect&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;
ls 
ls -ls 
ls -lsh  # 显示文件大小按照人类比较好识别的方式
ls -lsha # 显示隐藏文件

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://www.cnblogs.com/ggjucheng/archive/2013/01/13/2858470.html&#34; target=&#34;_blank&#34;&gt; awk &lt;/a&gt; 是linux重要的过滤工具，他就好象是一个鱼网过滤器一样，按照孔的形状过滤字段, 也叫做字段级别过滤器。  &lt;a href=&#34;http://www.iteye.com/topic/587673&#34; target=&#34;_blank&#34;&gt; sed &lt;/a&gt; 是一个行修改工具，行级别过滤器,  有&lt;a href=&#34;http://blog.csdn.net/itsenlin/article/details/21129405&#34; target=&#34;_blank&#34;&gt; 几种典型的模式 &lt;/a&gt; s,p,d,x,g,h etc&lt;/p&gt;

&lt;p&gt;但就是这么简单的几个系统，却是组成了很多业务系统的实现过程的定义，你可以很容易把它替换成为你当前正在处理的阶段，see here to there.&lt;/p&gt;

&lt;h1 id=&#34;one-sentence&#34;&gt;One Sentence&lt;/h1&gt;

&lt;p&gt;每个人都应该有自己的样式系统，this is your style, nobody can change you! Different Style System makes you different. 人应该有点脾气.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>pandoc markdown注意点</title>
      <link>https://jueqingsizhe66.github.io/blog/2015/06/11/pandoc-mdzhu-yi-dian/</link>
      <pubDate>Thu, 11 Jun 2015 12:30:13 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2015/06/11/pandoc-mdzhu-yi-dian/</guid>
      <description>&lt;p&gt;pandoc是markdown升级版工具，用于制作幻灯片相当好用，然而使用过程需要注意以下几点。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;markdown文件  # 大标题不能跟上文本   ## 二标题才可以跟文本，且是一张幻灯
片。&lt;/li&gt;
&lt;li&gt;org文件使用 &amp;mdash;&amp;mdash;&amp;mdash;来强制执行创建新的幻灯片&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;markdown&#34;&gt;markdown&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% Ye Zhaoliang
% Openfoam Introduction
% 11th June,2015

# Openfoam简介

## 1求解器(Solver 数值结算)

  openfoam采用c++编写的类库，开源免费。所以可以把它当作一种类似于String的基本类来使用。
 openfoam框架从使用级别来看主要分为两类：

    - 流体计算
    - 化学反应
    - 换热
    - 结构动力学
    - 电磁场
    - 金融评估等

## 2工具(Utility)

    - 前处理
      + 建模
      + 网格
      + 边界条件
    - 后处理
      + 计算结果显示

## cavity case

cavity case的文件夹简介（等价于fluent的.cas,只不过fluent集成为一个文件，openfoam是一个文件夹)

# 这便使用代码快包裹
├── 0 (初始条件文件夹)
│   ├── p
│   └── U
├── constant
│   ├── polyMesh(网格文件夹)
│   │   └── blockMeshDict
│   └── transportProperties(流体物性参数 传热物性参数)
└── system
    ├── controlDict(控制字典)
    ├── fvSchemes(离散格式 更高级的运用)
    └── fvSolution(求解方法)

# 运用的三个级别[%]

## 三个级别

- [ ] 直接利用解释器(替代商业求解器 初始点)
- [ ] 自定义求解器(关注点)
      + 根据自己的求解流程组合求解器(类库调用)
      + 不需要关心对流项和扩散项是如何离散的
      + 也不需要关心湍流模型
- [ ] 更高级的运用:编写离散格式

## 自定义求解器

    按照自己的_求解流程_编写求解。

##不关心

    + 离散格式(时间项和对流项)
    + 大型代数方程的求解，如何加速等。

## 传热求解

这边使用代码快包裹
    开始
    |
    初始值
    |
    -----------------&amp;lt;------------------------------
    |                                              |
    用CFD进行室内温度计算                          |
    |                   |                          ^
    辐射传热计算Qri  导热计算Qcdi                  |
    |                   |                          |
    由热平衡求新的对流传热量Qcvi^(m+1)             |
    |                                              |
    收敛条件 --------&amp;gt;-----------------------------|
    |
    结束

## 自定义离散格式

   针对于研究离散格式和代数求解器的用户
   目的： 创造更高效更精确的离散方法
   操作： 修改finiteVolumn...
          尤其是对流项。openfoam 提供了NVD和TVD的模板（40以上）
          对流项离散依然是一种研究方向。

## cavity源码文件的主要构成部分

   +  location
     - &amp;quot;system&amp;quot;
     - &amp;quot;constant&amp;quot;
     - &amp;quot;0&amp;quot;
   + class
     - dictionary
     - volVectorField
     - volScalarField

##

   + object
     - dictionary
       + fvschemes对象
       + fvsolution对象
       + controldict对象
       + blockmeshdict
       + transportproperties
     - volVectorField
       + U对象
     - volScalarField
       + p对象



&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;org-mode&#34;&gt;org-mode&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;* Openfoam简介
  openfoam采用c++编写的类库，开源免费。所以可以把它当作一种类似于String的基本类来使用。

 openfoam框架从使用级别来看主要分为两类：
----------
** 1求解器(Solver 数值结算)
    - 流体计算
    - 化学反应
    - 换热
    - 结构动力学
    - 电磁场
    - 金融评估等
** 2工具(Utility)
    - 前处理
      + 建模
      + 网格
      + 边界条件
    - 后处理
      + 计算结果显示

----------------------
** cavity case
cavity case的文件夹简介（等价于fluent的.cas,只不过fluent集成为一个文件，openfoam是一个文件夹)

#+begin_src sh
├── 0 (初始条件文件夹)
│   ├── p
│   └── U
├── constant
│   ├── polyMesh(网格文件夹)
│   │   └── blockMeshDict
│   └── transportProperties(流体物性参数 传热物性参数)
└── system
    ├── controlDict(控制字典)
    ├── fvSchemes(离散格式 更高级的运用)
    └── fvSolution(求解方法)
#+end_src 


* 运用的三个级别[%]

- [ ] 直接利用解释器(替代商业求解器 初始点)
- [ ] 自定义求解器(关注点)

      + 根据自己的求解流程组合求解器(类库调用)
      + 不需要关心对流项和扩散项是如何离散的
      + 也不需要关心湍流模型

- [ ] 更高级的运用:编写离散格式

---------
** 自定义求解器
    按照自己的_求解流程_编写求解。

** 不关心
    + 离散格式(时间项和对流项)
    + 大型代数方程的求解，如何加速等。

----------
** 传热求解
#+begin_src sh
    开始
    |
    初始值
    |
    -----------------&amp;lt;------------------------------
    |                                              |
    用CFD进行室内温度计算                          |
    |                   |                          ^
    辐射传热计算Qri  导热计算Qcdi                  |
    |                   |                          |
    由热平衡求新的对流传热量Qcvi^(m+1)             |
    |                                              |
    收敛条件 --------&amp;gt;-----------------------------|
    |
    结束
#+end_src
--------------------------------
** 自定义离散格式

   针对于研究离散格式和代数求解器的用户
   目的： 创造更高效更精确的离散方法
   操作： 修改finiteVolumn...
          尤其是对流项。openfoam 提供了NVD和TVD的模板（40以上）
          对流项离散依然是一种研究方向。

-------
** cavity源码文件的主要组成部分

   +  location
     - &amp;quot;system&amp;quot;
     - &amp;quot;constant&amp;quot;
     - &amp;quot;0&amp;quot;
  
   + class
     - dictionary
     - volVectorField
     - volScalarField
-----------
   + object
     - dictionary
       + fvschemes对象
       + fvsolution对象
       + controldict对象
       + blockmeshdict
       + transportproperties
     - volVectorField
       + U对象
     - volScalarField
       + p对象


&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>markdown个人偏见</title>
      <link>https://jueqingsizhe66.github.io/blog/2014/05/15/mdge-ren-pian-jian/</link>
      <pubDate>Thu, 15 May 2014 22:57:56 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2014/05/15/mdge-ren-pian-jian/</guid>
      <description>&lt;p&gt;###嵌套的列表###
1. 有序   数字
2. 无序   * + 注意在写法上的增加缩进&lt;/p&gt;

&lt;p&gt;###四个部分：###&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;重点&lt;/li&gt;
&lt;li&gt;分类&lt;/li&gt;
&lt;li&gt;链接&lt;/li&gt;
&lt;li&gt;图片&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;markdown基本上没有下划线，也没有颜色，因为hacker不需要？ 其实也需要！只不过更关注的是重点（着重  真正的问题 大小和重量）和分类（列表） 链接（源自哪边）  需要一些图片（也许颜色和下划线 可以这样引入） 还有更重要的是真实的代码快（这个地方特别讲究，所以每种语言有不同的标记，也许代码的颜色才是黑客真正的颜色），一般他们还特别注意版权（也就是引用快，所以还有&amp;gt; , &amp;gt;&amp;gt; etc的选项）其他的工作就由html标记，但是特别区域快的摆放，特别注意前后的空行.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;如果加入空行就会显示空行，如果不加入空行会把前后的数据叠加在一起，除非是加入标题。空行和加标题的一个效果类似，会使前后的数据用空行分开，另起一行！&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在&amp;gt; 缩进的前方加入多余空格会造成*代码块*的效果&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如果&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;标签没有&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt;的加入没有表格的效果，还是一堆数据&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://daringfireball.net/projects/markdown/syntax&#34; target=&#34;_blank&#34;&gt;For any markup that is not covered by Markdown’s syntax, you simply use HTML itself&lt;/a&gt;. There’s no need to preface it or delimit it to indicate that you’re switching from Markdown to HTML; you just use the tags.&lt;/p&gt;

&lt;p&gt;The only restrictions are that block-level HTML elements — e.g.&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;,etc. — must be separated from surrounding content by blank lines, and the start and end tags of the block should not be indented** with tabs or spaces**. Markdown is smart enough not to add extra (unwanted) &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags around HTML block-level tags.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;##&lt;a href=&#34;http://hi.baidu.com/zolyfxughcbdkpq/item/85ea887c03081c2bd7a89cc1&#34; target=&#34;_blank&#34;&gt;&lt;u&gt;一些常用的markdown没有的编辑操作：&lt;/u&gt;&lt;/a&gt;###&lt;/p&gt;

&lt;p&gt;###下划线###&lt;/p&gt;

&lt;p&gt;&lt;u&gt;代码:《u》下划线《/u》 &lt;/u&gt;&lt;/p&gt;

&lt;p&gt;中间标明:要加下划线的文字.&lt;/p&gt;

&lt;p&gt;###删除线###
代码:《s》删除线《/s》&lt;/p&gt;

&lt;p&gt;&lt;s&gt;中间标明:要加删除线的文字.&lt;/s&gt;&lt;/p&gt;

&lt;p&gt;###更改字体颜色：###&lt;/p&gt;

&lt;p&gt;《font color=&amp;ldquo;#value&amp;rdquo;》写上你想写的字《/font》
(其中value值在000000与FFFFFF(16位进制)之间修改#后面的数值，就可以改变字体的颜色。&lt;/p&gt;

&lt;p&gt;###部分常用颜色代码：###&lt;/p&gt;

&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&lt;font color=&#34;#ff0000&#34;&gt;#ff0000 红色的字喔！&lt;/td&gt;&lt;/font&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;font color=&#34;#ff8000&#34;&gt;#ff8000 橙色的字喔！&lt;/td&gt;&lt;/font&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;font color=&#34;#ffff00&#34;&gt;#ffff00 黄色的字喔！&lt;/td&gt; &lt;/font&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;font color=&#34;#00ff00&#34;&gt;#00ff00 绿色的字喔！&lt;/td&gt;&lt;/font&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;font color=&#34;#0080ff&#34;&gt;#0080ff 蓝色的字喔！&lt;/td&gt; &lt;/font&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;font color=&#34;#0000a0&#34;&gt;#0000a0 靛色的字喔！&lt;/td&gt;&lt;/font&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;font color=&#34;#8000ff&#34;&gt;#8000ff 紫色的字喔！&lt;/td&gt; &lt;/font&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;font color=&#34;#000000&#34;&gt;#000000 黑色的字喔！&lt;/td&gt;&lt;/font&gt; &lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;font color=&#34;#c0c0c0&#34;&gt;#c0c0c0 灰色的字喔！&lt;/td&gt;&lt;/font&gt;&lt;/tr&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>markdown_learning</title>
      <link>https://jueqingsizhe66.github.io/blog/2014/05/13/md-learning/</link>
      <pubDate>Tue, 13 May 2014 16:43:37 +0800</pubDate>
      <guid>https://jueqingsizhe66.github.io/blog/2014/05/13/md-learning/</guid>
      <description>&lt;p&gt;#markdown code part start&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;* emphasize
* seperate line
* auto link
* picture
*************

+ emphaize
  &amp;gt; __You__ are strong
    + **he** is strong
    + *she* is em
    + _it_ is em
  
  **********
  
  use the `printf()` function
  
  这是一个普通段落。

&amp;lt;table&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Foo&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;

这是另一个普通段落。

&amp;gt; This is the first level of quoting.
&amp;gt;
&amp;gt; &amp;gt; This is nested blockquote.
&amp;gt;
&amp;gt; Back to the first level.

I get 10 times more traffic from [Google] [1] than from
[Yahoo] [2] or [MSN] [3].

  [1]: http://google.com/        &amp;quot;Google&amp;quot;
  [2]: http://search.yahoo.com/  &amp;quot;Yahoo Search&amp;quot;
  [3]: http://search.msn.com/    &amp;quot;MSN Search&amp;quot;
  
  ![Alt text][4]
  [4]:   http://image.baidu.com/detail/newindex?col=%E5%A3%81%E7%BA%B8&amp;amp;tag=%E5%88%9B%E6%84%8F&amp;amp;pn=1&amp;amp;pid=9433162230&amp;amp;aid=329840961&amp;amp;from=1&amp;amp;tag3=%E6%8A%A4%E7%9C%BC&amp;amp;app_id=578130&amp;amp;user_id=851997103&amp;amp;is_album=0&amp;amp;sortlog=0&amp;amp;width=1280&amp;amp;height=800&amp;amp;ic=0
  
  ___________________
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;#code part end#&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;emphasize&lt;/li&gt;
&lt;li&gt;seperate line&lt;/li&gt;
&lt;li&gt;auto link&lt;/li&gt;

&lt;li&gt;&lt;p&gt;picture&lt;/p&gt;

&lt;hr /&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;emphaize
&amp;gt; + &lt;strong&gt;You&lt;/strong&gt; are strong
&amp;gt; + &lt;strong&gt;he&lt;/strong&gt; is strong
&amp;gt; + &lt;em&gt;she&lt;/em&gt; is em
&amp;gt; + &lt;em&gt;it&lt;/em&gt; is em
&amp;gt; &amp;gt; - xinran comes from hebei
&amp;gt; &amp;gt; - xinran is a beautiful and smart girl&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;use the &lt;code&gt;printf()&lt;/code&gt; function&lt;/p&gt;

&lt;p&gt;这是一个普通段落。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;youxu&lt;/li&gt;
&lt;li&gt;lie&lt;/li&gt;
&lt;li&gt;biao&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;Foo&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;这是另一个普通段落。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is the first level of quoting.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is nested blockquote.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Back to the first level.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I get 10 times more traffic from &lt;a href=&#34;http://google.com/&#34; title=&#34;Google&#34; target=&#34;_blank&#34;&gt;Google&lt;/a&gt; than from
&lt;a href=&#34;http://search.yahoo.com/&#34; title=&#34;Yahoo Search&#34; target=&#34;_blank&#34;&gt;Yahoo&lt;/a&gt; or &lt;a href=&#34;http://search.msn.com/&#34; title=&#34;MSN Search&#34; target=&#34;_blank&#34;&gt;MSN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://image.baidu.com/detail/newindex?col=%E5%A3%81%E7%BA%B8&amp;amp;tag=%E5%88%9B%E6%84%8F&amp;amp;pn=1&amp;amp;pid=9433162230&amp;amp;aid=329840961&amp;amp;from=1&amp;amp;tag3=%E6%8A%A4%E7%9C%BC&amp;amp;app_id=578130&amp;amp;user_id=851997103&amp;amp;is_album=0&amp;amp;sortlog=0&amp;amp;width=1280&amp;amp;height=800&amp;amp;ic=0&#34; alt=&#34;Alt text&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
